version: "3"

# Note:
# - Before running docker compose (dev) for the first time, prepare the following directory for studio-dev-be.
#   ```
#   cd {APP_SRC_DIR}
#   mkdir .snakemake ../experiments_datasets ../experiments_public
#   chmod 777 ./ logs/ logs/* .snakemake/ ../experiments_datasets/ ../experiments_public/
#   ```

services:
  db:
    image: mariadb:10.11
    ports:
      - "127.0.0.1:23306:3306"
    env_file:
      - studio/config/.env
    volumes:
      - db_data:/var/lib/mysql
    environment:
      TZ: Asia/Tokyo

  studio-dev-be:
    build:
      context: .
      dockerfile: studio/config/docker/Dockerfile.dev
    working_dir: /app
    volumes:
      - .:/app
      - ../optinist-docker-volumes/.conda/pkgs:/app/.conda/pkgs

      # optinist data outputs directories
      - ../optinist-docker-volumes/.snakemake/:/app/.snakemake
      - ../optinist-docker-volumes/logs/:/app/logs
      - ../optinist-docker-volumes/studio_data/:/app/studio_data

      # external datasets directories
      - ../experiments_datasets/:/data/experiments_datasets
      - ../experiments_public/:/data/experiments_public
    ports:
      - "127.0.0.1:8000:8000"
    command: >
        bash -c "
          alembic upgrade head &&
          python main.py --reload --host 0.0.0.0 --port 8000
        "
    user: optinist
    environment:
      PYTHONPATH: /app/
      TZ: Asia/Tokyo
      OPTINIST_DIR: /app/studio_data
      POETRY_VIRTUALENVS_CREATE: false
      CONDA_CHANNEL_PRIORITY: strict
    depends_on:
      - db

  studio-dev-fe:
    image: node:20.8.0-alpine3.18
    working_dir: /app/frontend
    volumes:
      - ./frontend/:/app/frontend/:cached
    ports:
      - "127.0.0.1:3000:3000"
    command: ash -c 'yarn install && yarn start'
    environment:
      TZ: Asia/Tokyo

  phpmyadmin-dev:
    image: phpmyadmin
    volumes:
      - ./docker/php-phpmyadmin.ini:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    env_file:
      - studio/config/.env
    ports:
      - "127.0.0.1:20080:80"
    environment:
      TZ: Asia/Tokyo

volumes:
  db_data:
