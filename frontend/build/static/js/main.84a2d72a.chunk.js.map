{"version":3,"sources":["@types/index.ts","store/slice/User/UserSelector.ts","store/slice/User/UserType.ts","utils/auth/AuthUtils.ts","api/auth/Auth.ts","const/API.ts","utils/axios.ts","api/users/UsersMe.ts","api/users/UsersAdmin.ts","store/slice/User/UserActions.ts","pages/Dashboard/index.tsx","components/common/Loading.tsx","const/Auth.ts","components/common/Input.tsx","components/Account/InputPassword.tsx","components/Account/ChangePasswordModal.tsx","components/common/DeleteConfirmModal.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Login/index.tsx","pages/ResetPassword/index.tsx","store/slice/Workspace/WorkspaceSelector.ts","api/Workspace/index.ts","store/slice/Workspace/WorkspaceType.ts","store/slice/Workspace/WorkspacesActions.ts","store/slice/Database/DatabaseType.ts","api/database/index.ts","store/slice/Database/DatabaseActions.ts","store/slice/User/UserSlice.ts","components/PopupShare.tsx","utils/checkRole.ts","components/common/PaginationCustom.tsx","pages/Workspace/index.tsx","utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/slice/Run/RunSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Workflow/WorkflowType.ts","api/workflow/Workflow.ts","store/slice/Workflow/WorkflowActions.ts","store/slice/Workspace/WorkspaceSlice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Experiments/ExperimentsSelectors.ts","components/Workspace/Experiment/ExperimentStatusIcon.tsx","utils/EqualityUtils.ts","components/Workspace/Experiment/Button/DownloadButton.tsx","components/Workspace/Experiment/CollapsibleTable.tsx","store/slice/Pipeline/PipelineSlice.ts","components/Workspace/Experiment/Button/DeleteButton.tsx","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Workspace/Experiment/Button/ReproduceButton.tsx","components/Workspace/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","const/Layout.ts","components/Workspace/Experiment/Experiment.tsx","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/Workspace/FlowChart/DnDItemType.ts","components/Workspace/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/Workspace/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/Workspace/FlowChart/Snakemake.tsx","components/Workspace/RunButtons.tsx","components/Workspace/FlowChart/ImportWorkflowConfigButton.tsx","components/Workspace/ToolBar.tsx","components/Workspace/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/Workspace/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Workspace/FlowChart/DialogContext.tsx","components/Workspace/FlowChart/FlowChartNode/FileSelect.tsx","components/Workspace/FlowChart/FlowChartNode/FlowChartUtils.ts","components/Workspace/FlowChart/FlowChartNode/ImageFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/Workspace/Visualize/DataContext.tsx","components/Workspace/Visualize/Plot/CsvPlot.tsx","components/Workspace/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/Workspace/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/Workspace/FlowChart/FlowChartNode/FluoFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/MatlabFileNode.tsx","components/common/DialogImage.tsx","components/common/SwitchCustom.tsx","components/Database/DatabaseExperiments.tsx","components/Workspace/FlowChart/FlowChartNode/ExpDbNode.tsx","components/Workspace/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/Workspace/FlowChart/CustomEdge.tsx","components/Workspace/Visualize/Plot/HeatMapPlot.tsx","components/Workspace/Visualize/Plot/ImagePlot.tsx","components/Workspace/Visualize/Plot/RoiPlot.tsx","components/Workspace/Visualize/Plot/ScatterPlot.tsx","components/Workspace/Visualize/Plot/TimeSeriesPlot.tsx","components/Workspace/Visualize/Plot/BarPlot.tsx","components/Workspace/Visualize/Plot/HTMLPlot.tsx","components/Workspace/Visualize/Plot/HistogramPlot.tsx","components/Workspace/Visualize/Plot/LinePlot.tsx","components/Workspace/Visualize/Plot/PiePlot.tsx","components/Workspace/Visualize/Plot/PolarPlot.tsx","components/Workspace/Visualize/DisplayDataItem.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/Workspace/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/Workspace/FlowChart/AlgorithmParamForm.tsx","components/Workspace/FlowChart/RightDrawer.tsx","components/common/CurrentPipelineInfo.tsx","components/Workspace/FlowChart/FlowChart.tsx","components/Workspace/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Workspace/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Workspace/Visualize/FilePathSelect.tsx","components/Workspace/Visualize/VisualizeItem.tsx","components/Workspace/Visualize/FlexItemList.tsx","components/Workspace/Visualize/Editor/GradientColorPicker.tsx","components/Workspace/Visualize/Editor/SaveFig.tsx","components/Workspace/Visualize/Editor/ImageItemEditor.tsx","components/Workspace/Visualize/Editor/CsvItemEditor.tsx","components/Workspace/Visualize/Editor/HeatmapItemEditor.tsx","components/Workspace/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Workspace/Visualize/Editor/RoiItemEditor.tsx","components/Workspace/Visualize/Editor/ScatterItemEditor.tsx","components/Workspace/Visualize/Editor/BarItemEditor.tsx","components/Workspace/Visualize/Editor/HistogramItemEditor.tsx","components/Workspace/Visualize/Editor/LineItemEditor.tsx","components/Workspace/Visualize/Editor/PieItemEditor.tsx","components/Workspace/Visualize/Editor/PolarItemEditor.tsx","components/Workspace/Visualize/VisualizeItemEditor.tsx","components/Workspace/Visualize/Visualize.tsx","pages/Workspace/Workspace.tsx","store/slice/Pipeline/PipelineHook.ts","components/logo.png","components/Workspace/WorkspaceTabs.tsx","components/Layout/Profile.tsx","components/Layout/Header.tsx","components/Layout/LeftMenu.tsx","components/Layout/index.tsx","components/Database/DatabaseWrapper.tsx","pages/Database/Experiments.tsx","components/PublicLayout/PublicHeader.tsx","components/PublicLayout/PublicFooter.tsx","components/PublicLayout/index.tsx","components/PublicDatabase/PublicDatabaseWrapper.tsx","pages/PublicDatabase/PublicExperiments.tsx","components/Database/DatabaseCells.tsx","pages/PublicDatabase/PublicCells.tsx","pages/Database/Cells.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Database/DatabaseSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["ROLE","SHARE","WAITING_TIME","selectCurrentUser","state","user","currentUser","selectListUser","listUser","selectLoading","loading","selectListSearch","listUserSearch","isAdmin","ADMIN","role_id","isAdminOrManager","DATA_MANAGER","includes","USER_SLICE_NAME","saveToken","access_token","localStorage","setItem","getToken","getItem","logout","removeItem","removeToken","removeExToken","window","location","href","loginApi","data","a","axios","post","response","refreshTokenApi","refresh_token","sendResetPasswordMailApi","email","HOST","process","PROTO","BASE_URL","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","error","Promise","reject","res","status","getMeApi","get","updateMeApi","put","updateMePasswordApi","deleteMeApi","delete","createUserApi","listUsersApi","paramsNew","qs","stringify","indices","updateUserApi","id","deleteUserApi","getListSearchApi","keyword","login","createAsyncThunk","thunkAPI","responseData","rejectWithValue","getMe","_","updateMe","dispatch","deleteMe","updateMePassword","getListUser","params","getListSearch","createUser","props","updateUser","deleteUser","BoxWrapper","styled","Box","width","height","LinkWrapper","Link","textDecoration","DashboardWrapper","display","alignItems","justifyContent","DashboardContent","padding","flexWrap","gap","BoxMenu","backgroundColor","borderRadius","color","textAlign","fontSize","transition","transform","TitleMenu","Typography","marginTop","Dashboard","useDispatch","admin","useSelector","useEffect","style","paddingLeft","to","LoaderWrapper","theme","top","bottom","left","right","position","zIndex","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","border","Loading","regexPassword","regexEmail","regexIgnoreS","Input","shouldForwardProp","borderColor","marginBottom","outline","cursor","TextError","minHeight","lineHeight","wordBreak","InputPassword","p","useState","type","setType","sx","onClick","BoxTitle","ContentDelete","BoxConfirm","margin","FormInline","Label","ChangePasswordModal","onClose","open","onSubmit","errors","setErrors","values","setValues","onChangeValue","event","validate","target","name","value","confirm_password","validatePassword","length","test","validateReEnter","new_password","onChangePass","newErrors","password","onCloseModal","Modal","fontWeight","onChange","e","onBlur","placeholder","reEnter","pre","Button","variant","textTransform","DeleteConfirmModal","isLoading","titleSubmit","description","textDelete","setTextDelete","whiteSpace","ml","AccountWrapper","BoxFlex","maxWidth","Title","BoxData","minWidth","TitleData","Account","navigate","useNavigate","isDeleteConfirmModalOpen","setIsDeleteConfirmModalOpen","isChangePwModalOpen","setIsChangePwModalOpen","isEditName","setIsEditName","isName","setIsName","ref","useRef","enqueueSnackbar","useSnackbar","handleClickVariant","mess","handleCloseDeleteComfirmModal","onConfirmDelete","handleCloseChangePw","onConfirmChangePw","oldPass","newPass","old_password","organization","autoFocus","onKeyDown","key","current","querySelector","blur","IconButton","role","newRole","OPERATOR","GUEST_OPERATOR","getRole","mt","AccountDelete","LoginWrapper","LoginContent","boxShadow","FormSignUp","LabelField","LableRequired","marginLeft","Description","spacing","LinkWrappper","ButtonLogin","Login","setIsLoading","preventDefault","validateSubmit","unwrap","then","catch","finally","autoComplete","Stack","flexDirection","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","setTimeout","alert","validateEmail","selectWorkspaceListUserShare","workspace","listUserShare","selectWorkspaceData","selectActiveTab","currentWorkspace","selectedTab","selectCurrentWorkspaceId","workspaceId","selectIsLoadingWorkspaceList","selectIsWorkspaceOwner","ownerId","getWorkspaceApi","getWorkspacesApi","delWorkspaceApi","postWorkspaceApi","putWorkspaceApi","importWorkspaceApi","todo_dummy","exportWorkspaceApi","getListUserShareWorkspaceApi","postListUserShareWorkspaceApi","WORKSPACE_SLICE_NAME","getWorkspace","getWorkspaceList","delWorkspace","Number","postWorkspace","putWorkspace","getListUserShareWorkSpaces","postListUserShareWorkspaces","DATABASE_SLICE_NAME","getExperimentsPublicApi","getCellsPublicApi","getExperimentsApi","getCellsApi","postPublishApi","getListUserShareApi","postListUserShareApi","getExperimentsDatabase","getCellsDatabase","getExperimentsPublicDatabase","getCellsPublicDatabase","postPublish","getListUserShare","postListUserShare","initialState","undefined","userSlice","createSlice","reducers","resetUserSearch","extraReducers","builder","addCase","fulfilled","action","payload","ex_token","addMatcher","isAnyOf","rejected","pending","actions","TableListSearch","usersSuggest","handleAddListUser","stateUserShare","addEventListener","onMouseDown","removeEventListener","contains","TableListSearchWrapper","console","log","UlCustom","map","item","isSelected","some","i","LiCustom","DialogCustom","Dialog","background","borderBottomLeftRadius","borderBottomRightRadius","maxHeight","overflow","listStyle","PopupShare","handleClose","usersShare","isWorkspace","title","shareType","setShareType","textSearch","setTextSearch","setStateUserShare","clearTimeout","columnsShare","useCallback","handleShareFalse","field","headerName","renderCell","row","filterable","sortable","share","JSON","users","handleOke","newUserIds","newType","ORGANIZATION","USERS","user_ids","share_type","DialogTitle","DialogContent","DialogContentText","expId","FormControl","RadioGroup","FormControlLabel","control","Radio","label","find","DataGrid","rows","columns","stopPropagation","indexCheck","findIndex","newStateUserShare","filter","index","hideFooterPagination","DialogActions","isMine","idUserWorkSpace","PaginationCustomWrapper","PaginationCustom","handlePage","handleLimit","limit","NativeSelect","inputProps","offset","items","total","Pagination","count","Math","ceil","page","handleOpenPopupShare","handleOpenPopupDel","handleDownload","handleNavWorkflow","handleNavRecords","onEdit","flex","editable","Tooltip","placement","textOverflow","ButtonIcon","overflowWrap","moment","format","size","shared_count","PopupNew","setNewWorkSpace","handleOkNew","PopupDelete","handleOkDel","nameWorkspace","WorkspacesWrapper","WorkspacesTitle","Workspaces","del","new","shareId","setOpen","workspaceDel","setWorkspaceDel","newWorkspace","setError","initName","setInitName","rowModesModel","setRowModesModel","useSearchParams","searchParams","setParams","dataParams","useMemo","pagi","processRowUpdate","newRow","onCellClick","object","Object","keys","forEach","mode","GridRowModes","View","ignoreModifications","editMode","tab","Edit","Boolean","onRowModesModelChange","newRowModesModel","isCellEditable","onProcessRowUpdateError","onRowEditStop","hideFooter","_isSubmit","getChildParam","path","ParamMap","result","node","isParamChild","children","param","convertToParamMap","dto","keyList","entries","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","algorithmNode","selectAlgorithmName","selectAlgorithmParams","selectAlgorithmNodeNotExist","selectAlgorithmNode","selectFlowNodes","flowElement","flowNodes","selectFlowEdges","flowEdges","selectFlowPosition","flowPosition","selectNodeById","selectNodeLabelById","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","isMatlabInputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","selectMatlabInputNodeParam","selectExpDbInputNodeSelectedFilePath","isExpDbInputNode","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","nodes","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","edge","runApi","runByUidApi","pendingNodeIdList","cancelResultApi","getState","runByCurrentUid","currentUid","pollRunResult","cancelResult","String","deleteExperimentByUidApi","deleteExperimentByListApi","uidList","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","fetchExperimentApi","workspace_id","renameExperiment","new_name","patch","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","fetchExperiment","WORKFLOW_SLICE_NAME","reproduceWorkflowApi","downloadWorkflowConfigApi","importWorkflowConfigApi","formData","reproduceWorkflow","importWorkflowConfig","workspaceSlice","setActiveTab","setCurrentWorkspace","clearCurrentWorkspace","meta","convertToExperimentType","functions","function","convertToExperimentStatus","success","unique_id","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","experimentsSlice","clearExperiments","experimentList","convertToExperimentListType","v","selectExperiments","experiments","selectExperimentsStatusIsUninitialized","selectExperimentsStatusIsFulfilled","selectExperimentsStatusIsError","selectExperimentsErrorMessage","selectExperimentList","selectExperiment","selectExperimentName","selectExperimentFunction","ExperimentStatusIcon","React","memo","arrayEqualityFn","b","every","twoDimarrayEqualityFn","NWBDownloadButton","useContext","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","click","revokeObjectURL","disabled","download","className","SnakemakeDownloadButton","WorkflowDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","unmountOnExit","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","selectExperimentFunctionMessage","anchorEl","setAnchorEl","scope","currentTarget","Popover","anchorOrigin","vertical","horizontal","pipelineSlice","setRunBtnOption","runBtnOption","clearCurrentPipeline","DeleteButton","currentPipelineUid","isRunning","isPending","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","addRoiApi","mergeRoiApi","deleteRoiApi","getLineDataApi","getPolarDataApi","getHistogramDataApi","getPieDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","getHistogramData","getLineData","getPieData","getPolarData","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","selectHistogramDataIsInitialized","histogram","selectLineDataIsInitialized","line","selectPieDataIsInitialized","pie","selectPolarDataIsInitialized","polar","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","isHistogramItem","isLineItem","isPolarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","alpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","max","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","selectHistogramItemBins","bins","selectLineItemSelectedIndex","selectedIndex","selectPolarItemSelectedIndex","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x","y","round","x1","x2","y1","y2","selectedZList","z","zNum","selectedZ","deleteDisplayItem","createAction","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","histogramItemInitialValue","lineItemInitialValue","pieItemInitialValue","polarItemInitialValue","matlabItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","targetItem","selectItem","reset","setRoiItemFilePath","outputKey","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","resetAllOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","setHistogramItemBins","setLineItemSelectedIndex","setPolartemItemSelectedIndex","imageItemId","idList","reduce","nextId","args","ReproduceButton","createContext","ExperimentTable","isUninitialized","isFulfilled","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","isOwner","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","setPage","storageKey","initialValue","parseFn","savedStr","parse","setValue","useLocalStorage","valueNum","isNaN","rowsPerPage","setRowsPerPage","emptyRows","flexGrow","m","endIcon","Paper","elevation","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","allChecked","onChangeAllCheck","checked","experiment","checkboxVisible","sort","getComparator","slice","expData","Provider","RowItem","palette","text","secondary","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","newValue","parseInt","Checkbox","visibility","indeterminate","TableSortLabel","active","direction","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","isEdit","setEdit","errorEdit","setErrorEdit","valueEdit","setValueEdit","onSaveNewName","Fragment","borderBottom","tableCellClasses","root","borderBottomWidth","prevOpen","trim","orderBy","descendingComparator","CONTENT_HEIGHT","Experiment","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","INITIAL_DATA_STYLE","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","onAddAlgoNode","nodeName","newNode","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","opacity","onFocusCapture","AddButton","AlgoNodeComponent","treeItemClasses","iconContainer","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","initialFlowPosition","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowNodes","setFlowEdges","deleteFlowNodes","applyNodeChanges","setNodesChange","setEdgesChange","applyEdgeChanges","deleteFlowEdgeById","element","deleteFlowNodeById","source","editFlowNodePositionById","coord","elementIdx","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","nodeIdx","targetNode","min","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","RIGHT_DRAWER_MODE","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","Accordion","disableGutters","square","divider","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","multiline","ParamItemForNumber","InputLabelProps","shrink","ParamItemForBoolean","Switch","ParamItemForValueType","ParamChildItem","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","NWBSettingContents","paramKeyList","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","runDisabled","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","isStartedSuccess","dialogOpen","setDialogOpen","menuOpen","setMenuOpen","anchorRef","uidExists","ButtonGroup","errorMessage","Popper","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","fullWidth","helperText","ImportWorkflowConfigButton","inputRef","UploadFile","hidden","accept","files","file","FormData","append","ToolBar","float","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","inistialUploaderState","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","onOpen","onOpenDialogFile","onMessageError","FileSelect","multiSelect","onChangeFilePath","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","getFileInputAccept","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","hexToRgb","onMouseEnter","onMouseLeave","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","setMatlabInputNodeParam","newState","DisplayDataContext","NaN","CsvPlot","isInitialized","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","idx","row_id","rowObj","fromEntries","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","useHDF5Tree","TreeNode","isDir","icon","htmlColor","childNode","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","MatlabFileNode","MatlabFileNodeImpl","hideSettingDialog","selectMatlabInputNodeSelectedFilePath","MatlabParamSettingDialog","initialFieldName","fieldName","selectMatlabInputNodeParamFieldName","setFieldName","initialIndex","selectMatlabInputNodeParamIndex","isValidIndex","DialogImageWrapper","DialogImageContentWrapper","DialogImageTitle","DialogImageLabel","DialogImageContent","ButtonClose","DialogImage","handleCloseDialog","nameCol","handleClosePopup","document","src","alt","IOSSwitch","focusVisibleClassName","disableRipple","transitionDuration","grey","transitions","SwitchCustom","PopupAttributes","handleChangeAttributes","exp_id","Content","readOnly","DatabaseExperimentsWrapper","DatabaseExperiments","cellPath","handleRowClick","readonly","adminOrManager","dataExperiments","search","replace","newParams","setNewParams","openShare","setOpenShare","dataDialog","setDataDialog","getAll","dataShare","listShare","pagiFilter","dataParamsFilter","experiment_id","publish_status","brain_area","cre_driver","reporter_line","imaging_depth","operator","model","setModel","fetchApi","newPublish","api","handleOpenDialog","graphTitle","newData","d","getParamsData","replaceAll","handlePublish","handleSort","rowSelectionModel","getColumns","graph_titles","graph_url","graph_urls","thumb_url","ColumnPrivate","handleOpenShare","NOSHARE","columnsTable","handleOpenAttributes","filterOperators","InputComponent","applyValue","defaultValue","valueOptions","fields","attributes","cell_image_urls","sortModel","rowHeight","filterMode","sortingMode","onSortModelChange","filterModel","onFilterModelChange","modelFilter","onRowClick","isSubmit","ExpDbNode","ExpDbFileNodeImple","expdbColor","ExpDbSelect","experimentId","ExpDbSelectDialog","setExperimentId","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","markerEnd","edgePath","getBezierPath","getEdgeCenter","edgeCenterX","edgeCenterY","foreignObjectSize","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","filename","PositionDrag","initSizeDrag","floor","sChart","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","isAddRoi","setIsAddRoi","loadingApi","setLoadingApi","roiDataState","setRoiDataState","pointClick","setPointClick","itemsVisual","timeDataMaxIndex","maxIdx","selectRoiItemIndex","sizeDrag","setSizeDrag","startDragAddRoi","setStartDragAddRoi","positionDrag","setChangeSize","selectRoiItemOutputKeys","refPageXSize","refPageYSize","colorscaleRoi","createColormap","colormap","nshades","onCancel","onCancelAdd","rgba2hex","hovertemplate","new_i","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","setSelectRoi","point","newPoints","newRoi","addRoi","onMouseUpDragAddRoi","onMouseDownSize","pageX","pageY","addRoiSubmit","sizeX","sizeY","xAdd","yAdd","pointCenter","posx","posy","sizex","sizey","resetTimeSeries","onMergeRoi","ids","onDeleteRoi","PlayBack","BoxDiv","LinkDiv","points","curveNumber","toString","DivAddRoi","DivSvg","onMouseMove","newSizeDrag","getBoundingClientRect","newX","newY","scrollY","LEFT","newWidth","newLeft","RIGHT","BOTTOM","newHeight","TOP","newTop","onMouseUp","DivDrag","DragCenter","DragSizeLeft","DragSizeRight","DragSizeTop","DragSizeBottom","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","step","Slider","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","DragSize","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","XIndex","YIndex","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","HistogramPlot","selectHistogramDataError","selectHistogramDataIsFulfilled","HistogramPlotImple","histogramData","autobinx","xbins","InputBins","LinePlot","selectLineDataError","selectLineDataIsFulfilled","LinePlotImple","lineData","selectLineColumns","selectLineIndex","tickvals","LineItemIndexSelect","PiePlot","selectPieDataError","selectPieDataIsFulfilled","PiePlotImple","pieData","selectPieColumns","labels","PolarPlot","selectPolarDataError","selectPolarDataIsFulfilled","PolarPlotImple","polarData","selectPolarColumns","selectPolarIndex","theta","PolarItemIndexSelect","DisplayDataItem","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allNotChecked","TreeItemLabel","checkboxProps","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","edges","onNodesChange","changes","onEdgesChange","onConnect","addEdge","animated","onInit","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","viewport","zoom","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","CurrentPipelineInfo","isFulFilled","Grid","container","paddingX","ExperimentUidInfo","ExperimentNameInfo","LabelValueGridRow","xs","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","borderRight","DrawerContents","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","dependencies","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","VisualizeItem","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newRight","LegendSelect","handleChange","drawIndexMap","RoiItemEditor","ScatterItemEditor","BarItemEditor","HistogramItemEditor","LineItemEditor","PieItemEditor","PolarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","TabPanel","other","Workspace","runPipeline","appDispatch","useLocation","useParams","_workspaceId","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","activeTab","a11yProps","WorkspaceTabs","centered","textColor","Profile","keepMounted","MultiUserHeader","handleDrawerOpen","StyledAppBar","TitleLogo","pathname","MuiAppBar","Header","LeftMenu","handleDrawerClose","List","ListItem","disablePadding","ListItemButton","authRequiredPathRegex","AuthedLayout","LayoutWrapper","ContentBodyWrapper","ChildrenWrapper","UnauthedLayout","paddingRight","prop","Layout","setLoadingAuth","checkAuth","token","isLogin","DataBaseContent","DatabaseWrapper","Experiments","PublicNavMenu","displayName","navLink","PublicHeader","AppBar","Container","PublicFooter","Date","getFullYear","PublicLayout","PublicDatabaseWrapper","PublicExperiments","DatabaseCells","dataCells","statistics","p_value_resp","p_value_sel","p_value_ori_resp","p_value_ori_sel","dir_vector_angle","ori_vector_angle","di","oi","dsi","osi","r_best_dir","dir_tuning_width","ori_tuning_width","PublicCells","Cells","InputError","SelectModal","SelectError","options","initState","confirmPassword","ModalComponent","onSubmitEdit","setOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateField","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","ModalBox","TitleModal","LabelModal","ButtonModal","AccountManagerWrapper","ALink","userSelect","button","AccountManager","openModal","setDataEdit","openDel","setOpenDel","filterParams","sortParams","paramsManager","navigator","onLine","handleEdit","flag","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","ExpDbData","StatData","nextKey","handleTypeColorSlice","HDF5Slice","initData","public","private","databaseSlice","_action","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","workspaceReducer","userReducer","databaseReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.84a2d72a.chunk.js","sourcesContent":["export enum ROLE {\n  ADMIN = 1,\n  DATA_MANAGER = 10,\n  OPERATOR = 20,\n  GUEST_OPERATOR = 30\n}\n\nexport const enum SHARE {\n  NOSHARE = 0,\n  ORGANIZATION = 2,\n  USERS = 1,\n}\n\nexport const WAITING_TIME = 500","import { ROLE } from '@types'\nimport { RootState } from 'store/store'\n\nexport const selectCurrentUser = (state: RootState) => state.user.currentUser\nexport const selectCurrentUserId = (state: RootState) =>\n  selectCurrentUser(state)?.id\nexport const selectListUser = (state: RootState) => state.user.listUser\nexport const selectLoading = (state: RootState) => state.user.loading\nexport const selectCurrentUserUid = (state: RootState) =>\n  selectCurrentUser(state)?.uid\nexport const selectCurrentUserEmail = (state: RootState) =>\n  selectCurrentUser(state)?.email\nexport const selectListSearch = (state: RootState) => state.user.listUserSearch\nexport const isAdmin = (state: RootState) => {\n  return state.user && ROLE.ADMIN === state.user.currentUser?.role_id\n}\n\nexport const isAdminOrManager = (state: RootState) => {\n  return [ROLE.ADMIN, ROLE.DATA_MANAGER].includes(state.user.currentUser?.role_id as number)\n}\n","import {UserListDTO, UserDTO} from 'api/users/UsersApiDTO'\n\nexport const USER_SLICE_NAME = 'user'\n\nexport type User = {\n  currentUser?: UserDTO\n  listUserSearch?: UserDTO[]\n  loading: boolean\n  listUser?: UserListDTO\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\n\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\n\nexport const removeRefreshToken = () => {\n  return localStorage.removeItem('refresh_token')\n}\n\nexport const logout = () => {\n  removeRefreshToken();\n  removeToken()\n  removeExToken();\n  window.location.href = '/login'\n}\n\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\n\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\n\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n","import axios from 'utils/axios'\nimport { getRefreshToken } from 'utils/auth/AuthUtils'\n\nexport type LoginDTO = {\n  email: string\n  password: string\n}\n\nexport type TokenDTO = {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  ex_token: string\n}\nexport type AccessTokenDTO = {\n  access_token: string\n}\n\nexport const loginApi = async (data: LoginDTO): Promise<TokenDTO> => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshTokenApi = async (): Promise<AccessTokenDTO> => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const sendResetPasswordMailApi = async (\n  email: string,\n): Promise<string> => {\n  const response = await axios.post(\n    `/auth/send_reset_password_mail?email=${email}`,\n  )\n  return response.data\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST ?? 'localhost'\nconst PORT = process.env.REACT_APP_SERVER_PORT\nconst PROTO = process.env.REACT_APP_SERVER_PROTO ?? 'http'\n\nexport const BASE_URL =\n  PORT == null ? `${PROTO}://${HOST}` : `${PROTO}://${HOST}:${PORT}`\n","import axiosLibrary from 'axios'\nimport { refreshTokenApi } from 'api/auth/Auth'\nimport { BASE_URL } from 'const/API'\nimport {getExToken, getToken, logout, saveToken} from 'utils/auth/AuthUtils'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      try {\n        const { access_token } = await refreshTokenApi()\n        saveToken(access_token)\n        error.config.headers.Authorization = `Bearer ${access_token}`\n        return axiosLibrary(error.config)\n      }\n      catch (e: any) {\n        if (e?.response?.status === 400) {\n          logout();\n        }\n        throw e;\n      }\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { UserDTO, UpdateUserDTO, UpdateUserPasswordDTO } from './UsersApiDTO'\n\nexport const getMeApi = async (): Promise<UserDTO> => {\n  const response = await axios.get('/users/me')\n  return response.data\n}\n\nexport const updateMeApi = async (data: UpdateUserDTO): Promise<UserDTO> => {\n  const response = await axios.put('/users/me', data)\n  return response.data\n}\n\nexport const updateMePasswordApi = async (\n  data: UpdateUserPasswordDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put('/users/me/password', data)\n  return response.data\n}\n\nexport const deleteMeApi = async (): Promise<string> => {\n  const response = await axios.delete('/users/me')\n  return response.data\n}\n","import axios from 'utils/axios'\nimport {\n  AddUserDTO,\n  UserDTO,\n  ListUsersQueryDTO,\n  UpdateUserDTO, UserListDTO,\n} from './UsersApiDTO'\nimport qs from \"qs\";\n\nexport const createUserApi = async (data: AddUserDTO): Promise<UserDTO> => {\n  const response = await axios.post('/admin/users', data)\n  return response.data\n}\n\nexport const getUserApi = async (uid: string): Promise<UserDTO> => {\n  const response = await axios.get(`/admin/users/${uid}`)\n  return response.data\n}\n\nexport const listUsersApi = async (\n  data: ListUsersQueryDTO,\n): Promise<UserListDTO> => {\n  const paramsNew = qs.stringify(data, { indices: false })\n  const response = await axios.get(`/admin/users?${paramsNew}`)\n  return response.data\n}\n\nexport const updateUserApi = async (\n  id: number,\n  data: UpdateUserDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put(`/admin/users/${id}`, data)\n  return response.data\n}\n\nexport const deleteUserApi = async (id: number): Promise<string> => {\n  const response = await axios.delete(`/admin/users/${id}`)\n  return response.data\n}\n\nexport const getListSearchApi = async (data: {keyword: string | null}): Promise<UserDTO[]> => {\n  const response = await axios.get(`/users/search/share_users${data.keyword ? `?keyword=${data.keyword}` : ''}`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport {deleteMeApi, getMeApi, updateMeApi, updateMePasswordApi} from 'api/users/UsersMe'\nimport {AddUserDTO, ListUsersQueryDTO, UpdateUserDTO, UpdateUserPasswordDTO, UserDTO} from 'api/users/UsersApiDTO'\nimport { LoginDTO, loginApi } from 'api/auth/Auth'\nimport {deleteUserApi, createUserApi, listUsersApi, updateUserApi} from \"../../../api/users/UsersAdmin\";\nimport {getListSearchApi} from \"../../../api/users/UsersAdmin\";\n\nexport const login = createAsyncThunk(\n  `${USER_SLICE_NAME}/login`,\n  async (data: LoginDTO, thunkAPI) => {\n    try {\n      const responseData = await loginApi(data)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/getMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await getMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMe`,\n  async (data: UpdateUserDTO, thunkAPI) => {\n    try {\n      const responseData = await updateMeApi(data)\n      await thunkAPI.dispatch(getMe())\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/deleteMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await deleteMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMePassword = createAsyncThunk(\n    `${USER_SLICE_NAME}/updateMePassword`,\n    async (data: UpdateUserPasswordDTO, thunkAPI) => {\n      try {\n        return await updateMePasswordApi(data)\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const getListUser = createAsyncThunk(\n    `${USER_SLICE_NAME}/getListUser`,\n    async (params: ListUsersQueryDTO, thunkAPI) => {\n      try {\n        return await listUsersApi(params)\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const getListSearch = createAsyncThunk<\n    UserDTO[],\n    {keyword: string | null}\n>(\n    `${USER_SLICE_NAME}/getListSearch`,\n    async (params, thunkAPI) => {\n      try {\n        const responseData = await getListSearchApi(params)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const createUser = createAsyncThunk<\n    UserDTO,\n    {data: AddUserDTO, params : ListUsersQueryDTO}\n>(\n    `${USER_SLICE_NAME}/createUser`,\n    async (props, thunkAPI) => {\n      try {\n        const { dispatch } = thunkAPI\n        const responseData = await createUserApi(props.data)\n        await dispatch(getListUser(props.params))\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const updateUser = createAsyncThunk<\n    UserDTO,\n    {id: number, data: UpdateUserDTO, params: ListUsersQueryDTO}\n>(\n    `${USER_SLICE_NAME}/updateUser`,\n    async (props, thunkAPI) => {\n      const { dispatch } = thunkAPI\n      try {\n        const responseData = await updateUserApi(props.id, props.data)\n        await dispatch(getListUser(props.params))\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const deleteUser = createAsyncThunk<\n    string,\n    {id: number, params: ListUsersQueryDTO}\n>(\n    `${USER_SLICE_NAME}/deleteUser`,\n    async (data, thunkAPI) => {\n      const { dispatch } = thunkAPI\n      try {\n        const responseData = await deleteUserApi(data.id)\n        await dispatch(getListUser(data.params))\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)","import { Link } from 'react-router-dom'\nimport { Box, styled, Typography } from '@mui/material'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {isAdmin, selectCurrentUser} from 'store/slice/User/UserSelector'\nimport {useEffect} from \"react\";\nimport {getMe} from \"../../store/slice/User/UserActions\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const admin = useSelector(isAdmin)\n  const user = useSelector(selectCurrentUser)\n  useEffect(() => {\n    if(!user) return\n    dispatch(getMe())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/console/experiments\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/console/workspaces\">\n            <BoxMenu>\n              <Box>\n                <AnalyticsIcon fontSize=\"large\" />\n                <TitleMenu>Workspaces</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {\n            admin ?\n              <LinkWrapper to=\"/console/account-manager\">\n                <BoxMenu>\n                  <Box>\n                    <ManageAccountsIcon fontSize=\"large\" />\n                    <TitleMenu>Account Manager</TitleMenu>\n                  </Box>\n                </BoxMenu>\n              </LinkWrapper>: null\n          }\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { Box, keyframes, styled } from '@mui/material'\n\nconst Loading = () => {\n  return (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  )\n}\n\nconst LoaderWrapper = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  backgroundColor: 'rgba(255,255,255,0.6)',\n  zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme }) => ({\n  display: 'block',\n  width: 48,\n  height: 48,\n  borderRadius: '50%',\n  position: 'relative',\n  zIndex: 100,\n  top: 'calc(50% - 24px)',\n  left: 'calc(50% - 24px)',\n  animation: `${rotate} 1s linear infinite`,\n  '&:before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    inset: 0,\n    borderRadius: '50%',\n    border: '3px solid rgba(0,0,0,0.8)',\n    animation: `${prixClipFix} 2s linear infinite`,\n  },\n}))\n\nexport default Loading\n","export const regexPassword =\n  /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\n\nexport const regexEmail =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n","import { styled } from '@mui/material'\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nexport default Input\n","import { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport { Box, styled, Typography } from '@mui/material'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport Input from 'components/common/Input'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputPassword from 'components/Account/InputPassword'\n\ntype ChangePasswordModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ChangePasswordModal: FC<ChangePasswordModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorPassword = !values.password ? 'This field is required' : ''\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      password: errorPassword,\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = async () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.new_password || errors.confirm_password || errors.password) return\n    if(newErrors.new_password || newErrors.confirm_password || newErrors.password) {\n      setErrors(newErrors)\n      return\n    }\n    await onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button variant='contained' color='success' onClick={() => onChangePass()}>UPDATE</Button>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nexport default ChangePasswordModal\n","import { FC, useState } from 'react'\nimport { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport Input  from 'components/common/Input'\nimport Loading from \"../common/Loading\";\n\ntype DeleteConfirmModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description: string\n  isLoading?: boolean\n}\nconst DeleteConfirmModal: FC<DeleteConfirmModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description}\n            This operation cannot be undone.\n            To continue, type \"<span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <Button onClick={onConfirm} variant='contained' color='error' sx={{ml: 1}}>{titleSubmit}</Button>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default DeleteConfirmModal\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Box, Button, IconButton, Input, styled, Typography } from '@mui/material'\nimport Loading from \"components/common/Loading\"\nimport ChangePasswordModal from 'components/Account/ChangePasswordModal'\nimport DeleteConfirmModal from 'components/common/DeleteConfirmModal'\nimport { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { deleteMe, updateMe, updateMePassword} from 'store/slice/User/UserActions'\nimport { selectCurrentUser, selectLoading } from 'store/slice/User/UserSelector'\nimport { ROLE } from \"../../@types\";\nimport {useSnackbar, VariantType} from \"notistack\";\nimport Edit from '@mui/icons-material/Edit'\nconst Account = () => {\n  const user = useSelector(selectCurrentUser)\n  const loading = useSelector(selectLoading)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [isDeleteConfirmModalOpen, setIsDeleteConfirmModalOpen] = useState(false)\n  const [isChangePwModalOpen, setIsChangePwModalOpen] = useState(false)\n  const [isEditName, setIsEditName] = useState(false)\n  const [isName, setIsName] = useState<string>()\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n\n  useEffect(() => {\n    if(!user) return\n    setIsName(user.name)\n    //eslint-disable-next-line\n  }, [])\n\n  const handleCloseDeleteComfirmModal = () => {\n    setIsDeleteConfirmModalOpen(false)\n  }\n\n  const onDeleteAccountClick = () => {\n    setIsDeleteConfirmModalOpen(true)\n  }\n\n  const onConfirmDelete = async () => {\n    if(!user) return\n    const data = await dispatch(deleteMe())\n    if((data as any).error) {\n      handleClickVariant('error', 'Account deleted failed!')\n    }\n    else {\n      navigate('/login')\n    }\n    handleCloseDeleteComfirmModal()\n  }\n\n  const handleCloseChangePw = () => {\n    setIsChangePwModalOpen(false)\n  }\n\n  const onChangePwClick = () => {\n    setIsChangePwModalOpen(true)\n  }\n\n  const onConfirmChangePw = async (oldPass: string, newPass: string) => {\n    const data = await dispatch(updateMePassword({old_password: oldPass, new_password: newPass}))\n    if((data as any).error) {\n      handleClickVariant('error', 'Failed to Change Password!')\n    }\n    else {\n      handleClickVariant('success', 'Your password has been successfully changed!')\n    }\n    handleCloseChangePw()\n  }\n\n  const onEditName = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsName(e.target.value)\n  }\n\n  const onSubmit = async (e: any) => {\n    if(!user || !user.name || !user.email) return\n    if(isName === user.name) {\n      setIsEditName(false)\n      return\n    }\n    if(!e.target.value) {\n      handleClickVariant('error', \"Full name cann't empty!\")\n      setIsName(user?.name)\n    }\n    else {\n      const data = await dispatch(updateMe({\n        name: e.target.value,\n        email: user.email,\n      }))\n      if((data as any).error) {\n        handleClickVariant('error', 'Full name edited failed!')\n      }\n      else {\n        handleClickVariant('success', 'Full name edited successfully!')\n      }\n    }\n    setIsEditName(false)\n  }\n\n  const getRole = (role?: number) => {\n    if(!role) return\n    let newRole = ''\n    switch (role) {\n      case ROLE.ADMIN:\n        newRole = 'Admin'\n        break\n      case ROLE.DATA_MANAGER:\n        newRole = 'Data Manager'\n        break\n      case ROLE.OPERATOR:\n        newRole = 'Operator'\n        break\n      case ROLE.GUEST_OPERATOR:\n        newRole = 'Guest Operator'\n    }\n    return newRole\n  }\n\n  const handleName = (event: any) => {\n    if(event.key === 'Escape') {\n      setIsName(user?.name)\n      setIsEditName(false)\n      return\n    }\n    if(event.key === 'Enter') {\n      if(ref.current) ref.current?.querySelector('input')?.blur?.()\n      return\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <DeleteConfirmModal\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDeleteComfirmModal}\n        open={isDeleteConfirmModalOpen}\n        onSubmit={onConfirmDelete}\n        description='Delete account will erase all of your data.'\n      />\n      <ChangePasswordModal\n        onSubmit={onConfirmChangePw}\n        open={isChangePwModalOpen}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Organization</TitleData>\n        <BoxData>{user?.organization?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Name</TitleData>\n        {isEditName ? (\n          <Input\n            sx={{ width: 400 }}\n            autoFocus\n            onBlur={onSubmit}\n            placeholder=\"Name\"\n            value={isName}\n            onChange={onEditName}\n            onKeyDown={handleName}\n            ref={ref}\n          />\n        ) : (\n          <>\n            <Box>{isName ? isName : user?.name}</Box>\n            <IconButton sx={{ml: 1}} onClick={() => setIsEditName(true)}>\n              <Edit />\n            </IconButton>\n          </>\n        )}\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{getRole(user?.role_id)}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10, maxWidth: 600}}>\n        <Button variant='contained' color='primary' onClick={onChangePwClick}>Change Password</Button>\n        <Button variant='contained' color='error' onClick={onDeleteAccountClick}>Delete Account</Button>\n      </BoxFlex>\n      {\n        loading ? <Loading /> : null\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n  minWidth: 250\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport {getMe, login} from 'store/slice/User/UserActions'\nimport { AppDispatch } from 'store/store'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const dispatch: AppDispatch = useDispatch()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    dispatch(login(values))\n      .unwrap()\n      .then(async (_) => {\n        await dispatch(getMe())\n        navigate('/console')\n      })\n      .catch((_) => {\n        setErrors({ email: 'Email or password is wrong', password: '' })\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { sendResetPasswordMailApi } from 'api/auth/Auth'\nimport Loading from \"components/common/Loading\"\nimport { regexEmail } from 'const/Auth'\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await sendResetPasswordMailApi(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Please check your mail!`)\n                navigate('/login')\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'The email is invalid'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>Back to SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import { IS_STANDALONE } from 'const/Mode'\nimport { RootState } from 'store/store'\n\nexport const selectWorkspace = (state: RootState) => state.workspace\nexport const selectWorkspaceListUserShare = (state: RootState) =>\n  state.workspace.listUserShare\nexport const selectWorkspaceData = (state: RootState) =>\n  state.workspace.workspace\n\nexport const selectWorkspaceItem =\n  (workspaceId: number) => (state: RootState) =>\n    selectWorkspaceData(state).items.find((item) => item.id === workspaceId)\n\nexport const selectActiveTab = (state: RootState) =>\n  state.workspace.currentWorkspace.selectedTab\n\nexport const selectCurrentWorkspaceId = (state: RootState) =>\n  state.workspace.currentWorkspace.workspaceId\n\nexport const selectCurrentWorkspaceOwnerId = (state: RootState) =>\n  state.workspace.currentWorkspace.ownerId\n\nexport const selectIsLoadingWorkspaceList = (state: RootState) =>\n  state.workspace.loading\n\nexport const selectIsWorkspaceOwner = (state: RootState) =>\n  IS_STANDALONE\n    ? true\n    : state.workspace.currentWorkspace.ownerId === state.user.currentUser?.id\n","import axios from 'utils/axios'\nimport qs from 'qs'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n} from 'store/slice/Workspace/WorkspaceType'\nimport { ListShareDTO } from 'store/slice/Database/DatabaseType'\n\nexport type WorkspacePostDataDTO = { name: string; id?: number }\n\nexport const getWorkspaceApi = async (id: number): Promise<ItemsWorkspace> => {\n  const response = await axios.get(`/workspace/${id}`)\n  return response.data\n}\n\nexport const getWorkspacesApi = async (params: {\n  [key: string]: number\n}): Promise<WorkspaceDataDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/workspaces?${paramsNew}`)\n  return response.data\n}\n\nexport const delWorkspaceApi = async (id: number): Promise<boolean> => {\n  const response = await axios.delete(`/workspace/${id}`)\n  return response.data\n}\n\nexport const postWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.post(`/workspace`, data)\n  return response.data\n}\n\nexport const putWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.put(`/workspace/${data.id}`, { name: data.name })\n  return response.data\n}\n\nexport const importWorkspaceApi = async (\n  data: Object,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.post(`/workspace/import`, { todo_dummy: data })\n  return response.data\n}\n\nexport const exportWorkspaceApi = async (id: number): Promise<void> => {\n  const response = await axios.get(`/workspace/export/${id}`)\n  return response.data\n}\n\nexport const getListUserShareWorkspaceApi = async (\n  id: number,\n): Promise<ListShareDTO> => {\n  const response = await axios.get(`/workspace/share/${id}/status`)\n  return response.data\n}\n\nexport const postListUserShareWorkspaceApi = async (\n  id: number,\n  data: { user_ids: number[] },\n): Promise<boolean> => {\n  const response = await axios.post(`/workspace/share/${id}/status`, data)\n  return response.data\n}\n","import { UserDTO } from '../../../api/users/UsersApiDTO'\n\nexport const WORKSPACE_SLICE_NAME = 'workspace'\n\nexport type ItemsWorkspace = {\n  id: number\n  name: string\n  user: {\n    id: number\n    name: string\n    email: string\n    created_at: string\n    updated_at: string\n  }\n  created_at: string\n  updated_at: string\n}\n\nexport type WorkspaceDataDTO = {\n  items: ItemsWorkspace[]\n  total: number\n  limit: number\n  offset: number\n}\n\nexport type Workspace = {\n  workspace: WorkspaceDataDTO\n  currentWorkspace: {\n    workspaceId?: number\n    selectedTab: number\n    ownerId?: number\n  }\n  loading: boolean\n  listUserShare?: ListUserShareWorkspaceDTO\n}\n\nexport type ListUserShareWorkSpace = {\n  id: number\n  name: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\nexport type ListUserShareWorkspaceDTO = {\n  users: UserDTO[]\n}\n\nexport type WorkspaceParams = {\n  [key: string]: string | undefined | number | string[] | object\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  WorkspacePostDataDTO,\n  delWorkspaceApi,\n  exportWorkspaceApi,\n  getWorkspaceApi,\n  getWorkspacesApi,\n  importWorkspaceApi,\n  postWorkspaceApi,\n  putWorkspaceApi,\n  getListUserShareWorkspaceApi,\n  postListUserShareWorkspaceApi,\n} from 'api/Workspace'\nimport { ListShareDTO } from '../Database/DatabaseType'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n  WorkspaceParams,\n  WORKSPACE_SLICE_NAME,\n} from './WorkspaceType'\n\nexport const getWorkspace = createAsyncThunk<ItemsWorkspace, { id: number }>(\n  `${WORKSPACE_SLICE_NAME}/getWorkspace`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getWorkspaceApi(data.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getWorkspaceList = createAsyncThunk<\n  WorkspaceDataDTO,\n  { [key: string]: number }\n>(`${WORKSPACE_SLICE_NAME}/getWorkspaceList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getWorkspacesApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const delWorkspace = createAsyncThunk<boolean, WorkspaceParams>(\n  `${WORKSPACE_SLICE_NAME}/delWorkspaceList`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI\n    try {\n      const response = await delWorkspaceApi(Number(data.id))\n      await dispatch(getWorkspaceList(data.params as { [key: string]: number }))\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/postWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await postWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const putWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/putWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await putWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const importWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  { [key: string]: number }\n>(`${WORKSPACE_SLICE_NAME}/importWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue, dispatch } = thunkAPI\n  try {\n    const response = await importWorkspaceApi(data)\n    await dispatch(getWorkspaceList(data))\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const exportWorkspace = createAsyncThunk<void, number>(\n  `${WORKSPACE_SLICE_NAME}/exportWorkspaceList`,\n  async (id, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await exportWorkspaceApi(id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getListUserShareWorkSpaces = createAsyncThunk<\n  ListShareDTO,\n  { id: number }\n>(\n  `${WORKSPACE_SLICE_NAME}/getListUserShareWorkSpaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getListUserShareWorkspaceApi(params.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postListUserShareWorkspaces = createAsyncThunk<\n  boolean,\n  {\n    id: number\n    data: { user_ids: number[] }\n  }\n>(\n  `${WORKSPACE_SLICE_NAME}/postListUserShareWorkspaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await postListUserShareWorkspaceApi(\n        params.id,\n        params.data,\n      )\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const DATABASE_SLICE_NAME = 'database'\n\nexport type OrderBy = 'ASC' | 'DESC' | ''\n\nexport type ImageUrls = {\n  url: string\n  thumb_url: string\n  params: {}\n}\n\nexport type DatabaseType = {\n  id: number\n  fields: {\n    brain_area?: string\n    cre_driver?: string\n    reporter_line?: string\n    imaging_depth?: number\n  }\n  experiment_id?: string\n  attributes?: object\n  cell_image_urls: ImageUrls[]\n  cell_image_url?: {\n    url: string,\n    thumb_url: string,\n    params: {}\n  }\n  statistics? : {\n    p_value_resp?: string\n    p_value_sel?: string\n    p_value_ori_resp?: string\n    p_value_ori_sel?: string\n    dir_vector_angle?: string\n    ori_vector_angle?: string\n    oi?: string\n    di?: string\n    dsi?: string\n    osi?: string\n    r_best_dir?: string\n    dir_tuning_width?: string\n    ori_tuning_width?: string\n  }\n  graph_urls: {url: string, params: {}, thumb_url: string}[]\n  share_type?: number\n  publish_status?: number\n  created_at: string\n  updated_at: string\n}\n\nexport type DatabaseDTO = {\n  offset: number\n  limit: number\n  total: number\n  header: {\n    graph_titles: string[]\n  }\n  items: DatabaseType[]\n}\n\nexport type ListShareDTO = {\n  share_type: number\n  users: ListShare[]\n}\n\nexport type ListShare = {\n  id: number,\n  name: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\nexport type DatabaseParams = { [key: string]: number | string | string[] | undefined }\n","import { DatabaseDTO, DatabaseParams, ListShareDTO } from 'store/slice/Database/DatabaseType'\nimport axios from 'utils/axios'\nimport qs from 'qs'\n\nexport const getExperimentsPublicApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/public/experiments?${paramsNew}`)\n  return response.data\n}\n\nexport const getCellsPublicApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/public/cells?${paramsNew}`)\n  return response.data\n}\n\nexport const getExperimentsApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/expdb/experiments?${paramsNew}`)\n  return response.data\n}\n\nexport const getCellsApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/expdb/cells?${paramsNew}`)\n  return response.data\n}\n\nexport const postPublishApi = async (id: number, status: 'on' | 'off'): Promise<boolean> => {\n  const response = await axios.post(`/expdb/experiment/publish/${id}/${status}`)\n  return response.data\n}\n\nexport const getListUserShareApi = async (id: number): Promise<ListShareDTO> => {\n  const response = await axios.get(`/expdb/share/${id}/status`)\n  return response.data\n}\n\nexport const postListUserShareApi = async (id: number, data: {share_type: number; user_ids: number[]}): Promise<boolean> => {\n  const response = await axios.post(`/expdb/share/${id}/status`, data)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  DATABASE_SLICE_NAME,\n  DatabaseDTO,\n  DatabaseParams,\n  ListShareDTO,\n} from './DatabaseType'\nimport {\n  getCellsApi,\n  getCellsPublicApi,\n  getExperimentsApi,\n  getExperimentsPublicApi,\n  getListUserShareApi,\n  postListUserShareApi,\n  postPublishApi,\n} from 'api/database'\n\nexport const getExperimentsDatabase = createAsyncThunk<\n  DatabaseDTO,\n  DatabaseParams\n>(`${DATABASE_SLICE_NAME}/getExperimentsList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getExperimentsApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const getCellsDatabase = createAsyncThunk<DatabaseDTO, DatabaseParams>(\n  `${DATABASE_SLICE_NAME}/getCellsList`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getCellsApi(params)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getExperimentsPublicDatabase = createAsyncThunk<\n  DatabaseDTO,\n  DatabaseParams\n>(\n  `${DATABASE_SLICE_NAME}/getExperimentsPublicList`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getExperimentsPublicApi(params)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCellsPublicDatabase = createAsyncThunk<\n  DatabaseDTO,\n  DatabaseParams\n>(`${DATABASE_SLICE_NAME}/getCellsPublicList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getCellsPublicApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const postPublish = createAsyncThunk<\n  boolean,\n  { id: number; status: 'on' | 'off' , params: DatabaseParams}\n>(`${DATABASE_SLICE_NAME}/postPublish`, async (params, thunkAPI) => {\n  const { rejectWithValue, dispatch } = thunkAPI\n  try {\n    const response = await postPublishApi(params.id, params.status)\n    await dispatch(getExperimentsDatabase(params.params))\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const getListUserShare = createAsyncThunk<ListShareDTO, { id: number }>(\n  `${DATABASE_SLICE_NAME}/getListUserShare`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getListUserShareApi(params.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postListUserShare = createAsyncThunk<\n  boolean,\n  {\n    id: number\n    data: { share_type: number; user_ids: number[] }\n  }\n>(`${DATABASE_SLICE_NAME}/postListUserShare`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await postListUserShareApi(params.id, params.data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport { User } from './UserType'\nimport {deleteMe, getListUser, getListSearch, getMe, login, updateMe, updateMePassword, deleteUser, createUser, updateUser} from './UserActions'\nimport {\n  removeExToken,\n  removeToken,\n  saveExToken,\n  saveRefreshToken,\n  saveToken,\n} from 'utils/auth/AuthUtils'\n\nconst initialState: User = {\n  currentUser: undefined,\n  listUserSearch: undefined,\n  listUser: undefined,\n  loading: false\n}\n\nexport const userSlice = createSlice({\n  name: USER_SLICE_NAME,\n  initialState,\n  reducers: {\n    logout: (state) => {\n      removeToken()\n      removeExToken()\n      state = initialState\n    },\n    resetUserSearch: (state) => {\n      state.listUserSearch = []\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.fulfilled, (_, action) => {\n        saveToken(action.payload.access_token)\n        saveRefreshToken(action.payload.refresh_token)\n        saveExToken(action.payload.ex_token)\n      })\n      .addCase(getMe.fulfilled, (state, action) => {\n        state.currentUser = action.payload\n      })\n      .addCase(getListUser.fulfilled, (state, action) => {\n        state.listUser = action.payload\n        state.loading = false\n      })\n      .addCase(getListSearch.fulfilled, (state, action) => {\n        state.listUserSearch = action.payload\n      })\n      .addMatcher(\n        isAnyOf(\n          getListSearch.rejected,\n          createUser.rejected,\n          getListUser.rejected,\n          updateUser.rejected,\n          updateMePassword.rejected,\n          updateMePassword.fulfilled,\n          deleteUser.fulfilled,\n          deleteUser.rejected,\n          deleteMe.rejected,\n          deleteMe.fulfilled,\n          updateMe.rejected,\n          updateMe.fulfilled,\n          createUser.fulfilled),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getListUser.pending,\n          deleteUser.pending,\n          createUser.pending,\n          updateMe.pending,\n          deleteMe.pending,\n          updateUser.pending,\n          updateMePassword.pending),\n        (state) => {\n          state.loading = true\n        },\n      )\n      .addMatcher(\n        isAnyOf(login.rejected, getMe.rejected, deleteMe.fulfilled),\n        (state) => {\n          removeToken()\n          removeExToken()\n          state = initialState\n        },\n      )\n  },\n})\n\nexport const { logout, resetUserSearch } = userSlice.actions\nexport default userSlice.reducer\n","import {\n  Box, Button,\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, Input, Radio, RadioGroup, styled\n} from \"@mui/material\";\nimport {DataGrid, GridRenderCellParams, GridValidRowModel} from \"@mui/x-data-grid\";\nimport {SHARE, WAITING_TIME} from \"../@types\";\nimport { ChangeEvent, MouseEvent as MouseEventReact, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postListUserShare } from \"../store/slice/Database/DatabaseActions\";\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport { postListUserShareWorkspaces } from \"store/slice/Workspace/WorkspacesActions\";\nimport { selectListSearch, selectLoading } from \"../store/slice/User/UserSelector\";\nimport { getListSearch } from \"../store/slice/User/UserActions\";\nimport Loading from \"./common/Loading\";\nimport { UserDTO } from \"../api/users/UsersApiDTO\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { resetUserSearch } from \"../store/slice/User/UserSlice\";\n\ntype PopupType = {\n  open: boolean\n  id: number\n  handleClose: (v: boolean) => void\n  isWorkspace?: boolean\n  title?: string\n  data?: {\n    expId: string\n    shareType: number\n  }\n  usersShare?: {\n    share_type?: number\n    users: UserDTO[]\n  }\n}\n\ntype TableSearch = {\n  usersSuggest: UserDTO[]\n  onClose: () => void\n  handleAddListUser: (user: UserDTO) => void\n  stateUserShare: UserDTO[]\n}\n\nconst TableListSearch = ({usersSuggest, onClose, handleAddListUser, stateUserShare}: TableSearch) => {\n\n  const ref = useRef<HTMLLIElement | null>(null)\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onMouseDown)\n    return () => {\n      window.removeEventListener('mousedown', onMouseDown)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onMouseDown = (event: MouseEvent) => {\n    if(ref.current?.contains((event as any).target) || (event as any).target.id === 'inputSearch') return;\n    onClose?.()\n  }\n\n  return (\n    <TableListSearchWrapper ref={ref} onBlur={() => console.log(123)}>\n      <UlCustom>\n        {usersSuggest.map(item => {\n          const isSelected = stateUserShare.some(i => i.id === item.id)\n          return (\n            <LiCustom key={item.id} onClick={() => handleAddListUser(item)} style={{\n              cursor: isSelected ? 'not-allowed' : 'pointer'\n            }}\n            >\n              {`${item.name} (${item.email})`}\n              {isSelected ? <CheckIcon style={{fontSize: 14}}/> : null}\n            </LiCustom>\n          )\n        })}\n      </UlCustom>\n    </TableListSearchWrapper>\n  )\n}\nconst PopupShare = ({open, handleClose, data, usersShare, id, isWorkspace, title}: PopupType) => {\n  const [shareType, setShareType] = useState(data?.shareType || 0)\n  const usersSuggest = useSelector(selectListSearch)\n  const loading = useSelector(selectLoading)\n  const [textSearch, setTextSearch] = useState('')\n  const [stateUserShare, setStateUserShare] = useState(usersShare || undefined)\n  const dispatch = useDispatch()\n  let timeout = useRef<NodeJS.Timeout | undefined>()\n\n  useEffect(() => {\n    if(usersShare) {\n      // setUserIdsSelected(usersShare.users.map(user => user.id));\n      setStateUserShare(usersShare)\n    }\n  }, [usersShare])\n\n  useEffect(() => {\n\n  }, [data])\n\n  useEffect(() => {\n    if(timeout.current) clearTimeout(timeout.current)\n    if(!textSearch) {\n      dispatch(resetUserSearch())\n      return\n    }\n    timeout.current = setTimeout(() => {\n      dispatch(getListSearch({keyword: textSearch}))\n    }, WAITING_TIME)\n    //eslint-disable-next-line\n  }, [textSearch])\n\n  const handleShareFalse = (e: any, params: GridRenderCellParams<GridValidRowModel>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if(!stateUserShare) return\n    const indexCheck = stateUserShare.users.findIndex(user => user.id === params.id)\n    const newStateUserShare = stateUserShare.users.filter((user, index) => index !== indexCheck)\n    setStateUserShare({...setStateUserShare, users: newStateUserShare})\n  }\n\n  const handleValue = (event: ChangeEvent<HTMLInputElement>) => {\n    setShareType(Number((event.target as HTMLInputElement).value));\n  }\n\n  const columnsShare = useCallback((handleShareFalse: (e: MouseEventReact<HTMLButtonElement>, parmas: GridRenderCellParams<GridValidRowModel>) => void) =>  [\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      minWidth: 140,\n      renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n          <span>{params.row.name}</span>\n      ),\n    },\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      minWidth: 280,\n      renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n        <span>{params.row.email}</span>\n      ),\n    },\n    {\n      field: \"share\",\n      headerName: \"\",\n      filterable: false,\n      sortable: false,\n      minWidth: 130,\n      renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n        if(!params.row.share) return ''\n        return (\n          <Button onClick={(e) => handleShareFalse(e, params)}>\n            <CancelIcon color={\"error\"}/>\n          </Button>\n        )\n      }\n    },\n    //eslint-disable-next-line\n  ], [JSON.stringify(stateUserShare?.users)])\n\n  const handleOke = async () => {\n    if(!stateUserShare) return\n    let newUserIds = stateUserShare.users.map(user => user.id)\n    let newType = shareType\n    if(!isWorkspace) {\n      if(shareType === SHARE.ORGANIZATION) {\n        newUserIds = []\n      }\n      else if(shareType === SHARE.USERS && newUserIds.length < 1) {\n        newType = 0\n      }\n      else if(newUserIds.length > 0) newType = SHARE.USERS\n      await dispatch(postListUserShare({id, data: {user_ids: newUserIds as number[], share_type: newType }}))\n    } else {\n      await dispatch(postListUserShareWorkspaces({id, data: {user_ids: newUserIds as number[]}}))\n    }\n    handleClose(true);\n  }\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setTextSearch(event.target.value)\n  }\n\n  const handleCloseSearch = () => {\n    setTextSearch('')\n    dispatch(resetUserSearch())\n  }\n\n  const handleAddListUser = (user: any) => {\n    if(!usersSuggest || !stateUserShare) return\n    if(!stateUserShare.users.find(item => item.id === user.id)) {\n      setStateUserShare({...stateUserShare, users: [...stateUserShare.users, user]})\n    }\n  }\n\n  const handleClosePopup = (event: any) => {\n    if(event.key === 'Escape') {\n      handleClose(false)\n    }\n  }\n\n  if(!data || !usersShare) return null;\n\n  return (\n    <Box>\n      <DialogCustom\n        open={open}\n        onClose={handleClose}\n        sx={{margin: 0}}\n        onKeyDown={handleClosePopup}\n      >\n        <DialogTitle>{title || \"Share Database Record\"}</DialogTitle>\n        {isWorkspace ? null : (\n          <DialogContent>\n            <DialogContentText sx={{fontSize: 16, fontWeight: 400}}><ul><li>Experiment ID: {data.expId}</li></ul></DialogContentText>\n            <DialogContentText>\n              <FormControl>\n                <RadioGroup\n                  value={shareType !== SHARE.ORGANIZATION ? SHARE.USERS : SHARE.ORGANIZATION}\n                  row\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                  name=\"row-radio-buttons-group\"\n                  onChange={handleValue}\n                >\n                  <FormControlLabel value={SHARE.ORGANIZATION} control={<Radio/>} label={\"Share within Organization\"}/>\n                  <FormControlLabel value={SHARE.USERS} control={<Radio/>} label={\"Share for Users\"}/>\n                </RadioGroup>\n              </FormControl>\n            </DialogContentText>\n          </DialogContent>\n        )}\n        <DialogContent>\n          {\n            (shareType !== SHARE.ORGANIZATION || isWorkspace) ?\n              <>\n                <Box style={{position: 'relative'}}>\n                  <Input\n                    id=\"inputSearch\"\n                    sx={{width: \"60%\"}}\n                    placeholder={\"Search and add users\"}\n                    value={textSearch}\n                    onChange={handleSearch}\n                  />\n                  {\n                    textSearch && usersSuggest ?\n                      <TableListSearch\n                        onClose={handleCloseSearch}\n                        usersSuggest={usersSuggest}\n                        stateUserShare={stateUserShare?.users || []}\n                        handleAddListUser={handleAddListUser}\n                      /> : null\n                  }\n                </Box>\n                <p>Permitted users</p>\n                {\n                  stateUserShare &&\n                  <DataGrid\n                    sx={{minHeight: 400}}\n                    // onRowClick={handleShareTrue}\n                    rows={stateUserShare?.users.map((user: any) => ({...user, share: true}))}\n                    columns={columnsShare(handleShareFalse)}\n                    hideFooterPagination\n                  />\n                }\n              </>\n              : null\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)}>Cancel</Button>\n          <Button onClick={handleOke}>Ok</Button>\n        </DialogActions>\n      </DialogCustom>\n      {\n        loading ? <Loading /> : null\n      }\n    </Box>\n  )\n}\n\nconst DialogCustom = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialog-container\": {\n    \"& .MuiPaper-root\": {\n      width: \"70%\",\n      maxWidth: \"890px\",\n    },\n  },\n}))\n\nconst TableListSearchWrapper = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  background: \"#fff\",\n  zIndex: 100,\n  width: \"60%\",\n  boxShadow: '0 6px 16px 0 rgba(0,0,0,.08), 0 3px 6px -4px rgba(0,0,0,.12), 0 9px 28px 8px rgba(0,0,0,.05)',\n  borderBottomLeftRadius: 8,\n  borderBottomRightRadius: 8,\n  maxHeight: 200,\n  overflow: 'auto'\n}))\n\nconst UlCustom = styled('ul')(({ theme }) => ({\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n}))\n\nconst LiCustom = styled('li')(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  fontSize: 14,\n  cursor: \"pointer\",\n  display: 'flex',\n  justifyContent: \"space-between\",\n  alignItems: 'center',\n  \"&:hover\": {\n    backgroundColor: 'rgba(0,0,0,.04)'\n  }\n}))\n\nexport default PopupShare\n","import { UserDTO } from \"api/users/UsersApiDTO\"\n\nexport const isMine = (user?: UserDTO, idUserWorkSpace?: number) => {\n  return !!(user && idUserWorkSpace && user.id === idUserWorkSpace)\n}\n","import {Box, FormControl, NativeSelect, Pagination, styled} from \"@mui/material\";\nimport {DatabaseDTO} from \"../../store/slice/Database/DatabaseType\";\nimport {WorkspaceDataDTO} from \"../../store/slice/Workspace/WorkspaceType\";\nimport {ChangeEvent} from \"react\";\nimport {UserListDTO} from \"../../api/users/UsersApiDTO\";\n\ntype PagiProps = {\n  data: DatabaseDTO | WorkspaceDataDTO | UserListDTO\n  handlePage: (e: ChangeEvent<unknown>, page: number) => void\n  handleLimit: (e: ChangeEvent<HTMLSelectElement>) => void\n  limit: number | null\n}\n\nconst PaginationCustom = ({data, handlePage, handleLimit, limit}: PagiProps) => {\n  return (\n    <PaginationCustomWrapper>\n      <span>Rows per page: </span>\n      <FormControl sx={{ width: 'max-content', margin: '4px 16px 0 12px' }}>\n        <NativeSelect\n          value={limit || 50}\n          onChange={handleLimit}\n          inputProps={{\n            name: 'limit',\n            id: 'uncontrolled-native',\n          }}\n        >\n          <option value={10}>10</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n        </NativeSelect>\n      </FormControl>\n      <span>{`${((data?.offset || 0) + 1)} - ${(data?.offset || 0) + (data?.items?.length || 0)} of ${(data?.total) || 0}`}</span>\n      <Pagination\n        count={Math.ceil(data.total / data.limit)}\n        page={Math.ceil(data.offset / data.limit) + 1}\n        onChange={handlePage}\n      />\n    </PaginationCustomWrapper>\n  )\n}\n\nconst PaginationCustomWrapper = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'end',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  gap: 2\n}))\n\nexport default PaginationCustom\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  Box,\n  styled,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input, Tooltip,\n} from '@mui/material'\nimport {\n  GridEventListener,\n  GridRenderCellParams,\n  GridRowModes,\n  GridValidRowModel,\n  DataGrid\n} from '@mui/x-data-grid'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport Loading from '../../components/common/Loading'\nimport {\n  selectIsLoadingWorkspaceList,\n  selectWorkspaceData, selectWorkspaceListUserShare,\n} from 'store/slice/Workspace/WorkspaceSelector'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport {\n  delWorkspace,\n  exportWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspaceList,\n  postWorkspace,\n  putWorkspace,\n} from 'store/slice/Workspace/WorkspacesActions'\nimport PopupShare from 'components/PopupShare'\nimport moment from 'moment'\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport { isMine } from 'utils/checkRole'\nimport PaginationCustom from \"../../components/common/PaginationCustom\";\nimport {useSnackbar, VariantType} from \"notistack\";\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel?: () => void\n  setNewWorkSpace?: (name: string) => void\n  value?: string\n  handleOkNew?: () => void\n  handleOkSave?: () => void\n  error?: string\n  nameWorkspace?: string\n}\n\nconst columns = (\n  handleOpenPopupShare: (id: number) => void,\n  handleOpenPopupDel: (id: number, nameWorkspace: string) => void,\n  handleDownload: (id: number) => void,\n  handleNavWorkflow: (id: number) => void,\n  handleNavRecords: (id: number) => void,\n  user?: UserDTO,\n  onEdit?: (id: number) => void,\n) => [\n  {\n    field: 'id',\n    headerName: 'ID',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 1,\n    minWidth: 70,\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span>{params.value}</span>\n    ),\n  },\n  {\n    field: 'name',\n    headerName: 'Workspace Name',\n    flex: 2,\n    minWidth: 100,\n    editable: true,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      const { row, value } = params\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n            justifyContent: 'space-between',\n            width: '100%'\n          }}\n        >\n          <Tooltip title={value} placement=\"top\">\n            <span\n              style={{\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                width: '100%'\n              }}\n            >\n            {value}\n          </span>\n          </Tooltip>\n          {isMine(user, row?.user?.id) ? (\n            <ButtonIcon onClick={() => onEdit?.(row.id)}>\n              <EditIcon style={{ fontSize: 16 }} />\n            </ButtonIcon>\n          ) : null}\n        </Box>\n      )\n    },\n  },\n  {\n    field: 'user',\n    headerName: 'Owner',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 2,\n    minWidth: 100,\n    renderCell: (\n      params: GridRenderCellParams<{ name: string; id: number }>,\n    ) => (\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        {\n          params.value ?\n            <>\n              <span>{params.value?.name}</span>\n              {!isMine(user, params?.value.id) ? <GroupsIcon /> : ''}\n            </> : null\n        }\n      </Box>\n    ),\n  },\n  {\n    field: 'created_at',\n    headerName: 'Created',\n    flex: 2,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span style={{\n        whiteSpace: 'normal',\n        wordBreak: 'break-all',\n        overflowWrap: 'break-word',\n      }}>{moment(params.value).format('YYYY/MM/DD hh:mm')}</span>\n    ),\n  },\n  {\n    field: 'workflow',\n    headerName: '',\n    flex: 1,\n    minWidth: 160,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <Button\n        variant='contained'\n        color='primary'\n        size='small'\n        onClick={() => handleNavWorkflow(params.row.id)}\n      >\n        Workflow\n      </Button>\n    ),\n  },\n  {\n    field: 'records',\n    headerName: '',\n    flex: 1,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      return (\n        <Button\n          variant='contained'\n          color='primary'\n          size='small'\n          onClick={() => handleNavRecords(params.row.id)}\n        >\n          Records\n        </Button>\n      )\n    }\n  },\n  {\n    field: 'share',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n        <ButtonIcon onClick={() => handleOpenPopupShare(params.row.id)}>\n          <GroupsIcon color={params.row.shared_count ? 'primary' : 'inherit'}/>\n        </ButtonIcon>\n      ): null\n  },\n  {\n    field: 'delete',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n      <ButtonIcon onClick={() => handleOpenPopupDel(params.row.id, params.row.name)}>\n        <DeleteIcon color='error' />\n      </ButtonIcon>\n      ) : null\n  },\n]\n\nconst PopupNew = ({\n  open,\n  handleClose,\n  value,\n  setNewWorkSpace,\n  handleOkNew,\n  error,\n}: PopupType) => {\n  if (!setNewWorkSpace) return null\n  const handleName = (event: ChangeEvent<HTMLInputElement>) => {\n    setNewWorkSpace(event.target.value)\n  }\n\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>New Workspace</DialogTitle>\n        <DialogContent sx={{ minWidth: 300 }}>\n          <Input\n            sx={{ width: '80%' }}\n            placeholder={'Workspace Name'}\n            value={value || ''}\n            onChange={handleName}\n          />\n          <br />\n          {error ? <span style={{ color: 'red' }}>{error}</span> : null}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkNew}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst PopupDelete = ({open, handleClose, handleOkDel, nameWorkspace}: PopupType) => {\n  if(!open) return null\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>Do you want delete Workspace \"{nameWorkspace}\"?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkDel}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst Workspaces = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const loading = useSelector(selectIsLoadingWorkspaceList)\n  const listUserShare = useSelector(selectWorkspaceListUserShare)\n  const data = useSelector(selectWorkspaceData)\n  const user = useSelector(selectCurrentUser)\n  const [open, setOpen] = useState({\n    share: false,\n    del: false,\n    new: false,\n    shareId: 0,\n  })\n  const [workspaceDel, setWorkspaceDel] = useState<{id: number, name: string}>()\n  const [newWorkspace, setNewWorkSpace] = useState<string>()\n  const [error, setError] = useState('')\n  const [initName, setInitName] = useState('')\n  const [rowModesModel, setRowModesModel] = useState<any>({})\n  const [searchParams, setParams] = useSearchParams()\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit')\n\n  const dataParams = useMemo(() => {\n    return {\n      offset: Number(offset) || 0,\n      limit: Number(limit) || 50,\n    }\n    //eslint-disable-next-line\n  }, [offset, limit])\n\n  useEffect(() => {\n    dispatch(getWorkspaceList(dataParams))\n    //eslint-disable-next-line\n  }, [dataParams])\n\n  const handleOpenPopupShare = (shareId: number) => {\n    setOpen({ ...open, share: true, shareId })\n  }\n\n  useEffect(() => {\n    if (!open.share || !open.shareId) return\n    dispatch(getListUserShareWorkSpaces({ id: open.shareId }))\n    //eslint-disable-next-line\n  }, [open.share, open.shareId])\n\n  const handleClosePopupShare = () => {\n    setOpen({ ...open, share: false })\n  }\n\n  const handleOpenPopupDel = (id: number, name: string) => {\n    setWorkspaceDel({id, name})\n    setOpen({ ...open, del: true })\n  }\n\n  const handleOkDel = async () => {\n    if (!workspaceDel) return\n    const data = await dispatch(delWorkspace({ id: workspaceDel.id, params: dataParams }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Workspace deletion failed!')\n    }\n    else {\n      handleClickVariant('success', 'The workspace has been deleted successfully!')\n    }\n    setOpen({ ...open, del: false })\n  }\n\n  const handleClosePopupDel = () => {\n    setOpen({ ...open, del: false })\n  }\n\n  const handleOpenPopupNew = () => {\n    setOpen({ ...open, new: true })\n  }\n\n  const handleClosePopupNew = () => {\n    setOpen({ ...open, new: false })\n    setError('')\n  }\n\n  const handleNavWorkflow = (id: number) => {\n    navigate(`/console/workspaces/${id}`)\n  }\n\n  const handleNavRecords = (id: number) => {\n    navigate(`/console/workspaces/${id}`, { state: { tab: 2 } })\n  }\n\n  const onEditName = (id: number) => {\n    setRowModesModel((pre: any) => ({ ...pre, [id]: { mode: GridRowModes.Edit } }))\n  }\n\n  const handleOkNew = async () => {\n    if (!newWorkspace) {\n      setError(\"Workspace Name cann't empty\")\n      return\n    }\n    const data = await dispatch(postWorkspace({ name: newWorkspace }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Workspace creation failed!')\n    }\n    else {\n      handleClickVariant('success', 'The workspace has been created successfully!')\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    setOpen({ ...open, new: false })\n    setError('')\n    setNewWorkSpace('')\n  }\n\n  const onProcessRowUpdateError = (newRow: any) => {\n    return newRow\n  }\n\n  const pagi = useCallback(\n    (page?: number) => {\n      return `limit=${data.limit}&offset=${page ? (page-1) * data.limit : data.offset}`\n    },\n    [data?.limit, data?.offset],\n  )\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    setParams(`&${pagi(page)}`)\n  }\n\n  const handleDownload = async (id: number) => {\n    dispatch(exportWorkspace(id))\n  }\n\n  const handleRowModesModelChange = (newRowModesModel: any) => {\n    setRowModesModel(newRowModesModel)\n  }\n\n  const onRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\n    setInitName(params.row.name)\n  }\n\n  const onCellClick: GridEventListener<'cellClick'> | undefined = (event: any) => {\n    if (event.field === 'name') return\n    setRowModesModel((pre: any) => {\n      const object: any = {}\n      Object.keys(pre).forEach(key => {\n        object[key] = {\n          mode: GridRowModes.View, ignoreModifications: false\n        }\n      })\n      return object\n    })\n  }\n\n  const processRowUpdate = async (newRow: any) => {\n    if (!newRow.name) {\n      handleClickVariant('error', \"Workspace Name cann't empty\")\n      return { ...newRow, name: initName }\n    }\n    if (newRow.name === initName) return newRow\n    const data = await dispatch(putWorkspace({ name: newRow.name, id: newRow.id }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Workspace name edit failed!')\n    }\n    else {\n      handleClickVariant('success', 'Workspace name edited successfully!')\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    return newRow\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    setParams(\n        `limit=${Number(event.target.value)}&offset=0`,\n    )\n  }\n\n  return (\n    <WorkspacesWrapper>\n      <WorkspacesTitle>Workspaces</WorkspacesTitle>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button\n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenPopupNew}>New</Button>\n      </Box>\n      {\n        user ?\n          <Box\n            sx={{\n              minHeight: 500,\n              height: 'calc(100vh - 350px)',\n            }}\n          >\n            <DataGrid\n              // todo enable when api complete\n              // filterMode={'server'}\n              // sortingMode={'server'}\n              // onSortModelChange={handleSort}\n              // onFilterModelChange={handleFilter as any}\n              onCellClick={onCellClick}\n              rows={data?.items}\n              editMode=\"row\"\n              rowModesModel={rowModesModel}\n              columns={\n                columns(\n                  handleOpenPopupShare,\n                  handleOpenPopupDel,\n                  handleDownload,\n                  handleNavWorkflow,\n                  handleNavRecords,\n                  user,\n                  onEditName,\n                ).filter(Boolean) as any\n              }\n              onRowModesModelChange={handleRowModesModelChange}\n              isCellEditable={(params) => isMine(user, params.row.user?.id)}\n              onProcessRowUpdateError={onProcessRowUpdateError}\n              onRowEditStop={onRowEditStop}\n              processRowUpdate={processRowUpdate as any}\n              hideFooter={true}\n            />\n          </Box> : null\n      }\n      {\n        data?.items.length > 0 ?\n          <PaginationCustom\n            data={data}\n            handlePage={handlePage}\n            handleLimit={handleLimit}\n            limit={Number(limit)}\n          /> : null\n      }\n      {open.share ? (\n        <PopupShare\n          isWorkspace\n          title=\"Share Workspace\"\n          usersShare={listUserShare}\n          open={open.share}\n          handleClose={(_isSubmit: boolean) => {\n            if (_isSubmit) {\n              dispatch(getWorkspaceList(dataParams))\n            }\n            handleClosePopupShare()\n          }}\n          id={open.shareId}\n          data={{ expId: '', shareType: 0 }}\n        />\n      ) : null}\n      <PopupDelete\n        open={open.del}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        nameWorkspace={workspaceDel?.name}\n      />\n      <PopupNew\n        open={open.new}\n        handleClose={handleClosePopupNew}\n        setNewWorkSpace={setNewWorkSpace}\n        value={newWorkspace}\n        error={error}\n        handleOkNew={handleOkNew}\n      />\n      {loading ? <Loading /> : null}\n    </WorkspacesWrapper>\n  )\n}\n\nconst WorkspacesWrapper = styled(Box)(({ theme }) => ({\n  margin: 'auto',\n  width: '90vw',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst WorkspacesTitle = styled('h1')(({ theme }) => ({}))\n\nconst ButtonIcon = styled('button')(({ theme }) => ({\n  minWidth: '32px',\n  minHeight: '32px',\n  width: '32px',\n  height: '32px',\n  color: '#444',\n  border: 'none',\n  borderRadius: '50%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  background: 'transparent',\n  '&:hover': {\n    background: 'rgb(239 239 239)',\n  },\n}))\n\nexport default Workspaces\n","import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { RootState } from 'store/store'\n\nexport const selectFlowNodes = (state: RootState) => state.flowElement.flowNodes\n\nexport const selectFlowEdges = (state: RootState) => state.flowElement.flowEdges\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowNodes(state).find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { Transform, Node, Edge } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = (typeof NODE_TYPE_SET)[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowNodes: Node<NodeData>[]\n  flowEdges: Edge[]\n  flowPosition: Transform\n  elementCoord: ElementCoord\n}\n","import { isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n  HistogramData,\n  LineData,\n  PieData,\n  PolarData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n  histogram: {\n    [filePath: string]: HistogramDisplayData\n  }\n  line: {\n    [filePath: string]: LineDisplayData\n  }\n  pie: {\n    [filepath: string]: PieDisplayData\n  }\n  polar: {\n    [filePath: string]: PolarDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  MATLAB: 'matlab',\n  HISTOGRAM: 'histogram',\n  LINE: 'line',\n  PIE: 'pie',\n  POLAR: 'polar',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n\nexport interface HistogramDisplayData\n  extends BaseDisplay<'histogram', HistogramData> {}\n\nexport interface LineDisplayData extends BaseDisplay<'line', LineData> {\n  columns: number[]\n  index: number[]\n}\n\nexport interface PieDisplayData extends BaseDisplay<'pie', PieData> {\n  columns: string[]\n}\n\nexport interface PolarDisplayData extends BaseDisplay<'polar', PolarData> {\n  columns: number[]\n  index: number[]\n}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    case 'histogram':\n      return DATA_TYPE_SET.HISTOGRAM\n    case 'line':\n      return DATA_TYPE_SET.LINE\n    case 'pie':\n      return DATA_TYPE_SET.PIE\n    case 'polar':\n      return DATA_TYPE_SET.POLAR\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  MATLAB: 'matlab',\n  EXPDB: 'expdb',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType =\n  | CsvInputNode\n  | ImageInputNode\n  | HDF5InputNode\n  | MatlabInputNode\n  | ExpDbInputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n\nexport type MatlabInputParamType = {\n  fieldName?: string\n  index?: number[]\n}\n\nexport interface MatlabInputNode\n  extends InputNodeBaseType<'matlab', MatlabInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ExpDbInputNode extends InputNodeBaseType<'expdb', {}> {\n  selectedFilePath?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  MatlabInputNode,\n  ExpDbInputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n\nexport function isMatlabInputNode(\n  inputNode: InputNodeType,\n): inputNode is MatlabInputNode {\n  switch (inputNode.fileType) {\n    case FILE_TYPE_SET.MATLAB:\n      return true\n    default:\n      return false\n  }\n}\n\nexport function isExpDbInputNode(\n  inputNode: InputNodeType,\n): inputNode is ExpDbInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.EXPDB\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n  isMatlabInputNode,\n  isExpDbInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectMatlabInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isMatlabInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nconst selectMatlabInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isMatlabInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not MatlbaInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectMatlabInputNodeParamFieldName =\n  (nodeId: string) => (state: RootState) =>\n    selectMatlabInputNodeParam(nodeId)(state).fieldName\n\nexport const selectMatlabInputNodeParamIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectMatlabInputNodeParam(nodeId)(state).index\n\nexport const selectExpDbInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const inputNode = selectInputNodeById(nodeId)(state)\n    if (isExpDbInputNode(inputNode)) {\n      return inputNode.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { isAlgorithmNodeData } from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const nodes = selectFlowNodes(state)\n  return nodes\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const nodes = selectFlowNodes(state)\n  const nodeDict: NodeDict = {}\n  nodes.forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowEdges(state).forEach((edge) => {\n    edgeDict[edge.id] = edge\n  })\n  return edgeDict\n}\n","import axios from 'utils/axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  workspaceId: number,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${workspaceId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  workspaceId: number,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(\n    `${BASE_URL}/run/${workspaceId}/${uid}`,\n    data,\n  )\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  workspaceId: number\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${workspaceId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n\nexport async function cancelResultApi(data: {\n  workspaceId: string\n  uid: string\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid } = data\n  const response = await axios.post(`${BASE_URL}/run/cancel/${workspaceId}/${uid}`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n  cancelResultApi,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runApi(workspaceId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (workspaceId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          workspaceId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue(\n        'workspaceId or currentUid dose not exist.',\n      )\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runResult({\n        workspaceId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n\nexport const cancelResult = createAsyncThunk<\n    RunResultDTO,\n    {\n      uid: string\n    },\n    ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/cancelResult`, async ({ uid }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await cancelResultApi({\n        workspaceId: String(workspaceId),\n        uid\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { OutputPathsDTO } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\nimport { WorkflowConfigDTO } from 'api/workflow/Workflow'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  workspace_id: number\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport type FetchExperimentDTO = ExperimentDTO & WorkflowConfigDTO\n\nexport async function getExperimentsApi(\n  workspaceId: number,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${workspaceId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(\n  workspaceId: number,\n  uid: string,\n): Promise<boolean> {\n  const response = await axios.delete(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  workspaceId: number,\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(\n    `${BASE_URL}/experiments/delete/${workspaceId}`,\n    {\n      uidList,\n    },\n  )\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(\n  workspaceId: number,\n  uid: string,\n  nodeId?: string,\n) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  workspace_id: number,\n): Promise<FetchExperimentDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/fetch/${workspace_id}`,\n  )\n  return response.data\n}\n\nexport async function renameExperiment(\n  workspaceId: number,\n  uid: string,\n  new_name: string,\n) {\n  const response = await axios.patch(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}/rename`,\n    {\n      new_name,\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n  message?: string\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  FetchExperimentDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  deleteExperimentByListApi,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await getExperimentsApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByUid = createAsyncThunk<\n  boolean,\n  string,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByList = createAsyncThunk<\n  boolean,\n  string[],\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByListApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<FetchExperimentDTO, number>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (workspaceId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","export const WORKFLOW_SLICE_NAME = 'workflow'\n","import axios from 'utils/axios'\n\nimport { EdgeDict, NodeDict } from 'api/run/Run'\nimport { BASE_URL } from 'const/API'\n\nexport type WorkflowConfigDTO = {\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n}\n\nexport async function reproduceWorkflowApi(\n  workspaceId: number,\n  uid: string,\n): Promise<WorkflowConfigDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/workflow/reproduce/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function downloadWorkflowConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/workflow/download/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function importWorkflowConfigApi(\n  formData: FormData,\n): Promise<WorkflowConfigDTO> {\n  const response = await axios.post(`${BASE_URL}/workflow/import`, formData)\n  return response.data\n}\n","import { WORKFLOW_SLICE_NAME } from './WorkflowType'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  reproduceWorkflowApi,\n  importWorkflowConfigApi,\n  WorkflowConfigDTO,\n} from 'api/workflow/Workflow'\n\nexport const reproduceWorkflow = createAsyncThunk<\n  WorkflowConfigDTO,\n  { workspaceId: number; uid: string }\n>(\n  `${WORKFLOW_SLICE_NAME}/reproduceWorkflow`,\n  async ({ workspaceId, uid }, thunkAPI) => {\n    try {\n      const response = await reproduceWorkflowApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importWorkflowConfig = createAsyncThunk<\n  WorkflowConfigDTO,\n  { formData: FormData }\n>(\n  `${WORKFLOW_SLICE_NAME}/importWorkflowConfig`,\n  async ({ formData }, thunkAPI) => {\n    try {\n      const response = await importWorkflowConfigApi(formData)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { PayloadAction, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { WORKSPACE_SLICE_NAME, Workspace } from './WorkspaceType'\nimport { reproduceWorkflow } from '../Workflow/WorkflowActions'\nimport {\n  delWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspace,\n  getWorkspaceList,\n  postListUserShareWorkspaces,\n  postWorkspace,\n  putWorkspace,\n} from './WorkspacesActions'\n\nconst initialState: Workspace = {\n  currentWorkspace: {\n    selectedTab: 0,\n  },\n  workspace: {\n    items: [],\n    total: 0,\n    limit: 50,\n    offset: 0,\n  },\n  loading: false,\n  listUserShare: undefined,\n}\n\nexport const workspaceSlice = createSlice({\n  name: WORKSPACE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setActiveTab: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.selectedTab = action.payload\n    },\n    setCurrentWorkspace: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.workspaceId = action.payload\n    },\n    clearCurrentWorkspace: (state) => {\n      state.currentWorkspace = {\n        selectedTab: 0,\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(reproduceWorkflow.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.meta.arg.workspaceId\n      })\n      .addCase(getWorkspace.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.payload.id\n        state.currentWorkspace.ownerId = action.payload.user.id\n        state.loading = false\n      })\n      .addCase(getWorkspaceList.fulfilled, (state, action) => {\n        state.workspace = action.payload\n        state.loading = false\n      })\n      .addCase(getListUserShareWorkSpaces.fulfilled, (state, action) => {\n        state.listUserShare = action.payload\n        state.loading = false\n      })\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.rejected,\n          getWorkspaceList.rejected,\n          postWorkspace.fulfilled,\n          postWorkspace.rejected,\n          putWorkspace.fulfilled,\n          putWorkspace.rejected,\n          delWorkspace.fulfilled,\n          delWorkspace.rejected,\n          getListUserShareWorkSpaces.rejected,\n          postListUserShareWorkspaces.rejected,\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.pending,\n          getWorkspaceList.pending,\n          postWorkspace.pending,\n          putWorkspace.pending,\n          delWorkspace.pending,\n          getListUserShareWorkSpaces.pending,\n          postListUserShareWorkspaces.pending,\n        ),\n        (state) => {\n          state.loading = true\n        },\n      )\n  },\n})\n\nexport const { setCurrentWorkspace, clearCurrentWorkspace, setActiveTab } =\n  workspaceSlice.actions\nexport default workspaceSlice.reducer\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport { RunResultDTO } from 'api/run/Run'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    const status = convertToExperimentStatus(value.success)\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: status,\n      hasNWB: value.hasNWB,\n    }\n    status === 'error' &&\n      value.message &&\n      (functions[value.unique_id].message = value.message)\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([nodeId, value]) => {\n    result[nodeId] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {\n    clearExperiments: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport const { clearExperiments } = experimentsSlice.actions\nexport default experimentsSlice.reducer\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsStatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsStatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsStatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsStatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    }\n\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n\nexport const selectExperimentFunctionMessage =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).message\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport SimCardDownloadOutlinedIcon from '@mui/icons-material/SimCardDownloadOutlined'\nimport { useSelector } from 'react-redux'\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\nimport { downloadWorkflowConfigApi } from 'api/workflow/Workflow'\nimport { useSnackbar } from 'notistack'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    if (!workspaceId) return\n    try {\n      const responseData = await downloadExperimentNwbApi(\n        workspaceId!,\n        uid,\n        nodeId,\n      )\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <SimCardDownloadOutlinedIcon />\n      </IconButton>\n      <a href={url} download={`nwb_${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const SnakemakeDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <SimCardDownloadOutlinedIcon color=\"primary\" />\n      </IconButton>\n      <a\n        href={url}\n        download={`snakemake_${workspaceId}.yaml`}\n        className=\"hidden\"\n        ref={ref}\n      >\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const WorkflowDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadWorkflowConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <SimCardDownloadOutlinedIcon color=\"primary\" />\n      </IconButton>\n      <a\n        href={url}\n        download={`workflow_${workspaceId}.yaml`}\n        className=\"hidden\"\n        ref={ref}\n      >\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionMessage,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\nimport { IconButton, Popover } from '@mui/material'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={11}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n  const message = useSelector(selectExperimentFunctionMessage(uid, nodeId))\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null)\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n  const open = Boolean(anchorEl)\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <IconButton onClick={handleClick} disabled={!message}>\n          <ExperimentStatusIcon status={status} />\n        </IconButton>\n        <Popover\n          id=\"function-error-message\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <Typography sx={{ p: 1, color: 'crimson', fontSize: 14 }}>\n            {message}\n          </Typography>\n        </Popover>\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport {\n  cancelResult,\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n    clearCurrentPipeline: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(reproduceWorkflow.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg.uid,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(importWorkflowConfig.fulfilled, (state, action) => {\n        state.currentPipeline = undefined\n        state.runBtn = RUN_BTN_OPTIONS.RUN_NEW\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(cancelResult.fulfilled, (state, action) => {\n        state.run.status = RUN_STATUS.CANCELED\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { setRunBtnOption, clearCurrentPipeline } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n    uid === currentPipelineUid && dispatch(clearCurrentPipeline())\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    workspaceId: number\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      workspace_id: params.workspaceId,\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n\nexport async function addRoiApi(\n  path: string,\n  data: { posx: number; posy: number; sizex: number; sizey: number },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/add_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function mergeRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/merge_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function deleteRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/delete_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport type LineData = number[][]\n\nexport async function getLineDataApi(\n  path: string,\n): Promise<{ data: LineData; columns: number[]; index: number[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type PolarData = number[][]\n\nexport async function getPolarDataApi(\n  path: string,\n): Promise<{ data: PolarData; columns: number[]; index: number[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HistogramData = number[][]\n\nexport async function getHistogramDataApi(\n  path: string,\n): Promise<{ data: HistogramData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type PieData = number[][]\n\nexport async function getPieDataApi(\n  path: string,\n): Promise<{ data: PieData; columns: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  HistogramData,\n  LineData,\n  PieData,\n  PolarData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n  getHistogramDataApi,\n  getLineDataApi,\n  getPieDataApi,\n  getPolarDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; workspaceId: number; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, {\n        workspaceId,\n        startIndex,\n        endIndex,\n      })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getCsvData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getCsvDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getRoiData = createAsyncThunk<\n  { data: RoiData },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHistogramData = createAsyncThunk<\n  { data: HistogramData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHistogramData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHistogramDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getLineData = createAsyncThunk<\n  { data: LineData; columns: number[]; index: number[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getLineData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getLineDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getPieData = createAsyncThunk<\n  { data: PieData; columns: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getPieData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getPieDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getPolarData = createAsyncThunk<\n  { data: PolarData; columns: number[]; index: number[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getPolarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getPolarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n\nexport const selectHistogramData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).histogram[filePath].data\n\nexport const selectHistogramDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).histogram).includes(filePath)\n\nexport const selectHistogramDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).histogram[filePath].pending\n\nexport const selectHistogramDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).histogram[filePath].fulfilled\n\nexport const selectHistogramDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).histogram[filePath].error\n      : null\nexport const selectLineData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].data\n\nexport const selectLineColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].columns\n\nexport const selectLineIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].index\n\nexport const selectLineDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).line).includes(filePath)\n\nexport const selectLineDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectLineDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).line[filePath].pending\n\nexport const selectLineDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectLineDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).line[filePath].fulfilled\n\nexport const selectLineDataError = (filePath: string) => (state: RootState) =>\n  selectLineDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).line[filePath].error\n    : null\n\nexport const selectPieData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].data\n\nexport const selectPieColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].columns\n\nexport const selectPieDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).pie).includes(filePath)\n\nexport const selectPieDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectPieDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).pie[filePath].pending\n\nexport const selectPieDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectPieDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).pie[filePath].fulfilled\n\nexport const selectPieDataError = (filePath: string) => (state: RootState) =>\n  selectPieDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).pie[filePath].error\n    : null\n\nexport const selectPolarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].data\n\nexport const selectPolarColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].columns\n\nexport const selectPolarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].index\n\nexport const selectPolarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).polar).includes(filePath)\n\nexport const selectPolarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectPolarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).polar[filePath].pending\n\nexport const selectPolarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectPolarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).polar[filePath].fulfilled\n\nexport const selectPolarDataError = (filePath: string) => (state: RootState) =>\n  selectPolarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).polar[filePath].error\n    : null\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number | string]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n  | HistogramItem\n  | LineItem\n  | PieItem\n  | PolarItem\n  | MatlabItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  outputKey?: string\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n\nexport interface HistogramItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HISTOGRAM\n  bins: number\n}\n\nexport interface LineItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.LINE\n  selectedIndex: number\n}\n\nexport interface PieItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.PIE\n}\n\nexport interface PolarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.POLAR\n  selectedIndex: number\n}\n\nexport interface MatlabItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.MATLAB\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n  HistogramItem,\n  LineItem,\n  PieItem,\n  PolarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n\nexport function isHistogramItem(\n  item: VisualaizeItemType,\n): item is HistogramItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HISTOGRAM\n  )\n}\n\nexport function isLineItem(item: VisualaizeItemType): item is LineItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.LINE\n  )\n}\n\nexport function isPieItem(item: VisualaizeItemType): item is PieItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.PIE\n  )\n}\n\nexport function isPolarItem(item: VisualaizeItemType): item is PolarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.POLAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n  isHistogramItem,\n  isLineItem,\n  isPolarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemOutputKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiItem?.outputKey ?? null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n\nexport const selectHistogramItemBins =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHistogramItem(item)) {\n      return item.bins\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectLineItemSelectedIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isLineItem(item)) {\n      return item.selectedIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectPolarItemSelectedIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isPolarItem(item)) {\n      return item.selectedIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  HistogramItem,\n  LineItem,\n  PieItem,\n  PolarItem,\n  MatlabItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n  isHistogramItem,\n  isLineItem,\n  isPolarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\nconst histogramItemInitialValue: HistogramItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HISTOGRAM,\n  bins: 20,\n}\nconst lineItemInitialValue: LineItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.LINE,\n  selectedIndex: 0,\n}\nconst pieItemInitialValue: PieItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.PIE,\n}\nconst polarItemInitialValue: PolarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.POLAR,\n  selectedIndex: 0,\n}\nconst matlabItemInitialValue: MatlabItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.MATLAB,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n    case DATA_TYPE_SET.HISTOGRAM:\n      return histogramItemInitialValue\n    case DATA_TYPE_SET.LINE:\n      return lineItemInitialValue\n    case DATA_TYPE_SET.PIE:\n      return pieItemInitialValue\n    case DATA_TYPE_SET.POLAR:\n      return polarItemInitialValue\n    case DATA_TYPE_SET.MATLAB:\n      return matlabItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    reset: (state) => {\n      state.items = initialState.items\n      state.layout = initialState.layout\n      state.selectedItemId = initialState.selectedItemId\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        outputKey?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, outputKey } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n          targetItem.roiItem.outputKey = outputKey\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n            outputKey,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    resetAllOrderList: (state) => {\n      Object.keys(state.items).forEach((id: any) => {\n        const targetItem = state.items[id]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawOrderList = []\n        }\n      })\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n    setHistogramItemBins: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        bins: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHistogramItem(targetItem)) {\n        targetItem.bins = action.payload.bins\n      }\n    },\n    setLineItemSelectedIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        selectedIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isLineItem(targetItem)) {\n        targetItem.selectedIndex = action.payload.selectedIndex\n      }\n    },\n    setPolartemItemSelectedIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        selectedIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isPolarItem(targetItem)) {\n        targetItem.selectedIndex = action.payload.selectedIndex\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n  setHistogramItemBins,\n  setLineItemSelectedIndex,\n  setPolartemItemSelectedIndex,\n  resetAllOrderList,\n  reset,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { reproduceWorkflow } from 'store/slice/Workflow/WorkflowActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ReproduceButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    if (workspaceId) {\n      dispatch(reproduceWorkflow({workspaceId, uid}))\n      .unwrap()\n      .then(() => {\n        enqueueSnackbar('Successfully reproduced.', { variant: 'success' })\n        dispatch(reset())\n      })\n      .catch(() => {\n        enqueueSnackbar('Failed to reproduce', { variant: 'error' })\n      })\n    } else {\n      enqueueSnackbar('Workspace id is missing', { variant: 'error' })\n    }\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsStatusIsUninitialized,\n  selectExperimentsStatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsStatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  SnakemakeDownloadButton,\n  WorkflowDownloadButton,\n} from './Button/DownloadButton'\nimport { ReproduceButton } from './Button/ReproduceButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport { styled } from '@mui/material/styles'\nimport { renameExperiment } from 'api/experiments/Experiments'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport {\n  selectCurrentWorkspaceId,\n  selectIsWorkspaceOwner,\n} from 'store/slice/Workspace/WorkspaceSelector'\nimport {WAITING_TIME} from \"../../../@types\";\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsStatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsStatusIsFulfilled)\n  const isError = useSelector(selectExperimentsStatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'optinist_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    checkedList.filter((v) => v === currentPipelineUid).length > 0 &&\n      dispatch(clearCurrentPipeline())\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        {isOwner && (\n          <Button\n            sx={{\n              marginBottom: (theme) => theme.spacing(1),\n            }}\n            variant=\"outlined\"\n            color=\"error\"\n            endIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={checkedList.length === 0}\n          >\n            Delete\n          </Button>\n        )}\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n              isOwner={isOwner}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                      isOwner={isOwner}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n  isOwner: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n    isOwner,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>Workflow</TableCell>\n          <TableCell>Snakemake</TableCell>\n          <TableCell>NWB</TableCell>\n          {isOwner && <TableCell>Delete</TableCell>}\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n  isOwner: boolean\n}>(({ onCheckBoxClick, checked, isOwner }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n  const [isEdit, setEdit] = useState(false)\n  const [errorEdit, setErrorEdit] = useState('')\n  const [valueEdit, setValueEdit] = useState(name)\n  const dispatch = useDispatch()\n\n  const onBlurEdit = (event: any) => {\n    event.preventDefault()\n    if (errorEdit) return\n    setTimeout(() => {\n      setEdit(false)\n      onSaveNewName()\n    }, WAITING_TIME)\n  }\n\n  const onEdit = (event: any) => {\n    if (isEdit || errorEdit) return\n    event.preventDefault()\n    setEdit(true)\n  }\n\n  const onChangeName = (event: ChangeEvent<HTMLInputElement>) => {\n    let errorEdit = ''\n    if (!event.target.value.trim()) {\n      errorEdit = 'Name is empty'\n    }\n    setErrorEdit(errorEdit)\n    setValueEdit(event.target.value)\n  }\n\n  const onSaveNewName = async () => {\n    if (valueEdit === name || workspaceId === void 0) return\n    await renameExperiment(workspaceId, uid, valueEdit)\n    dispatch(getExperiments())\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell sx={{ width: 160, position: 'relative' }} onClick={onEdit}>\n          {!isEdit ? (\n            valueEdit\n          ) : (\n            <>\n              <Input\n                placeholder=\"Name\"\n                error={!!errorEdit}\n                onChange={onChangeName}\n                autoFocus\n                onBlur={onBlurEdit}\n                value={valueEdit}\n              />\n              {errorEdit ? <TextError>{errorEdit}</TextError> : null}\n            </>\n          )}\n        </TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ReproduceButton />\n        </TableCell>\n        <TableCell>\n          <WorkflowDownloadButton />\n        </TableCell>\n        <TableCell>\n          <SnakemakeDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        {isOwner &&<TableCell> <DeleteButton /></TableCell>}\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\nconst Input = styled('input')<{ error: boolean }>(({ error }) => ({\n  width: '100%',\n  border: 'none',\n  borderBottom: '1px solid',\n  outline: 'none',\n  color: error ? '#d32f2f' : '',\n  borderColor: error ? '#d32f2f' : '',\n}))\n\nconst TextError = styled(Typography)(() => ({\n  color: '#d32f2f',\n  fontSize: 12,\n  height: 12,\n  position: 'absolute',\n  bottom: 12,\n}))\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","export const APP_BAR_HEIGHT = 60\nexport const CONTENT_HEIGHT = `calc(100vh - 48px - ${APP_BAR_HEIGHT}px)` // 48px: spacing(3)\nexport const DRAWER_WIDTH = 240\nexport const RIGHT_DRAWER_WIDTH = 320\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\nimport { CONTENT_HEIGHT } from 'const/Layout'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          minHeight: CONTENT_HEIGHT,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n  MatlabFileNode: 'MatlabFileNode',\n  ExpDbNode: 'ExpDbNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        {/* <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        /> */}\n        <InputNodeComponent\n          fileName={'expdb'}\n          nodeName={'expdbData'}\n          fileType={FILE_TYPE_SET.EXPDB}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n        case FILE_TYPE_SET.MATLAB:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.MatlabFileNode\n          fileType = FILE_TYPE_SET.MATLAB\n          break\n        case FILE_TYPE_SET.EXPDB:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ExpDbNode\n          fileType = FILE_TYPE_SET.EXPDB\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  MATLAB: 'matlab',\n  EXPDB: 'expdb',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  workspaceId: number,\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files/${workspaceId}`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  workspaceId: number,\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/${workspaceId}/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    workspaceId: number\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ workspaceId, requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(\n        workspaceId,\n        fileName,\n        config,\n        formData,\n      )\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  Node,\n  NodeChange,\n  Edge,\n  EdgeChange,\n  applyNodeChanges,\n  applyEdgeChanges,\n  Position,\n  Transform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialNodes: Node<NodeData>[] = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ExpDbNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: Transform = [0, 0, 0.7] // [x, y, zoom]\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowNodes: initialNodes,\n  flowEdges: [],\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<Transform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = action.payload\n    },\n    setFlowEdges: (state, action: PayloadAction<Edge[]>) => {\n      state.flowEdges = action.payload\n    },\n    deleteFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = applyNodeChanges(\n        action.payload.map((node) => {\n          return { id: node.id, type: 'remove' }\n        }),\n        state.flowNodes,\n      )\n    },\n    setNodesChange: (state, action: PayloadAction<NodeChange[]>) => {\n      state.flowNodes = applyNodeChanges(action.payload, state.flowNodes)\n    },\n    setEdgesChange: (state, action: PayloadAction<EdgeChange[]>) => {\n      state.flowEdges = applyEdgeChanges(action.payload, state.flowEdges)\n    },\n    deleteFlowEdgeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowEdges.find((edge) => edge.id === action.payload)\n      if (element !== undefined) {\n        state.flowEdges = applyEdgeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowEdges,\n        )\n      }\n    },\n    deleteFlowNodeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowNodes.find((node) => node.id === action.payload)\n      if (element !== undefined) {\n        state.flowNodes = applyNodeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowNodes,\n        )\n        state.flowEdges = applyEdgeChanges(\n          state.flowEdges\n            .filter((edge) => {\n              return (\n                edge.source === action.payload || edge.target === action.payload\n              )\n            })\n            .map((edge) => {\n              return { id: edge.id, type: 'remove' }\n            }),\n          state.flowEdges,\n        )\n      }\n    },\n    editFlowNodePositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n      const targetItem = state.flowNodes[elementIdx]\n      targetItem.position = coord\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const nodeIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n        const targetNode = state.flowNodes[nodeIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const nodeIdx = state.flowNodes.findIndex(\n            (node) => node.id === nodeId,\n          )\n          const targetNode = state.flowNodes[nodeIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n        ),\n        (state, action) => {\n          state.flowPosition = initialFlowPosition\n          state.elementCoord = initialElementCoord\n          state.flowNodes = Object.values(action.payload.nodeDict).map(\n            (node) => {\n              if (isInputNodePostData(node)) {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'input',\n                  },\n                }\n              } else {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'algorithm',\n                  },\n                }\n              }\n            },\n          )\n          state.flowEdges = Object.values(action.payload.edgeDict)\n        },\n      ),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setNodesChange,\n  setEdgesChange,\n  setFlowPosition,\n  setFlowNodes,\n  setFlowEdges,\n  deleteFlowNodes,\n  deleteFlowEdgeById,\n  deleteFlowNodeById,\n  editFlowNodePositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowNodes, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n          fetchExperiment.rejected,\n        ),\n        () => initialState,\n      )\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const isArray = useRef(Array.isArray(value))\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n\n    const onBlur = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(\n        updateParamAction(\n          newValue\n            .split(',')\n            .filter(Boolean)\n            .map((e) => Number(e)),\n        ),\n      )\n    }\n    return (\n      <TextField\n        value={value}\n        onChange={onChange}\n        multiline\n        onBlur={isArray ? onBlur : undefined}\n      />\n    )\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport {selectPipelineIsStartedSuccess, selectPipelineRunBtn} from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    runDisabled,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={runDisabled}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n          disabled={!isStartedSuccess}\n          variant=\"outlined\"\n          endIcon={<CloseIcon />}\n          onClick={onClickCancel}\n          sx={{\n            margin: 1,\n            marginRight: 4,\n          }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import { UploadFile } from '@mui/icons-material'\nimport { Button } from '@mui/material'\nimport { useSnackbar } from 'notistack'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { importWorkflowConfig } from 'store/slice/Workflow/WorkflowActions'\nimport { AppDispatch } from 'store/store'\n\nexport const ImportWorkflowConfigButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const inputRef = React.useRef<HTMLInputElement>(null)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    inputRef.current?.click()\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    if (event.target.files != null && event.target.files[0] != null) {\n      const file = event.target.files[0]\n      const formData = new FormData()\n      formData.append('file', file)\n      dispatch(importWorkflowConfig({ formData }))\n        .unwrap()\n        .then(() => {\n          enqueueSnackbar('Import success', { variant: 'success' })\n          dispatch(reset())\n        })\n        .catch(() => {\n          enqueueSnackbar('Invalid yaml file', { variant: 'error' })\n        })\n    }\n  }\n\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={onClick}\n      sx={{ margin: (theme) => theme.spacing(1) }}\n      endIcon={<UploadFile />}\n    >\n      Import\n      <input\n        hidden\n        ref={inputRef}\n        type=\"file\"\n        accept=\".yaml,.yml\"\n        onChange={onChange}\n      />\n    </Button>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\nimport { IS_STANDALONE } from 'const/Mode'\nimport { ImportWorkflowConfigButton } from './FlowChart/ImportWorkflowConfigButton'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n        fontSize: '1rem',\n      }}\n    >\n      { !IS_STANDALONE &&\n        (\n          <Button onClick={() => navigate('/console/workspaces')}>\n            <ArrowBackIosIcon />\n            Workspaces\n          </Button>\n        )\n      }\n      <ImportWorkflowConfigButton />\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      if (workspaceId) {\n        dispatch(\n          uploadFile({\n            workspaceId,\n            requestId: id.current,\n            nodeId,\n            fileName,\n            formData,\n            fileType,\n          }),\n        )\n      } else {\n        throw new Error('workspaceId is undefined')\n      }\n    },\n    [dispatch, workspaceId, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    case FILE_TREE_TYPE_SET.MATLAB:\n      return '.mat'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n  MatlabInputParamType,\n} from './InputNodeType'\nimport {\n  isCsvInputNode,\n  isHDF5InputNode,\n  isMatlabInputNode,\n} from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.EXPDB,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n    setMatlabInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: MatlabInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isMatlabInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.MATLAB:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.EXPDB:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.INPUT) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(importWorkflowConfig.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.MATLAB) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.MATLAB,\n                  param: node.data.param as MatlabInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.EXPDB) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.EXPDB,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(reproduceWorkflow.fulfilled, fetchExperiment.fulfilled),\n        (_, action) => {\n          const newState: InputNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isInputNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.IMAGE,\n                    selectedFilePath: node.data.path as string[],\n                    param: {},\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.CSV,\n                    selectedFilePath: node.data.path as string,\n                    param: node.data.param as CsvInputParamType,\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.HDF5,\n                    hdf5Path: node.data.hdf5Path,\n                    selectedFilePath: node.data.path as string,\n                    param: {},\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.MATLAB) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.MATLAB,\n                    selectedFilePath: node.data.path as string,\n                    param: node.data.param as MatlabInputParamType,\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.EXPDB) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.EXPDB,\n                    selectedFilePath: node.data.path as string,\n                    param: {},\n                  }\n                }\n              }\n            })\n          return newState\n        },\n      ),\n})\n\nexport const {\n  setCsvInputNodeParam,\n  setInputNodeHDF5Path,\n  setMatlabInputNodeParam,\n} = inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Workspace/Visualize/Plot/CsvPlot'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(\n  path: string,\n  workspaceId: number,\n): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(\n    `${BASE_URL}/hdf5/${path}?workspace_id=${workspaceId}`,\n  )\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<\n  HDF5TreeDTO[],\n  { path: string; workspaceId: number }\n>(`${HDF5_SLICE_NAME}/getHDF5Tree`, async ({ path, workspaceId }, thunkAPI) => {\n  try {\n    const response = await getHDF5TreeApi(path, workspaceId)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath, workspaceId }))\n    }\n  }, [workspaceId, isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, NodeProps, Position } from 'react-flow-renderer'\nimport {\n  selectInputNodeDefined,\n  selectMatlabInputNodeParamFieldName,\n  selectMatlabInputNodeParamIndex,\n  selectMatlabInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  TextField,\n  Box,\n} from '@mui/material'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId } from './FlowChartUtils'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { setMatlabInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport interface MatlabFileNodeProps extends NodeProps {\n  hideSettingDialog?: boolean\n}\n\nexport const MatlabFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n\n  if (defined) {\n    return <MatlabFileNodeImpl {...element} />\n  } else {\n    return null\n  }\n})\n\nexport const MatlabFileNodeImpl = React.memo<MatlabFileNodeProps>(\n  ({ id: nodeId, selected, hideSettingDialog }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectMatlabInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.MATLAB}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && !hideSettingDialog && (\n          <MatlabParamSettingDialog nodeId={nodeId} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'matlab', 'MatlabData')}\n          style={sourceHandleStyle}\n        />\n      </div>\n    )\n  },\n)\n\nconst MatlabParamSettingDialog = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const dispatch = useDispatch()\n\n  const [open, setOpen] = React.useState(false)\n\n  const initialFieldName = useSelector(\n    selectMatlabInputNodeParamFieldName(nodeId),\n  )\n  const [fieldName, setFieldName] = React.useState(initialFieldName)\n\n  const initialIndex = useSelector(selectMatlabInputNodeParamIndex(nodeId))\n  const [index, setIndex] = React.useState<number[] | string | undefined>(\n    initialIndex,\n  )\n  const isArray = Array.isArray(index)\n  const isValidIndex = isArray || index === undefined\n\n  const onClickCancel = () => {\n    setOpen(false)\n    setFieldName(initialFieldName)\n    setIndex(initialIndex)\n  }\n\n  const onClickOk = () => {\n    setOpen(false)\n    isValidIndex &&\n      dispatch(\n        setMatlabInputNodeParam({\n          nodeId,\n          param: { fieldName, index },\n        }),\n      )\n  }\n\n  const onBlur = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    let newValue: string | number[] = event.target.value\n    newValue = newValue\n      .split(',')\n      .filter(Boolean)\n      .map((e) => Number(e))\n      .filter((e) => !isNaN(e))\n    setIndex(newValue.length === 0 ? undefined : newValue)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Matlab Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <TextField\n              label=\"field name\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"string\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                setFieldName(event.target.value)\n              }}\n              value={fieldName}\n            />\n            <TextField\n              label=\"field index\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                setIndex(event.target.value)\n              }}\n              onBlur={onBlur}\n              value={index}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport {Box, styled} from \"@mui/material\";\nimport {useEffect} from \"react\";\n\ntype DialogImageProps = {\n  open: boolean\n  data?: string | (string[])\n  handleCloseDialog: () => void\n  expId?: string\n  nameCol?: string\n}\n\nconst DialogImage = ({data, handleCloseDialog, open, expId, nameCol}: DialogImageProps) => {\n  useEffect(() => {\n    const handleClosePopup = (event: any) => {\n      if(event.key === 'Escape') {\n        handleCloseDialog()\n        return\n      }\n    }\n\n    document.addEventListener('keydown', handleClosePopup);\n    return () => {\n      document.removeEventListener('keydown', handleClosePopup);\n    };\n    //eslint-disable-next-line\n  }, []);\n\n  const handleClose = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if(event.target === event.currentTarget) handleCloseDialog()\n    return\n  }\n\n  if(!data) return null\n  return (\n    <Box>\n    {\n      open ?\n      <DialogImageWrapper sx={{position: 'absolute', zIndex: 1}} onClick={handleClose} >\n        <DialogImageContentWrapper sx={{position: 'absolute', zIndex: 10000}}>\n          <DialogImageContent>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexWrap: \"wrap\",\n                gap: 3,\n                margin: \"80px 50px\"\n              }}\n            >\n              {\n                !Array.isArray(data) ?\n                  <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                  }}>\n                    <DialogImageTitle>{nameCol}</DialogImageTitle>\n                    <DialogImageLabel>Expriment ID: {expId}</DialogImageLabel>\n                    <DialogImageLabel>{data}</DialogImageLabel>\n\n                    <img\n                      src={data}\n                      alt={\"\"}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                    />\n                  </Box> :\n                Array.isArray(data) ?\n                data.filter(Boolean).map((item, index) => (\n                  <Box\n                    key={`${item}_${index}`}\n                    sx={{ display: \"flex\", flexDirection: \"column\" }}\n                  >\n                    <img\n                      key={index}\n                      src={item}\n                      alt={\"\"}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                    />\n                    <span>{item}</span>\n                  </Box>\n                )) : null\n              }\n            </Box>\n          </DialogImageContent>\n          <ButtonClose onClick={handleCloseDialog}>\n            <CloseIcon />\n          </ButtonClose>\n        </DialogImageContentWrapper>\n      </DialogImageWrapper> : null\n    }\n    </Box>\n  )\n}\n\nconst DialogImageWrapper = styled(Box)(({theme}) => ({\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: \"rgba(255,255,255,0.7)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nconst DialogImageContentWrapper = styled(Box)(({theme}) => ({\n  position: \"relative\",\n  display: \"flex\",\n  background: \"#FFF\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\",\n  height: \"80%\",\n  border: \"1px solid #000\",\n  color: \"#333333\",\n}))\n\nconst DialogImageTitle = styled(Box)(({theme}) => ({\n  margin: \"0 0 0.5em 0\",\n  textAlign: \"center\",\n  fontSize: \"1.75em\",\n}))\n\nconst DialogImageLabel = styled(Box)(({theme}) => ({\n  margin: \"0.5em 0 0.5em 0\",\n  textAlign: \"center\",\n  fontSize: \"1.1em\",\n}))\n\nconst DialogImageContent = styled(Box)(({theme}) => ({\n  overflow: \"scroll\",\n  position: \"relative\",\n  flexWrap: \"wrap\",\n  display: \"flex\",\n  background: \"#FFF\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n}))\n\nconst ButtonClose = styled(\"button\")(({theme}) => ({\n  border: \"1px solid #000\",\n  position: \"absolute\",\n  display: \"block\",\n  top: -20,\n  right: -20,\n  width: 40,\n  height: 40,\n  cursor: \"pointer\",\n  borderRadius: 50,\n  \"&:hover\": {\n    background: \"#8f8a8a\"\n  }\n}))\n\nexport default DialogImage;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\n\nconst IOSSwitch = styled((props: SwitchProps) => (\n    <Switch\n      focusVisibleClassName=\".Mui-focusVisible\"\n      disableRipple\n      {...props}\n      sx={{\n        width: \"50px !important\"\n      }}\n    />\n))(({ theme }) => ({\n  width: 42,\n  height: 26,\n  padding: 0,\n  '& .MuiSwitch-switchBase': {\n    padding: 0,\n    margin: 2,\n    transitionDuration: '300ms',\n    '&.Mui-checked': {\n      transform: 'translateX(24px)',\n      color: '#fff',\n      '& + .MuiSwitch-track': {\n        backgroundColor: theme.palette.mode === 'dark' ? '#2ECA45' : '#65C466',\n        opacity: 1,\n        border: 0,\n      },\n      '&.Mui-disabled + .MuiSwitch-track': {\n        opacity: 0.5,\n      },\n    },\n    '&.Mui-focusVisible .MuiSwitch-thumb': {\n      color: 'red',\n      border: '6px solid #fff',\n    },\n    '&.Mui-disabled .MuiSwitch-thumb': {\n      color:\n          theme.palette.mode === 'light'\n              ? theme.palette.grey[100]\n              : theme.palette.grey[600],\n    },\n    '&.Mui-disabled + .MuiSwitch-track': {\n      opacity: theme.palette.mode === 'light' ? 0.7 : 0.3,\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    boxSizing: 'border-box',\n    width: 22,\n    height: 22,\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 26 / 2,\n    backgroundColor: theme.palette.mode === 'light' ? 'silver' : '#39393D',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color'], {\n      duration: 500,\n    }),\n    '&:before': {\n      content: '\"ON\"',\n      position: \"relative\",\n      left: 10,\n      top: 2,\n      fontSize: 9\n    },\n    '&:after': {\n      content: '\"OFF\"',\n      position: \"relative\",\n      right: -15,\n      top: 2,\n      fontSize: 9\n    },\n  },\n}));\n\nconst SwitchCustom = ({value} : {value: boolean}) => {\n  return (\n    <FormControlLabel\n      control={\n        <IOSSwitch\n            checked={value}\n          sx={{ m: 1 }}\n        />\n      }\n      label=\"\"\n    />\n  );\n}\n\nexport default SwitchCustom;\n","import { Box, Input, styled } from '@mui/material'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport ContentPasteSearchIcon from '@mui/icons-material/ContentPasteSearch'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogImage from '../common/DialogImage'\nimport SwitchCustom from '../common/SwitchCustom'\nimport {\n  GridFilterModel,\n  GridSortDirection,\n  GridSortModel,\n  DataGrid,\n  GridEventListener,\n  GridSortItem,\n} from '@mui/x-data-grid'\nimport GroupsIcon from '@mui/icons-material/Groups'\nimport DomainIcon from '@mui/icons-material/Domain'\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\nimport {\n  DatabaseType,\n  DATABASE_SLICE_NAME,\n  ImageUrls,\n} from '../../store/slice/Database/DatabaseType'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../store/store'\nimport {\n  getExperimentsDatabase,\n  getExperimentsPublicDatabase,\n  getListUserShare,\n  postPublish,\n} from '../../store/slice/Database/DatabaseActions'\nimport Loading from 'components/common/Loading'\nimport { TypeData } from 'store/slice/Database/DatabaseSlice'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport { isAdminOrManager } from 'store/slice/User/UserSelector'\nimport {SHARE, WAITING_TIME} from '@types'\nimport PopupShare from '../PopupShare'\nimport PaginationCustom from '../common/PaginationCustom'\n\nexport type Data = {\n  id: number\n  fields: {\n    brain_area?: string\n    cre_driver?: string\n    reporter_line?: string\n    imaging_depth?: number\n  }\n  experiment_id: string\n  attributes: string\n  cell_image_urls: string[]\n  graph_urls: string[]\n  share_type: number\n  publish_status: number\n  created_time: string\n  updated_time: string\n}\n\ntype PopupAttributesProps = {\n  data?: string | string[]\n  open: boolean\n  handleClose: () => void\n  role?: boolean\n  handleChangeAttributes: (e: any) => void\n  exp_id?: string\n}\n\ntype DatabaseProps = {\n  user?: UserDTO\n  cellPath: string\n  handleRowClick?: GridEventListener<'rowClick'>\n  readonly?: boolean\n}\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\nconst columns = (\n  handleOpenAttributes: (value: string) => void,\n  handleOpenDialog: (value: ImageUrls[], exp_id?: string) => void,\n  cellPath: string,\n  navigate: (path: string) => void,\n  user: boolean,\n  readonly?: boolean,\n  loading: boolean = false\n) => [\n  {\n    field: 'experiment_id',\n    headerName: 'Experiment ID',\n    width: 160,\n    filterOperators: [\n      {\n        label: 'Contains',\n        value: 'contains',\n        InputComponent: ({ applyValue, item }: any) => {\n          return (\n            <Input\n              autoFocus={!loading}\n              sx={{ paddingTop: '16px' }}\n              defaultValue={item.value || ''}\n              onChange={(e) => {\n                if (timeout) clearTimeout(timeout)\n                timeout = setTimeout(() => {\n                  applyValue({ ...item, value: e.target.value })\n                }, WAITING_TIME)\n              }}\n            />\n          )\n        },\n      },\n    ],\n    type: 'string',\n    renderCell: (params: { row: DatabaseType }) => params.row?.experiment_id,\n  },\n  user && {\n    field: 'published',\n    headerName: 'Published',\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.publish_status ? <CheckCircleIcon color={'success'} /> : null,\n    valueOptions: ['Published', 'No_Published'],\n    type: 'singleSelect',\n    width: 120,\n  },\n  {\n    field: 'brain_area',\n    headerName: 'Brain area',\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.brain_area ?? 'NA',\n    valueOptions: [1, 2, 3, 4, 5, 6, 7, 8],\n    type: 'singleSelect',\n    width: 120,\n  },\n  {\n    field: 'cre_driver',\n    headerName: 'Cre driver',\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.cre_driver ?? 'NA',\n  },\n  {\n    field: 'reporter_line',\n    headerName: 'Reporter line',\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.reporter_line ?? 'NA',\n  },\n  {\n    field: 'imaging_depth',\n    headerName: 'Imaging depth',\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.imaging_depth ?? 'NA',\n  },\n  {\n    field: 'attributes',\n    headerName: 'Attributes',\n    width: 120,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => (\n      <Box\n        sx={{ cursor: 'pointer' }}\n        onClick={() =>\n          handleOpenAttributes(JSON.stringify(params.row?.attributes))\n        }\n      >\n        {JSON.stringify(params.row?.attributes)}\n      </Box>\n    ),\n  },\n  !readonly && {\n    field: 'cells',\n    headerName: 'Cells',\n    width: 120,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => (\n      <Box\n        sx={{ cursor: 'pointer', color: 'dodgerblue' }}\n        onClick={() =>\n          navigate(`${cellPath}?experiment_id=${params.row?.experiment_id}`)\n        }\n      >\n        <ContentPasteSearchIcon />\n      </Box>\n    ),\n  },\n  {\n    field: 'cell_image_urls',\n    headerName: 'Pixel Image',\n    width: 160,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => {\n      return (\n        <Box\n          sx={{\n            cursor: 'pointer',\n            display: 'flex',\n          }}\n          onClick={() => handleOpenDialog(params.row?.cell_image_urls)}\n        >\n          {params.row?.cell_image_urls?.length > 0 && (\n            <img\n              src={params.row?.cell_image_urls[0].thumb_url}\n              alt={''}\n              width={'100%'}\n              height={'100%'}\n            />\n          )}\n        </Box>\n      )\n    },\n  },\n]\n\nconst PopupAttributes = ({\n  data,\n  open,\n  handleClose,\n  role = false,\n  handleChangeAttributes,\n  exp_id,\n}: PopupAttributesProps) => {\n  useEffect(() => {\n    const handleClosePopup = (event: any) => {\n      if (event.key === 'Escape') {\n        handleClose()\n        return\n      }\n    }\n\n    document.addEventListener('keydown', handleClosePopup)\n    return () => {\n      document.removeEventListener('keydown', handleClosePopup)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  return (\n    <Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogContent sx={{ minWidth: 400 }}>\n          <DialogContentText>\n            <Content\n              readOnly={!role}\n              value={data}\n              onChange={handleChangeAttributes}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Close\n          </Button>\n          {role && <Button onClick={handleClose}>Save</Button>}\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\nconst DatabaseExperiments = ({\n  user,\n  cellPath,\n  handleRowClick,\n  readonly,\n}: DatabaseProps) => {\n  const type: keyof TypeData = user ? 'private' : 'public'\n  const adminOrManager = useSelector(isAdminOrManager)\n  const { data: dataExperiments, loading } = useSelector(\n    (state: RootState) => ({\n      data: state[DATABASE_SLICE_NAME].data[type],\n      loading: state[DATABASE_SLICE_NAME].loading,\n    }),\n  )\n\n  const [newParams, setNewParams] = useState(window.location.search.replace(\"?\", \"\"))\n  const [openShare, setOpenShare] = useState<{ open: boolean; id?: number }>({\n    open: false,\n  })\n  const [dataDialog, setDataDialog] = useState<{\n    type?: string\n    data?: string | string[]\n    expId?: string\n    nameCol?: string\n    shareType?: number\n  }>({\n    type: '',\n    data: undefined,\n  })\n\n  const [searchParams, setParams] = useSearchParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit') || 50\n  const sort = searchParams.getAll('sort')\n\n  const { dataShare } = useSelector((state: RootState) => ({\n    dataShare: state[DATABASE_SLICE_NAME].listShare,\n  }))\n\n  const pagiFilter = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${\n        page ? Number(limit) * (page - 1) : offset || dataExperiments.offset\n      }`\n    },\n    //eslint-disable-next-line\n    [limit, offset, JSON.stringify(dataExperiments), dataExperiments.offset],\n  )\n\n  const dataParams = useMemo(() => {\n    return {\n      offset: Number(offset) || 0,\n      limit: Number(limit) || 50,\n      sort: [sort[0]?.replace('published', 'publish_status'), sort[1]] || [],\n    }\n    //eslint-disable-next-line\n  }, [offset, limit, JSON.stringify(sort)])\n\n  const dataParamsFilter = useMemo(\n    () => ({\n      experiment_id: searchParams.get('experiment_id') || undefined,\n      publish_status: searchParams.get('published') || undefined,\n      brain_area: searchParams.get('brain_area') || undefined,\n      cre_driver: searchParams.get('cre_driver') || undefined,\n      reporter_line: searchParams.get('reporter_line') || undefined,\n      imaging_depth: Number(searchParams.get('imaging_depth')) || undefined,\n    }),\n    [searchParams],\n  )\n\n  const [model, setModel] = useState<{filter: GridFilterModel, sort: any}>({\n    filter: {\n      items: [\n        {\n          field: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key])?.replace('publish_status', 'published') || '' ,\n          operator: ['publish_status', 'brain_area'].includes(Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key]) || 'publish_status') ? 'is' : 'contains',\n          value: Object.values(dataParamsFilter).find(value => value) || null,\n        },\n      ],\n    },\n    sort: [{\n      field: dataParams.sort[0]?.replace('publish_status', 'published') || '',\n      sort: dataParams.sort[1] as GridSortDirection\n    }]\n  })\n\n  const fetchApi = () => {\n    const api = !user ? getExperimentsPublicDatabase : getExperimentsDatabase\n    let newPublish: number | undefined\n    if (!dataParamsFilter.publish_status) newPublish = undefined\n    else {\n      if (dataParamsFilter.publish_status === 'Published') newPublish = 1\n      else newPublish = 0\n    }\n    dispatch(\n      api({ ...dataParamsFilter, publish_status: newPublish, ...dataParams }),\n    )\n  }\n\n  useEffect(() => {\n    if(Object.keys(dataParamsFilter).every(key => !(dataParamsFilter as any)[key])) return\n    setModel({\n      filter: {\n        items: [\n          {\n            field: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key])?.replace('publish_status', 'published') || '' ,\n            operator: ['publish_status', 'brain_area'].includes(Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key]) || '') ? 'is' : 'contains',\n            value: Object.values(dataParamsFilter).find(value => value) || null,\n          },\n        ],\n      },\n      sort: [{\n        field: dataParams.sort[0]?.replace('publish_status', 'published') || '',\n        sort: dataParams.sort[1] as GridSortDirection\n      }]\n    })\n    //eslint-disable-next-line\n  }, [dataParams, dataParamsFilter])\n\n  useEffect(() => {\n    let param = newParams\n    if(newParams[0] === '&') param = newParams.slice(1, param.length)\n    if(param === window.location.search.replace(\"?\", \"\")) return;\n    setParams(param)\n    //eslint-disable-next-line\n  }, [newParams])\n\n  useEffect(() => {\n    fetchApi()\n    //eslint-disable-next-line\n  }, [JSON.stringify(dataParams), user, JSON.stringify(dataParamsFilter)])\n\n  useEffect(() => {\n    if (!openShare.open || !openShare.id) return\n    dispatch(getListUserShare({ id: openShare.id }))\n    //eslint-disable-next-line\n  }, [openShare])\n\n  const handleOpenDialog = (\n    data: ImageUrls[] | ImageUrls,\n    expId?: string,\n    graphTitle?: string,\n  ) => {\n    let newData: string | string[] = []\n    if (Array.isArray(data)) {\n      newData = data.map((d) => d.url)\n    } else newData = data.url\n    setDataDialog({\n      type: 'image',\n      data: newData,\n      expId: expId,\n      nameCol: graphTitle,\n    })\n  }\n\n  const handleCloseDialog = () => {\n    setDataDialog({ type: '', data: undefined })\n  }\n\n  const handleOpenAttributes = (data: string) => {\n    setDataDialog({ type: 'attribute', data })\n  }\n\n  const handleChangeAttributes = (event: any) => {\n    setDataDialog((pre) => ({ ...pre, data: event.target.value }))\n  }\n\n  const handleOpenShare = (expId?: string, value?: number, id?: number) => {\n    setDataDialog({ expId: expId, shareType: value })\n    setOpenShare({ open: true, id: id })\n  }\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(dataParamsFilter)\n      .filter((key) => (dataParamsFilter as any)[key])\n      .map((key) => `${key}=${(dataParamsFilter as any)[key]}`)\n      .join('&')\n      .replaceAll('publish_status', 'published')\n    return dataFilter\n  }\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    const filter = getParamsData()\n    const param = `${filter}${dataParams.sort[0]? `${filter ? '&' : ''}sort=${dataParams.sort[0]}&sort=${dataParams.sort[1]}` : ''}&${pagiFilter(page)}`\n    setNewParams(param)\n  }\n\n  //eslint-disable-next-line\n  const handlePublish = async (id: number, status: 'on' | 'off') => {\n    let newPublish: number | undefined\n    if (!dataParamsFilter.publish_status) newPublish = undefined\n    else {\n      if (dataParamsFilter.publish_status === 'Published') newPublish = 1\n      else newPublish = 0\n    }\n    await dispatch(\n      postPublish({\n        id,\n        status,\n        params: {\n          ...dataParamsFilter,\n          publish_status: newPublish,\n          ...dataParams,\n        },\n      }),\n    )\n  }\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      setModel({\n        ...model, sort: rowSelectionModel\n      })\n      let param\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        param = filter || dataParams.sort[0] || offset ? `${filter ? `${filter}&` : ''}${pagiFilter()}` : ''\n      } else {\n        param = `${filter}${rowSelectionModel[0] ? `${filter ? '&' : ''}sort=${rowSelectionModel[0].field?.replace('publish_status','published')}&sort=${rowSelectionModel[0].sort}` : ''}&${pagiFilter()}`\n      }\n      setNewParams(param.replace('publish_status', 'published'))\n    },\n    //eslint-disable-next-line\n    [pagiFilter, model],\n  )\n\n  const handleFilter = (modelFilter: GridFilterModel) => {\n    setModel({\n      ...model, filter: modelFilter\n    })\n    let filter = ''\n    if (!!modelFilter.items[0]?.value) {\n      filter = modelFilter.items\n        .filter((item) => item.value)\n        .map((item: any) => `${item.field}=${item?.value}`)\n        .join('&')\n        ?.replace('publish_status', 'published')\n    }\n    const { sort } = dataParams\n    const param = sort[0] || filter || offset ? `${filter}${sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''}&${pagiFilter()}` : ''\n    setNewParams(param.replace('publish_status', 'published'))\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(dataParamsFilter)\n      .filter((key) => (dataParamsFilter as any)[key])\n      .map((item: any) => `${item}=${(dataParamsFilter as any)[item]}`)\n      .join('&')\n      .replace('publish_status', 'published')\n    const { sort } = dataParams\n    const param = `${filter}${sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${Number(event.target.value)}&offset=0`\n    setNewParams(param)\n  }\n\n  const getColumns = useMemo(() => {\n    return (dataExperiments.header?.graph_titles || []).map(\n      (graphTitle, index) => ({\n        field: `graph_urls.${index}`,\n        headerName: graphTitle,\n        sortable: false,\n        filterable: false,\n        renderCell: (params: { row: DatabaseType }) => {\n          const { row } = params\n          const { graph_urls } = row\n          const graph_url = graph_urls[index]\n          if (!graph_url) return null\n          return (\n            <Box\n              sx={{ display: 'flex', cursor: 'pointer' }}\n              onClick={() =>\n                handleOpenDialog(graph_url, row.experiment_id, graphTitle)\n              }\n            >\n              <img\n                src={graph_url.thumb_url}\n                alt={''}\n                width={'100%'}\n                height={'100%'}\n              />\n            </Box>\n          )\n        },\n        width: 160,\n      }),\n    )\n  }, [dataExperiments.header?.graph_titles])\n\n  const ColumnPrivate = useMemo(() => {\n    return [\n      {\n        field: 'share_type',\n        headerName: 'Share',\n        width: 120,\n        sortable: false,\n        filterable: false,\n        renderCell: (params: { value: number; row: DatabaseType }) => {\n          const { value, row } = params\n          return (\n            <Box\n              sx={{ cursor: 'pointer', color: 'darkgray' }}\n              onClick={() => handleOpenShare(row.experiment_id, value, row.id)}\n            >\n              {value === SHARE.ORGANIZATION ? (\n                <DomainIcon color=\"primary\" />\n              ) : (\n                <GroupsIcon\n                  color={`${value === SHARE.NOSHARE ? 'inherit' : 'primary'}`}\n                />\n              )}\n            </Box>\n          )\n        },\n      },\n      {\n        field: 'publish_status',\n        headerName: 'Publish',\n        width: 120,\n        sortable: false,\n        filterable: false,\n        renderCell: (params: { row: DatabaseType }) => (\n          <Box\n            sx={{ cursor: 'pointer' }}\n            onClick={() =>\n              handlePublish(\n                params.row.id,\n                params.row.publish_status ? 'off' : 'on',\n              )\n            }\n          >\n            <SwitchCustom value={!!params.row.publish_status} />\n          </Box>\n        ),\n      },\n    ]\n    //eslint-disable-next-line\n  }, [handlePublish])\n\n  const columnsTable = [\n    ...columns(\n      handleOpenAttributes,\n      handleOpenDialog,\n      cellPath,\n      navigate,\n      !!user,\n      readonly,\n      loading\n    ),\n    ...getColumns,\n  ].filter(Boolean) as any\n\n  return (\n    <DatabaseExperimentsWrapper>\n      <DataGrid\n        columns={\n          adminOrManager && user && !readonly\n            ? ([...columnsTable, ...ColumnPrivate] as any)\n            : (columnsTable as any)\n        }\n        sortModel={model.sort as GridSortItem[]}\n        rows={dataExperiments?.items || []}\n        rowHeight={128}\n        hideFooter={true}\n        filterMode={'server'}\n        sortingMode={'server'}\n        onSortModelChange={handleSort}\n        filterModel={model.filter}\n        onFilterModelChange={handleFilter as any}\n        onRowClick={handleRowClick}\n      />\n      {dataExperiments?.items.length > 0 ? (\n        <PaginationCustom\n          data={dataExperiments}\n          handlePage={handlePage}\n          handleLimit={handleLimit}\n          limit={Number(limit)}\n        />\n      ) : null}\n      <DialogImage\n        open={dataDialog.type === 'image'}\n        data={dataDialog.data}\n        expId={dataDialog.expId}\n        nameCol={dataDialog.nameCol}\n        handleCloseDialog={handleCloseDialog}\n      />\n      <PopupAttributes\n        handleChangeAttributes={handleChangeAttributes}\n        data={dataDialog.data}\n        open={dataDialog.type === 'attribute'}\n        handleClose={handleCloseDialog}\n        role={!!adminOrManager}\n      />\n      {loading ? <Loading /> : null}\n      {openShare.open && openShare.id ? (\n        <PopupShare\n          id={openShare.id}\n          open={openShare.open}\n          data={dataDialog as { expId: string; shareType: number }}\n          usersShare={dataShare}\n          handleClose={(isSubmit) => {\n            if (isSubmit) fetchApi()\n            setOpenShare({ ...openShare, open: false })\n          }}\n        />\n      ) : null}\n    </DatabaseExperimentsWrapper>\n  )\n}\n\nconst DatabaseExperimentsWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100vh - 250px)',\n}))\n\nconst Content = styled('textarea')(() => ({\n  width: 400,\n  height: 'fit-content',\n}))\n\nexport default DatabaseExperiments\n","import React from 'react'\nimport { CSSProperties } from 'react'\nimport { Handle, NodeProps, Position } from 'react-flow-renderer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport {\n  selectExpDbInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { toHandleId } from './FlowChartUtils'\nimport {\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n} from '@mui/material'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport DatabaseExperiments from 'components/Database/DatabaseExperiments'\nimport { GridEventListener, GridRowParams } from '@mui/x-data-grid'\nimport { useSnackbar } from 'notistack'\nimport { DatabaseType } from 'store/slice/Database/DatabaseType'\nimport { useHandleColor } from './HandleColorHook'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ExpDbNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ExpDbFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ExpDbFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n  const returnType = 'ExpDbData'\n  const expdbColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '250px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <ExpDbSelect nodeId={nodeId} />\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'expdb', returnType)}\n        style={{ ...sourceHandleStyle, background: expdbColor }}\n      />\n    </div>\n  )\n})\n\nconst ExpDbSelect = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n  const experimentId = useSelector(selectExpDbInputNodeSelectedFilePath(nodeId))\n\n  return (\n    <div style={{ padding: 5 }}>\n      <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n        <Button variant=\"outlined\" onClick={() => setOpen(true)}>\n          Select\n        </Button>\n        <ExpDbSelectDialog nodeId={nodeId} open={open} setOpen={setOpen} />\n      </ButtonGroup>\n      <div>\n        <Typography>\n          {experimentId\n            ? `Selected experiment id: ${experimentId}`\n            : 'No experiment selected'}\n        </Typography>\n      </div>\n    </div>\n  )\n})\n\nconst ExpDbSelectDialog = React.memo<{\n  nodeId: string\n  open: boolean\n  setOpen: (open: boolean) => void\n}>(({ nodeId, open, setOpen }) => {\n  const user = useSelector(selectCurrentUser)\n  const [experimentId, setExperimentId] = React.useState<string | undefined>(\n    undefined,\n  )\n  const dispatch = useDispatch()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleRowClick: GridEventListener<'rowClick'> = (\n    params: GridRowParams<DatabaseType>,\n  ) => {\n    setExperimentId(params.row.experiment_id)\n  }\n\n  const onClickCancel = () => {\n    setOpen(false)\n    setExperimentId(undefined)\n  }\n\n  const onClickOk = () => {\n    try {\n      setOpen(false)\n      dispatch(setInputNodeFilePath({ nodeId, filePath: experimentId! }))\n    } catch (e) {\n      console.error(e)\n      enqueueSnackbar('Select experiment failed', { variant: 'error' })\n    }\n  }\n\n  return (\n    <Dialog open={open} fullWidth maxWidth=\"lg\">\n      <DialogTitle>Experiments</DialogTitle>\n      <DialogContent dividers>\n        <DatabaseExperiments\n          user={user}\n          cellPath=\"/console/cells\"\n          handleRowClick={handleRowClick}\n          readonly\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClickCancel} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button\n          onClick={onClickOk}\n          variant=\"contained\"\n          disabled={!experimentId}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import { ImageFileNode } from 'components/Workspace/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/Workspace/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/Workspace/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/Workspace/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/Workspace/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode'\nimport { MatlabFileNode } from 'components/Workspace/FlowChart/FlowChartNode/MatlabFileNode'\nimport { ExpDbNode } from 'components/Workspace/FlowChart/FlowChartNode/ExpDbNode'\n\nimport { CustomEdge } from 'components/Workspace/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n  MatlabFileNode,\n  ExpDbNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport { EdgeProps, getBezierPath, getEdgeCenter } from 'react-flow-renderer'\nimport { deleteFlowEdgeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowEdgeById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  MouseEvent,\n  useRef,\n} from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport {\n  Datum,\n  LayoutAxis,\n  PlotData,\n  PlotMouseEvent,\n  PlotSelectionEvent,\n} from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n  selectRoiItemOutputKeys,\n  selectVisualizeItems,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  resetAllOrderList,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { addRoiApi, deleteRoiApi, mergeRoiApi } from 'api/outputs/Outputs'\nimport { isTimeSeriesItem } from 'store/slice/VisualizeItem/VisualizeItemUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ninterface PointClick {\n  x: number\n  y: number\n  z: number\n}\n\nconst WIDTH_CHARTJS = 321\nconst INIT_WIDTH_ROI = 30\n\nconst initSizeDrag = {\n  width: INIT_WIDTH_ROI,\n  height: INIT_WIDTH_ROI,\n  left: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n  top: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n}\n\nenum PositionDrag {\n  'LEFT' = 'LEFT',\n  'RIGHT' = 'RIGHT',\n  'BOTTOM' = 'BOTTOM',\n  'TOP' = 'TOP',\n}\n\nconst sChart = 320\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId) {\n      if (!isInitialized) {\n        dispatch(\n          getImageData({\n            path,\n            workspaceId,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n      if (roiFilePath != null) {\n        dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n      }\n    }\n  }, [\n    dispatch,\n    isInitialized,\n    path,\n    workspaceId,\n    startIndex,\n    endIndex,\n    roiFilePath,\n  ])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const [isAddRoi, setIsAddRoi] = useState(false)\n  const [loadingApi, setLoadingApi] = useState(false)\n\n  const [roiDataState, setRoiDataState] = useState(roiData)\n\n  const [pointClick, setPointClick] = useState<PointClick[]>([])\n\n  const itemsVisual = useSelector(selectVisualizeItems)\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const [sizeDrag, setSizeDrag] = useState(initSizeDrag)\n\n  const [startDragAddRoi, setStartDragAddRoi] = useState(false)\n  const [positionDrag, setChangeSize] = useState<PositionDrag | undefined>()\n\n  const outputKey: string | null = useSelector(selectRoiItemOutputKeys(itemId))\n\n  const refPageXSize = useRef(0)\n  const refPageYSize = useRef(0)\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  useEffect(() => {\n    setRoiDataState(roiData)\n  }, [roiData])\n\n  useEffect(() => {\n    onCancel()\n    onCancelAdd()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outputKey, roiFilePath])\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n      },\n      {\n        z: roiDataState,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: isAddRoi ? 'none' : 'cell id: %{z}',\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset: number = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 0,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiDataState,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n      isAddRoi,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [showgrid, showline, showticklabels, width, height, selectMode, isAddRoi],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onChartClick = (event: PlotMouseEvent) => {\n    const point: PlotDatum = event.points[0] as PlotDatum\n    if (point.curveNumber >= 1 && outputKey === 'cell_roi') {\n      setSelectRoi({\n        x: Number(point.x),\n        y: Number(point.y),\n        z: Number(point.z),\n      })\n    }\n    if (point.curveNumber >= 1 && point.z > 0) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: point.z.toString(),\n        }),\n      )\n    }\n  }\n\n  const setSelectRoi = (point: PointClick) => {\n    if (!point.z) return\n    const newPoints = [...pointClick, point]\n    const newRoi = roiDataState.map((roi) => {\n      return roi.map((element) => {\n        if (newPoints.some((p) => p.z === element)) {\n          return 0\n        }\n        return element\n      })\n    })\n    setPointClick([...pointClick, point])\n    setRoiDataState(newRoi)\n  }\n\n  const onCancel = () => {\n    setPointClick([])\n    setRoiDataState(roiData)\n  }\n\n  const addRoi = () => {\n    setIsAddRoi(true)\n  }\n\n  const onCancelAdd = () => {\n    setIsAddRoi(false)\n    setSizeDrag(initSizeDrag)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownDragAddRoi = () => {\n    setStartDragAddRoi(true)\n  }\n\n  const onMouseUpDragAddRoi = () => {\n    setStartDragAddRoi(false)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownSize = (position: PositionDrag, event: MouseEvent) => {\n    setChangeSize(position)\n    refPageXSize.current = event.pageX\n    refPageYSize.current = event.pageY\n  }\n\n  const onMouseMoveAddRoi = (event: MouseEvent<HTMLDivElement>) => {\n    const { pageX, pageY } = event\n    let newSizeDrag\n    if (startDragAddRoi) {\n      const { y } = event.currentTarget.getBoundingClientRect()\n      let newX = sizeDrag.left + (pageX - refPageXSize.current)\n      let newY = Math.ceil(pageY - y - 15) - window.scrollY\n\n      if (newX < 0) newX = 0\n      else if (newX + sizeDrag.width > sChart) newX = sChart - sizeDrag.width\n      if (newY < 0) newY = 0\n      else if (newY + sizeDrag.height > sChart) newY = sChart - sizeDrag.height\n      newSizeDrag = { ...sizeDrag, left: newX, top: newY }\n    } else if (positionDrag === PositionDrag.LEFT) {\n      const newWidth = sizeDrag.width - (pageX - refPageXSize.current)\n      const newLeft = sizeDrag.left + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newLeft < 1) return\n      newSizeDrag = { ...sizeDrag, width: newWidth, left: newLeft }\n    } else if (positionDrag === PositionDrag.RIGHT) {\n      const newWidth = sizeDrag.width + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newWidth > sChart - sizeDrag.left) return\n      newSizeDrag = { ...sizeDrag, width: newWidth }\n    } else if (positionDrag === PositionDrag.BOTTOM) {\n      const newHeight = sizeDrag.height + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newHeight > sChart - sizeDrag.top) return\n      newSizeDrag = { ...sizeDrag, height: newHeight }\n    } else if (positionDrag === PositionDrag.TOP) {\n      const newHeight = sizeDrag.height - (pageY - refPageYSize.current)\n      const newTop = sizeDrag.top + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newTop < 1) return\n      newSizeDrag = { ...sizeDrag, height: newHeight, top: newTop }\n    }\n    if (newSizeDrag) setSizeDrag({ ...sizeDrag, ...newSizeDrag })\n    refPageXSize.current = pageX\n    refPageYSize.current = pageY\n  }\n\n  const addRoiSubmit = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    const sizeX = roiDataState[0].length - 1\n    const sizeY = roiDataState.length - 1\n    const xAdd = Number(((sizeDrag.width + 2) / (sChart / sizeX)).toFixed(1))\n    const yAdd = Number(((sizeDrag.height + 2) / (sChart / sizeY)).toFixed(1))\n    const x = Number((sizeDrag.left / (sChart / sizeX)).toFixed(1))\n    const y = Number((sizeDrag.top / (sChart / sizeY)).toFixed(1))\n\n    const pointCenter = {\n      posx: x + Math.floor(xAdd / 2),\n      posy: y + Math.floor(yAdd / 2),\n      sizex: xAdd,\n      sizey: yAdd,\n    }\n    dispatch(resetAllOrderList())\n    try {\n      await addRoiApi(roiFilePath, pointCenter)\n    } catch {}\n    setLoadingApi(false)\n    onCancelAdd()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onMergeRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await mergeRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onDeleteRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await deleteRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const resetTimeSeries = () => {\n    if (itemsVisual) {\n      Object.keys(itemsVisual).forEach((item) => {\n        if (isTimeSeriesItem(itemsVisual[item])) {\n          dispatch(\n            getTimeSeriesInitData({\n              path: itemsVisual[item].filePath as string,\n              itemId: Number(item),\n            }),\n          )\n        }\n      })\n    }\n  }\n\n  const renderActionRoi = () => {\n    if (!roiDataState?.length || outputKey !== 'cell_roi') return null\n    if (!isAddRoi) {\n      return <LinkDiv onClick={addRoi}>Add ROI</LinkDiv>\n    }\n    return (\n      <BoxDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={addRoiSubmit}\n        >\n          OK\n        </LinkDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={onCancelAdd}\n        >\n          Cancel\n        </LinkDiv>\n      </BoxDiv>\n    )\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, mt: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ ml: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <Box sx={{ minHeight: 5.5 }}>\n        {pointClick.length ? (\n          <>\n            <BoxDiv>\n              <span>ROI Selecteds: [{String(pointClick.map((e) => e.z))}]</span>\n            </BoxDiv>\n            <BoxDiv>\n              {pointClick.length >= 2 ? (\n                <LinkDiv\n                  sx={{ ml: 0, opacity: loadingApi ? 0.5 : 1 }}\n                  onClick={onMergeRoi}\n                >\n                  Merge ROI\n                </LinkDiv>\n              ) : null}\n              <LinkDiv\n                sx={{ color: '#F84E1B', opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onDeleteRoi}\n              >\n                Delete ROI\n              </LinkDiv>\n              <LinkDiv\n                sx={{ opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onCancel}\n              >\n                Cancel\n              </LinkDiv>\n            </BoxDiv>\n          </>\n        ) : (\n          renderActionRoi()\n        )}\n      </Box>\n      <div style={{ position: 'relative' }}>\n        <PlotlyChart\n          data={data}\n          layout={layout}\n          config={config}\n          onClick={onChartClick}\n          onSelecting={onSelecting}\n        />\n        {isAddRoi ? (\n          <DivAddRoi>\n            <DivSvg\n              onMouseLeave={onMouseUpDragAddRoi}\n              onMouseMove={onMouseMoveAddRoi}\n              onMouseUp={onMouseUpDragAddRoi}\n            >\n              <DivDrag style={sizeDrag}>\n                <DragCenter\n                  onMouseDown={onMouseDownDragAddRoi}\n                  style={{\n                    width: sizeDrag.width - 1,\n                    height: sizeDrag.height - 1,\n                    cursor: !startDragAddRoi ? 'grab' : 'grabbing',\n                  }}\n                />\n                <DragSizeLeft\n                  onMouseDown={(event) =>\n                    onMouseDownSize(PositionDrag.LEFT, event)\n                  }\n                />\n                <DragSizeRight\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.RIGHT, event)\n                  }}\n                />\n                <DragSizeTop\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.TOP, event)\n                  }}\n                />\n                <DragSizeBottom\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.BOTTOM, event)\n                  }}\n                />\n              </DivDrag>\n            </DivSvg>\n          </DivAddRoi>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button sx={{ mt: 1.5 }} variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button sx={{ mt: 1.5, ml: 1 }} variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        sx={{ width: 100, ml: 2 }}\n        label=\"Duration [msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n\nconst BoxDiv = styled('div')({\n  mt: 1,\n  display: 'flex',\n  alignItems: 'center',\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst LinkDiv = styled('div')({\n  marginLeft: 16,\n  textDecoration: 'underline',\n  cursor: 'pointer',\n  color: '#1155cc',\n  zIndex: 999,\n  position: 'relative',\n})\n\nconst DivAddRoi = styled('div')({\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  borderRadius: 100,\n})\n\nconst DivSvg = styled('div')({\n  width: 321,\n  height: 321,\n  marginTop: 30,\n  marginLeft: 99,\n  position: 'relative',\n})\n\nconst DivDrag = styled('div')({\n  border: '1px solid #ffffff',\n  position: 'absolute',\n  borderRadius: 100,\n})\n\nconst DragCenter = styled('div')({\n  borderRadius: 100,\n  cursor: 'grab',\n})\n\nconst DragSize = styled('div')({\n  width: 3,\n  height: 3,\n  borderRadius: 100,\n  position: 'absolute',\n  background: '#fff',\n})\n\nconst DragSizeLeft = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  left: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeRight = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  right: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeTop = styled(DragSize)({\n  top: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n\nconst DragSizeBottom = styled(DragSize)({\n  bottom: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getRoiData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHistogramData,\n  selectHistogramDataError,\n  selectHistogramDataIsFulfilled,\n  selectHistogramDataIsInitialized,\n  selectHistogramDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHistogramData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  Input,\n  InputLabel,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\nimport {\n  selectHistogramItemBins,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setHistogramItemBins } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const HistogramPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHistogramDataIsPending(path))\n  const isInitialized = useSelector(selectHistogramDataIsInitialized(path))\n  const error = useSelector(selectHistogramDataError(path))\n  const isFulfilled = useSelector(selectHistogramDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHistogramData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HistogramPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HistogramPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const histogramData = useSelector(selectHistogramData(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const bins = useSelector(selectHistogramItemBins(itemId))\n\n  const data = React.useMemo(\n    () =>\n      histogramData != null\n        ? [\n            {\n              x: histogramData[0],\n              type: 'histogram',\n              autobinx: false,\n              xbins: {\n                size: (Math.max(...histogramData[0]) - Math.min(...histogramData[0])) / (bins - 1),\n              },\n            },\n          ]\n        : [],\n    [histogramData, bins],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <InputBins />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </div>\n  )\n})\n\nconst InputBins = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const bins = useSelector(selectHistogramItemBins(itemId))\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setHistogramItemBins({ itemId, bins: parseInt(event.target.value) }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>bins</InputLabel>\n      <Input type=\"number\" value={bins} onChange={handleChange} />\n    </FormControl>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectLineColumns,\n  selectLineData,\n  selectLineDataError,\n  selectLineDataIsFulfilled,\n  selectLineDataIsInitialized,\n  selectLineDataIsPending,\n  selectLineIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getLineData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material'\nimport {\n  selectLineItemSelectedIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setLineItemSelectedIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nexport const LinePlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectLineDataIsPending(path))\n  const isInitialized = useSelector(selectLineDataIsInitialized(path))\n  const error = useSelector(selectLineDataError(path))\n  const isFulfilled = useSelector(selectLineDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getLineData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <LinePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst LinePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const lineData = useSelector(selectLineData(path))\n  const columns = useSelector(selectLineColumns(path))\n  const index = useSelector(selectLineIndex(path))\n  const selectedIndex = useSelector(selectLineItemSelectedIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      lineData != null\n        ? [\n            {\n              x: columns,\n              y: lineData[selectedIndex],\n            },\n          ]\n        : [],\n    [lineData, columns, selectedIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n      },\n    }),\n    [width, height, columns],\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <LineItemIndexSelect index={index} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </>\n  )\n})\n\nconst LineItemIndexSelect = React.memo<{ index: number[] }>(({ index }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const selectedIndex = useSelector(selectLineItemSelectedIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    dispatch(\n      setLineItemSelectedIndex({\n        itemId,\n        selectedIndex: Number(event.target.value),\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={selectedIndex} onChange={handleChange}>\n        {index.map((_, i) => (\n          <MenuItem key={i} value={i}>\n            {i}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectPieColumns,\n  selectPieData,\n  selectPieDataError,\n  selectPieDataIsFulfilled,\n  selectPieDataIsInitialized,\n  selectPieDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getPieData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { LinearProgress, Typography } from '@mui/material'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const PiePlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectPieDataIsPending(path))\n  const isInitialized = useSelector(selectPieDataIsInitialized(path))\n  const error = useSelector(selectPieDataError(path))\n  const isFulfilled = useSelector(selectPieDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getPieData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PiePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst PiePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const pieData = useSelector(selectPieData(path))\n  const columns = useSelector(selectPieColumns(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      pieData != null\n        ? [\n            {\n              values: pieData[0],\n              labels: columns,\n              type: 'pie',\n              sort: false,\n              direction: 'clockwise',\n            },\n          ]\n        : [],\n    [pieData, columns],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n      },\n    }),\n    [width, height, columns],\n  )\n\n  return <PlotlyChart data={data} layout={layout} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectPolarColumns,\n  selectPolarData,\n  selectPolarDataError,\n  selectPolarDataIsFulfilled,\n  selectPolarDataIsInitialized,\n  selectPolarDataIsPending,\n  selectPolarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getPolarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material'\nimport {\n  selectPolarItemSelectedIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setPolartemItemSelectedIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const PolarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectPolarDataIsPending(path))\n  const isInitialized = useSelector(selectPolarDataIsInitialized(path))\n  const error = useSelector(selectPolarDataError(path))\n  const isFulfilled = useSelector(selectPolarDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getPolarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PolarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst PolarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const polarData = useSelector(selectPolarData(path))\n  const columns = useSelector(selectPolarColumns(path))\n  const index = useSelector(selectPolarIndex(path))\n  const selectedIndex = useSelector(selectPolarItemSelectedIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      polarData != null\n        ? [\n          {\n              type: \"scatterpolar\",\n              mode: \"lines+markae\",\n              theta: [...columns, columns[0]],\n              r: [...polarData[selectedIndex], polarData[selectedIndex][0]],\n            },\n          ]\n        : [],\n    [polarData, columns, selectedIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n      },\n    }),\n    [width, height, columns],\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PolarItemIndexSelect index={index} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </>\n  )\n})\n\nconst PolarItemIndexSelect = React.memo<{ index: number[] }>(({ index }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const selectedIndex = useSelector(selectPolarItemSelectedIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    dispatch(\n      setPolartemItemSelectedIndex({\n        itemId,\n        selectedIndex: Number(event.target.value),\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={selectedIndex} onChange={handleChange}>\n        {index.map((_, i) => (\n          <MenuItem key={i} value={i}>\n            {i}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\nimport { HistogramPlot } from './Plot/HistogramPlot'\nimport { LinePlot } from './Plot/LinePlot'\nimport { PiePlot } from './Plot/PiePlot'\nimport { PolarPlot } from './Plot/PolarPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    case DATA_TYPE_SET.HISTOGRAM:\n      return <HistogramPlot />\n    case DATA_TYPE_SET.LINE:\n      return <LinePlot />\n    case DATA_TYPE_SET.PIE:\n      return <PiePlot />\n    case DATA_TYPE_SET.POLAR:\n      return <PolarPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Workspace/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<\n  TreeNodeTypeDTO[],\n  { workspaceId: number; fileType: FILE_TREE_TYPE }\n>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async ({ workspaceId, fileType }, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(workspaceId, fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLatest && !isLoading) {\n      dispatch(getFilesTree({workspaceId, fileType}))\n    }\n  }, [workspaceId, isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Connection,\n  Edge,\n  Node,\n  OnNodesChange,\n  OnEdgesChange,\n  ReactFlowInstance,\n  OnMove,\n  Viewport,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  editFlowNodePositionById,\n  setEdgesChange,\n  setFlowEdges,\n  setFlowPosition,\n  setNodesChange,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/Workspace/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/Workspace/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowNodes = useSelector(selectFlowNodes)\n    const flowEdges = useSelector(selectFlowEdges)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowEdges(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowEdges,\n          ),\n        ),\n      )\n    }\n\n    const onNodesChange: OnNodesChange = (changes) =>\n      dispatch(setNodesChange(changes))\n    const onEdgesChange: OnEdgesChange = (changes) =>\n      dispatch(setEdgesChange(changes))\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowNodePositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd: OnMove = (event, viewport: Viewport) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition([viewport.x, viewport.y, viewport.zoom]))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<ReactFlowInstance>()\n\n    const onInit = (reactFlowInstance: ReactFlowInstance) =>\n      setReactFlowInstance(reactFlowInstance)\n\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                nodes={flowNodes}\n                edges={flowEdges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onInit={onInit}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition[0], flowPosition[1]]}\n                defaultZoom={flowPosition[2]}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n        ),\n        (_, action) => {\n          const newState: AlgorithmNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                newState[node.id] = {\n                  name: node.data.label,\n                  functionPath: node.data.path,\n                  params: node.data.param,\n                  isUpdated: false,\n                }\n              }\n            })\n          return newState\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\nimport { RIGHT_DRAWER_WIDTH } from 'const/Layout'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nconst StyledDrawer = styled(Drawer)({\n  width: RIGHT_DRAWER_WIDTH,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: RIGHT_DRAWER_WIDTH,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { Divider, Typography, Grid } from '@mui/material'\nimport {\n  selectExperimentName,\n  selectExperimentsStatusIsFulfilled,\n} from 'store/slice/Experiments/ExperimentsSelectors'\n\nexport const CurrentPipelineInfo: React.FC = () => {\n  const uid = useSelector(selectPipelineLatestUid)\n  const isFulFilled = useSelector(selectExperimentsStatusIsFulfilled)\n\n  return (\n    <>\n      {uid && (\n        <>\n          <Grid container paddingX={2} paddingBottom={1}>\n            <ExperimentUidInfo uid={uid} />\n            {isFulFilled && <ExperimentNameInfo uid={uid} />}\n          </Grid>\n          <Divider />\n        </>\n      )}\n    </>\n  )\n}\n\nconst ExperimentUidInfo = React.memo<{ uid: string }>(({ uid }) => {\n  return <LabelValueGridRow label=\"ID\" value={uid} />\n})\n\nconst ExperimentNameInfo = React.memo<{ uid: string }>(({ uid }) => {\n  const name = useSelector(selectExperimentName(uid))\n  return <LabelValueGridRow label=\"NAME\" value={name} />\n})\n\nconst LabelValueGridRow = React.memo<{ label: string; value: string }>(\n  ({ label, value }) => {\n    return (\n      <>\n        <Grid item xs={4}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {value}\n          </Typography>\n        </Grid>\n      </>\n    )\n  },\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH, RIGHT_DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <Box\n          sx={{\n            width: DRAWER_WIDTH,\n          }}\n          borderRight={1}\n          borderColor={grey[300]}\n        >\n          <CurrentPipelineInfo />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </Box>\n\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    minHeight: CONTENT_HEIGHT,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -RIGHT_DRAWER_WIDTH,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE, outputKey?: string) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n    outputKey?: string\n  ) => {\n    onSelect(nodeId, filePath, dataType, outputKey)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n              outputPath.outputKey\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n    case FILE_TYPE_SET.MATLAB:\n    case FILE_TYPE_SET.EXPDB:\n      return DATA_TYPE_SET.MATLAB\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            minHeight: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n            ...basePayload,\n            deleteData: true,\n            prevDataType: dataType,\n            prevFilePath: selectedFilePath,\n          }\n          : {\n            ...basePayload,\n            deleteData: false,\n          },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string, dataType: string, outputKey?: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath, outputKey }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl\n        variant=\"standard\"\n        sx={{ minWidth: 120, width: '100%', marginBottom: 1 }}\n      >\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '100%' }}\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (workspaceId && filePath !== null) {\n        dispatch(\n          getImageData({\n            workspaceId,\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const HistogramItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const LineItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const PieItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const PolarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\nimport { HistogramItemEditor } from './Editor/HistogramItemEditor'\nimport { LineItemEditor } from './Editor/LineItemEditor'\nimport { PieItemEditor } from './Editor/PieItemEditor'\nimport { PolarItemEditor } from './Editor/PolarItemEditor'\n\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    case DATA_TYPE_SET.HISTOGRAM:\n      return <HistogramItemEditor />\n    case DATA_TYPE_SET.LINE:\n      return <LineItemEditor />\n    case DATA_TYPE_SET.PIE:\n      return <PieItemEditor />\n    case DATA_TYPE_SET.POLAR:\n      return <PolarItemEditor />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <Box\n        sx={{\n          width: DRAWER_WIDTH,\n        }}\n        borderRight={1}\n        borderColor={grey[300]}\n      >\n        <CurrentPipelineInfo />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </Box>\n\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  minHeight: CONTENT_HEIGHT\n})\n\nexport default Visualize\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport Experiment from 'components/Workspace/Experiment/Experiment'\nimport FlowChart from 'components/Workspace/FlowChart/FlowChart'\nimport Visualize from 'components/Workspace/Visualize/Visualize'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst Workspace: React.FC = () => {\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  const activeTab = useSelector(selectActiveTab)\n\n  return (\n    <RootDiv>\n      <TabPanel value={activeTab} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={activeTab} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={activeTab} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nexport default Workspace\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/slice/Run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport {run, pollRunResult, runByCurrentUid, cancelResult} from './PipelineActions'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\nimport {useSnackbar, VariantType} from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { IS_STANDALONE, STANDALONE_WORKSPACE_ID } from 'const/Mode'\nimport {\n  clearCurrentWorkspace,\n  setActiveTab,\n  setCurrentWorkspace,\n} from '../Workspace/WorkspaceSlice'\nimport { clearExperiments } from '../Experiments/ExperimentsSlice'\nimport { AppDispatch } from 'store/store'\nimport { getWorkspace } from '../Workspace/WorkspacesActions'\nimport { selectIsWorkspaceOwner } from '../Workspace/WorkspaceSelector'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const appDispatch: AppDispatch = useDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const { workspaceId } = useParams<{ workspaceId: string }>()\n  const _workspaceId = Number(workspaceId)\n\n  React.useEffect(() => {\n    if (IS_STANDALONE) {\n      dispatch(setCurrentWorkspace(STANDALONE_WORKSPACE_ID))\n    } else {\n      appDispatch(getWorkspace({ id: _workspaceId }))\n        .unwrap()\n        .then((_) => {\n          dispatch(fetchExperiment(_workspaceId))\n          const selectedTab = location.state?.tab\n          selectedTab && dispatch(setActiveTab(selectedTab))\n        })\n        .catch((_) => {\n          navigate('/console/workspaces')\n        })\n    }\n    return () => {\n      dispatch(clearExperiments())\n      dispatch(clearCurrentWorkspace())\n    }\n  }, [dispatch, appDispatch, navigate, _workspaceId, location.state])\n\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const runDisabled = isOwner ? isStartedSuccess : true\n\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(async () => {\n    if (uid != null) {\n      const data = await dispatch(cancelResult({uid}))\n      if((data as any).error) {\n        handleClickVariant('error', 'Failed to cancel workflow. Please try again.')\n      }\n    }\n    //eslint-disable-next-line\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Workflow canceled.', { variant: 'success' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    runDisabled,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.e44efe32.png\";","import { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\nimport { setActiveTab } from 'store/slice/Workspace/WorkspaceSlice'\n\nconst WorkspaceTabs: FC = () => {\n  const dispatch = useDispatch()\n  const activeTab = useSelector(selectActiveTab)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setActiveTab(newValue))\n  }\n\n  return (\n    <Tabs\n      sx={{ width: '100%' }}\n      value={activeTab}\n      onChange={handleChange}\n      centered\n      textColor=\"primary\"\n    >\n      <Tab label=\"Workflow\" {...a11yProps(0)} />\n      <Tab label=\"Visualize\" {...a11yProps(1)} />\n      <Tab label=\"Records\" {...a11yProps(2)} />\n    </Tabs>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default WorkspaceTabs\n","import { FC, useState } from 'react'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Menu, MenuItem } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport Logout from '@mui/icons-material/Logout'\nimport { useNavigate } from 'react-router-dom'\nimport { logout } from 'store/slice/User/UserSlice'\n\nconst Profile: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const onClickLogout = () => {\n    setAnchorEl(null)\n    dispatch(logout())\n    navigate('/login')\n  }\n\n  const onClickAccount = () => {\n    setAnchorEl(null)\n    navigate('/console/account')\n  }\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open profile menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n      >\n        <AccountCircleIcon />\n      </IconButton>\n      <Menu\n        id=\"profile-menu\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={onClickAccount}>\n          <PortraitIcon /> Account Profile\n        </MenuItem>\n        <MenuItem onClick={onClickLogout}>\n          <Logout />\n          SIGN OUT\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default Profile\n","import { FC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport MuiAppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Logo from 'components/logo.png'\nimport Tooltips from 'components/Layout/Tooltips'\nimport WorkspaceTabs from 'components/Workspace/WorkspaceTabs'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Profile from './Profile'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst Header: FC<{\n  handleDrawerOpen: () => void\n}> = ({ handleDrawerOpen }) => {\n  return IS_STANDALONE ? (\n    <StandaloneHeader />\n  ) : (\n    <MultiUserHeader handleDrawerOpen={handleDrawerOpen} />\n  )\n}\n\nconst StandaloneHeader: FC = () => {\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <Box display=\"flex\" flexGrow={1}>\n          <img src={Logo} alt=\"logo\" width={75} height={50} />\n        </Box>\n        <WorkspaceTabs />\n        <Tooltips />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst MultiUserHeader: FC<{ handleDrawerOpen: () => void }> = ({\n  handleDrawerOpen,\n}) => {\n  const showTabsRegex = /^\\/console\\/workspaces\\/.+$/\n  const location = useLocation()\n\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box display=\"flex\" flexGrow={1}>\n          <TitleLogo>STUDIO</TitleLogo>\n        </Box>\n        {showTabsRegex.test(location.pathname) && <WorkspaceTabs />}\n        <Profile />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst StyledAppBar = styled(MuiAppBar)({\n  position: 'fixed',\n  backgroundColor: '#E1DEDB',\n  color: '#000000',\n  height: APP_BAR_HEIGHT,\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nexport default Header\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport WebIcon from '@mui/icons-material/Web';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport StorageIcon from '@mui/icons-material/Storage'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport { DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport {useSelector} from \"react-redux\";\nimport {isAdmin} from \"../../store/slice/User/UserSelector\";\n\nconst LeftMenu: FC<{ open: boolean; handleDrawerClose: () => void }> = ({\n  open,\n  handleDrawerClose,\n}) => {\n  const navigate = useNavigate()\n  const admin = useSelector(isAdmin)\n\n  const onClickDashboard = () => {\n    handleDrawerClose()\n    navigate('/console')\n  }\n\n  const onClickDatabase = () => {\n    handleDrawerClose()\n    navigate('/console/experiments')\n  }\n\n  const onClickWorkspaces = () => {\n    handleDrawerClose()\n    navigate('/console/workspaces')\n  }\n\n  const onClickAccountManager = () => {\n    handleDrawerClose()\n    navigate('/console/account-manager')\n  }\n\n  const onClickOpenSite = () => {\n    handleDrawerClose()\n    navigate('/')\n  }\n\n  return (\n    <>\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\n        <Box sx={{ width: DRAWER_WIDTH }}>\n          <List>\n            <ListItem key=\"dashboard\" disablePadding>\n              <ListItemButton onClick={onClickDashboard}>\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"database\" disablePadding>\n              <ListItemButton onClick={onClickDatabase}>\n                <ListItemIcon>\n                  <StorageIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Database\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"workspaces\" disablePadding>\n              <ListItemButton onClick={onClickWorkspaces}>\n                <ListItemIcon>\n                  <AnalyticsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Workspaces\" />\n              </ListItemButton>\n            </ListItem>\n            {\n              admin ?\n                <ListItem key=\"account-manager\" disablePadding>\n                  <ListItemButton onClick={onClickAccountManager}>\n                    <ListItemIcon>\n                      <ManageAccountsIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Account Manager\" />\n                  </ListItemButton>\n                </ListItem> : null\n            }\n            <ListItem key=\"site\" disablePadding>\n              <ListItemButton onClick={onClickOpenSite}>\n                <ListItemIcon>\n                  <WebIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Open Site\" />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default LeftMenu\n","import { FC, ReactNode, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { getToken } from 'utils/auth/AuthUtils'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { getMe } from 'store/slice/User/UserActions'\nimport Header from './Header'\nimport LeftMenu from './LeftMenu'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Loading from 'components/common/Loading'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst authRequiredPathRegex = /^\\/console\\/?.*/\n\nconst Layout = ({ children }: { children?: ReactNode }) => {\n  const user = useSelector(selectCurrentUser)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const [loading, setLoadingAuth] = useState(\n    !IS_STANDALONE && authRequiredPathRegex.test(location.pathname),\n  )\n\n  useEffect(() => {\n    !IS_STANDALONE &&\n      authRequiredPathRegex.test(location.pathname) &&\n      checkAuth()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname, user])\n\n  const checkAuth = async () => {\n    if (user) {\n      if (loading) setLoadingAuth(false)\n      return\n    }\n    const token = getToken()\n    const isLogin = location.pathname === '/login'\n\n    try {\n      if (token) {\n        await dispatch(getMe())\n        if (isLogin) navigate('/console')\n        return\n      } else if (!isLogin) throw new Error('fail auth')\n    } catch {\n      navigate('/login', { replace: true })\n    } finally {\n      if (loading) setLoadingAuth(false)\n    }\n  }\n\n  if (loading) return <Loading />\n\n  return IS_STANDALONE || authRequiredPathRegex.test(location.pathname) ? (\n    <AuthedLayout>{children}</AuthedLayout>\n  ) : (\n    <UnauthedLayout>{children}</UnauthedLayout>\n  )\n}\n\nconst AuthedLayout: FC = ({ children }) => {\n  const [open, setOpen] = useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  return (\n    <LayoutWrapper>\n      <Header handleDrawerOpen={handleDrawerOpen} />\n      <ContentBodyWrapper>\n        <LeftMenu open={open} handleDrawerClose={handleDrawerClose} />\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst UnauthedLayout: FC = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <ContentBodyWrapper>\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: APP_BAR_HEIGHT,\n  height: `calc(100% - ${APP_BAR_HEIGHT}px)`,\n  paddingRight: 10,\n  overflow: 'auto',\n}))\n\nconst ChildrenWrapper = styled('main', {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<{}>(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n}))\n\nexport default Layout\n","import { Box, Button, styled } from '@mui/material'\nimport { FC } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nconst DatabaseWrapper: FC = ({ children }) => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const handleClickExperiments = () => {\n    navigate('/console/experiments')\n  }\n  const handleClickCells = () => {\n    navigate('/console/cells')\n  }\n\n  return (\n    <Box\n      sx={{\n        paddingTop: 2,\n        paddingBottom: 5,\n      }}\n    >\n      <Box>\n        <Button\n          variant=\"text\"\n          onClick={handleClickExperiments}\n          disabled={location.pathname === '/console/experiments'}\n        >\n          Experiments\n        </Button>\n        /\n        <Button\n          variant=\"text\"\n          onClick={handleClickCells}\n          disabled={location.pathname === '/console/cells'}\n        >\n          Cells\n        </Button>\n      </Box>\n      <DataBaseContent>{children}</DataBaseContent>\n    </Box>\n  )\n}\n\nconst DataBaseContent = styled(Box)(({ theme }) => ({\n  width: '94vw',\n  margin: 'auto',\n  marginTop: 15,\n}))\n\nexport default DatabaseWrapper\n","import DatabaseExperiments from 'components/Database/DatabaseExperiments'\nimport DatabaseWrapper from 'components/Database/DatabaseWrapper'\nimport { useSelector } from 'react-redux'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\n\nconst Experiments = () => {\n  const user = useSelector(selectCurrentUser)\n\n  return (\n    <DatabaseWrapper>\n      <DatabaseExperiments user={user} cellPath=\"/console/cells\" />\n    </DatabaseWrapper>\n  )\n}\n\nexport default Experiments\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { AppBar, Button, Container, Toolbar, Typography } from '@mui/material'\nimport { SxProps, Theme } from '@mui/material/styles'\n\nconst PublicHeader: FC = () => {\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth={false}>\n        <Toolbar>\n          <PublicNavMenu displayName=\"Digital Marmoset Brain\" navLink=\"/\" sx={{ fontWeight: 600, fontSize: 22, mr: 2 }} />\n          <PublicNavMenu displayName=\"Console\" navLink=\"/console\" />\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}\n\nconst PublicNavMenu: FC<{\n  displayName: string\n  navLink: string\n  sx?: SxProps<Theme>\n}> = ({ displayName, navLink, sx }) => {\n  const navigate = useNavigate()\n  const handleMenuClick = () => {\n    navigate(navLink)\n  }\n\n  return (\n    <Button key={displayName} onClick={handleMenuClick}>\n      <Typography color=\"white\" sx={sx}>{displayName}</Typography>\n    </Button>\n  )\n}\n\nexport default PublicHeader\n","import { FC } from 'react'\nimport { Box, Container, Divider, Grid, Typography } from '@mui/material'\n\nconst PublicFooter: FC = () => {\n  return (\n    <>\n      <Box sx={{ paddingTop: 4, paddingBottom: 2 }}>\n        <Divider />\n      </Box>\n      <Box>\n        <Container>\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <Typography>\n                {`${new Date().getFullYear()}`} Studio. All rights reserved.\n              </Typography>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  )\n}\n\nexport default PublicFooter\n","import { FC } from 'react'\nimport { Box } from '@mui/material'\nimport PublicHeader from 'components/PublicLayout/PublicHeader'\nimport PublicFooter from 'components/PublicLayout/PublicFooter'\n\nconst PublicLayout: FC = ({ children }) => {\n  return (\n    <Box sx={{ height: '100%', width: '100%' }}>\n      <PublicHeader />\n      <Box>{children}</Box>\n      <PublicFooter />\n    </Box>\n  )\n}\n\nexport default PublicLayout\n","import { FC } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { Box, Button, styled } from '@mui/material'\nimport PublicLayout from 'components/PublicLayout'\n\nconst PublicDatabaseWrapper: FC = ({ children }) => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const handleClickExperiments = () => {\n    navigate('/experiments')\n  }\n  const handleClickCells = () => {\n    navigate('/cells')\n  }\n\n  return (\n    <PublicLayout>\n      <Box\n        sx={{\n          paddingTop: 2,\n          paddingBottom: 5,\n        }}\n      >\n        <Box>\n          <Button\n            variant=\"text\"\n            onClick={handleClickExperiments}\n            disabled={location.pathname === '/experiments'}\n          >\n            Experiments\n          </Button>\n          /\n          <Button\n            variant=\"text\"\n            onClick={handleClickCells}\n            disabled={location.pathname === '/cells'}\n          >\n            Cells\n          </Button>\n        </Box>\n        <DataBaseContent>{children}</DataBaseContent>\n      </Box>\n    </PublicLayout>\n  )\n}\n\nconst DataBaseContent = styled(Box)(({ theme }) => ({\n  width: '94vw',\n  margin: 'auto',\n  marginTop: 15,\n}))\n\nexport default PublicDatabaseWrapper\n","import DatabaseExperiments from 'components/Database/DatabaseExperiments'\nimport PublicDatabaseWrapper from 'components/PublicDatabase/PublicDatabaseWrapper'\n\nconst PublicExperiments = () => {\n  return (\n    <PublicDatabaseWrapper>\n      <DatabaseExperiments cellPath=\"/cells\" />\n    </PublicDatabaseWrapper>\n  )\n}\n\nexport default PublicExperiments\n","import { Box, Input, styled } from '@mui/material'\nimport {ChangeEvent, useCallback, useEffect, useMemo, useState} from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport DialogImage from '../common/DialogImage'\nimport {\n  GridFilterModel,\n  GridSortModel,\n  DataGrid,\n  GridSortDirection,\n  GridSortItem\n} from '@mui/x-data-grid'\nimport {\n  DatabaseType,\n  DATABASE_SLICE_NAME,\n  ImageUrls,\n} from '../../store/slice/Database/DatabaseType'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../store/store'\nimport {\n  getCellsDatabase,\n  getCellsPublicDatabase,\n} from '../../store/slice/Database/DatabaseActions'\nimport Loading from 'components/common/Loading'\nimport { TypeData } from 'store/slice/Database/DatabaseSlice'\nimport PaginationCustom from \"../common/PaginationCustom\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { WAITING_TIME } from \"../../@types\";\n\ntype CellProps = {\n  user?: Object\n}\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\nconst columns = (user?: boolean, loading: boolean = false) => [\n  {\n    field: 'experiment_id',\n    headerName: 'Experiment ID',\n    filterOperators: [\n      {\n        label: 'Contains', value: 'contains',\n        InputComponent: ({applyValue, item}: any) => {\n          return (\n            <Input\n              autoFocus={!loading}\n              sx={{paddingTop: \"16px\"}}\n              defaultValue={item.value || ''}\n              onChange={(e) => {\n                if(timeout) clearTimeout(timeout)\n                timeout = setTimeout(() => {\n                  applyValue({...item, value: e.target.value})\n                }, WAITING_TIME)\n              }}\n            />\n          )\n        }\n      },\n    ],\n    type: \"string\",\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) => params.row?.experiment_id,\n  },\n  user && {\n    field: 'published',\n    headerName: 'Published',\n    renderCell: (params: { row: DatabaseType }) => (\n      params.row.publish_status ? <CheckCircleIcon color={\"success\"} /> : null\n    ),\n    valueOptions: ['Published', 'No_Published'],\n    type: 'singleSelect',\n    width: 120,\n  },\n  {\n    field: 'id',\n    headerName: 'Cell ID',\n    width: 120,\n    filterable: false,\n    renderCell: (params: { value: number }) => params.value,\n  },\n  {\n    field: 'brain_area',\n    headerName: 'Brain area',\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.brain_area ?? 'NA',\n  },\n  {\n    field: 'cre_driver',\n    headerName: 'Cre driver',\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.cre_driver ?? 'NA',\n  },\n  {\n    field: 'reporter_line',\n    headerName: 'Reporter line',\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.reporter_line ?? 'NA',\n  },\n  {\n    field: 'imaging_depth',\n    headerName: 'Imaging depth',\n    filterable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.imaging_depth ?? 'NA',\n  },\n]\n\nconst statistics = () => [\n  {\n    field: 'p_value_resp',\n    headerName: 'p_value_resp',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.p_value_resp ?? 'NA',\n  },\n  {\n    field: 'p_value_sel',\n    headerName: 'p_value_sel',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.p_value_sel ?? 'NA',\n  },\n  {\n    field: 'p_value_ori_resp',\n    headerName: 'p_value_ori_resp',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.p_value_ori_resp ?? 'NA',\n  },\n  {\n    field: 'p_value_ori_sel',\n    headerName: 'p_value_ori_sel',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.p_value_ori_sel ?? 'NA',\n  },\n  {\n    field: 'dir_vector_angle',\n    headerName: 'dir_vector_angle',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.dir_vector_angle ?? 'NA',\n  },\n  {\n    field: 'ori_vector_angle',\n    headerName: 'ori_vector_angle',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.ori_vector_angle ?? 'NA',\n  },\n  {\n    field: 'di',\n    headerName: 'di',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.di ?? 'NA',\n  },\n  {\n    field: 'oi',\n    headerName: 'oi',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.oi ?? 'NA',\n  },\n  {\n    field: 'dsi',\n    headerName: 'dsi',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.dsi ?? 'NA',\n  },\n  {\n    field: 'osi',\n    headerName: 'osi',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.osi ?? 'NA',\n  },\n  {\n    field: 'r_best_dir',\n    headerName: 'r_best_dir',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.r_best_dir ?? 'NA',\n  },\n  {\n    field: 'dir_tuning_width',\n    headerName: 'dir_tuning_width',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.dir_tuning_width ?? 'NA',\n  },\n  {\n    field: 'ori_tuning_width',\n    headerName: 'ori_tuning_width',\n    filterable: false,\n    sortable: false,\n    width: 120,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.statistics?.ori_tuning_width ?? 'NA',\n  },\n]\n\nconst DatabaseCells = ({ user }: CellProps) => {\n  const type: keyof TypeData = user ? 'private' : 'public'\n\n  const { data: dataCells, loading } = useSelector(\n    (state: RootState) => ({\n      data: state[DATABASE_SLICE_NAME].data[type],\n      loading: state[DATABASE_SLICE_NAME].loading,\n    }),\n  )\n\n  const [newParams, setNewParams] = useState(window.location.search.replace(\"?\", \"\"))\n  const [dataDialog, setDataDialog] = useState<{\n    type: string\n    data?: string | string[]\n    expId?: string\n    nameCol?: string\n  }>({\n    type: '',\n    data: undefined,\n  })\n\n  const [searchParams, setParams] = useSearchParams()\n  const dispatch = useDispatch()\n\n  const id = searchParams.get('id')\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit') || 50\n  const sort = searchParams.getAll('sort')\n\n  const dataParams = useMemo(() => {\n    return {\n      exp_id: Number(id) || undefined,\n      sort: [sort[0]?.replace('published', 'publish_status'), sort[1]] || [],\n      limit: Number(limit) || 50,\n      offset: Number(offset) || 0,\n    }\n    //eslint-disable-next-line\n  }, [offset, limit, JSON.stringify(sort), id])\n\n  const dataParamsFilter = useMemo(\n    () => ({\n      experiment_id: searchParams.get('experiment_id') || undefined,\n      publish_status: searchParams.get('published') || undefined,\n      brain_area: searchParams.get('brain_area') || undefined,\n      cre_driver: searchParams.get('cre_driver') || undefined,\n      reporter_line: searchParams.get('reporter_line') || undefined,\n      imaging_depth: Number(searchParams.get('imaging_depth')) || undefined,\n    }),\n    [searchParams],\n  )\n\n  const [model, setModel] = useState<{filter: GridFilterModel, sort: any}>({\n    filter: {\n      items: [\n        {\n          field: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key])?.replace('publish_status', 'published') || '' ,\n          operator: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key]) === 'publish_status' ? 'is' : 'contains',\n          value: Object.values(dataParamsFilter).find(value => value) || null,\n        },\n      ],\n    },\n    sort: [{\n      field: dataParams.sort[0]?.replace('publish_status', 'published') || '',\n      sort: dataParams.sort[1] as GridSortDirection\n    }]\n  })\n\n  const pagiFilter = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${\n          page ? (Number(limit) * (page - 1)) : offset || dataCells.offset\n      }`\n    },\n    //eslint-disable-next-line\n    [limit, offset, JSON.stringify(dataCells), dataCells.offset],\n  )\n\n  const fetchApi = () => {\n    const api = !user ? getCellsPublicDatabase : getCellsDatabase\n    let newPublish: number | undefined\n    if(!dataParamsFilter.publish_status) newPublish = undefined\n    else {\n      if(dataParamsFilter.publish_status === 'Published') newPublish = 1\n      else newPublish = 0\n    }\n    dispatch(api({ ...dataParamsFilter, publish_status: newPublish, ...dataParams }))\n  }\n\n  useEffect(() => {\n    if(Object.keys(dataParamsFilter).every(key => !(dataParamsFilter as any)[key])) return\n    setModel({\n      filter: {\n        items: [\n          {\n            field: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key])?.replace('publish_status', 'published') || '' ,\n            operator: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key]) === 'publish_status' ? 'is' : 'contains',\n            value: Object.values(dataParamsFilter).find(value => value) || null,\n          },\n        ],\n      },\n      sort: [{\n        field: dataParams.sort[0]?.replace('publish_status', 'published') || '',\n        sort: dataParams.sort[1] as GridSortDirection\n      }]\n    })\n    //eslint-disable-next-line\n  }, [dataParams, dataParamsFilter])\n\n  useEffect(() => {\n    let param = newParams\n    if(newParams[0] === '&') param = newParams.slice(1, param.length)\n    if(param === window.location.search.replace(\"?\", \"\")) return;\n    setParams(param)\n    //eslint-disable-next-line\n  }, [newParams])\n\n  useEffect(() => {\n    fetchApi()\n    //eslint-disable-next-line\n  }, [JSON.stringify(dataParams), user, JSON.stringify(dataParamsFilter)])\n\n  const handleOpenDialog = (data: ImageUrls[] | ImageUrls, expId?: string, graphTitle?: string) => {\n    let newData: string | (string[]) = []\n    if(Array.isArray(data)) {\n      newData = data.map(d => d.url);\n    } else newData = data.url\n    setDataDialog({ type: 'image', data: newData, expId: expId, nameCol: graphTitle })\n  }\n\n  const handleCloseDialog = () => {\n    setDataDialog({ type: '', data: undefined })\n  }\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(dataParamsFilter)\n      .filter((key) => (dataParamsFilter as any)[key])\n      .map((key) => `${key}=${(dataParamsFilter as any)[key]}`)\n      .join('&')\n      .replaceAll('publish_status', 'published')\n    return dataFilter\n  }\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    if(!dataCells) return\n    const filter = getParamsData()\n    const param = `${filter}${dataParams.sort[0] ? `${filter ? '&' : ''}sort=${dataParams.sort[0]}&sort=${dataParams.sort[1]}` : ''}&${pagiFilter(page)}`\n    setNewParams(param)\n  }\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      setModel({\n        ...model, sort: rowSelectionModel\n      })\n      let param\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        param = filter || dataParams.sort[0] || offset ? `${filter ? `${filter}&` : ''}${pagiFilter()}` : ''\n        setNewParams(param)\n        return\n      }\n      param = `${filter}${rowSelectionModel[0] ? `${filter ? '&' : ''}sort=${rowSelectionModel[0].field?.replaceAll(\n          'publish_status',\n          'published'\n      )}&sort=${rowSelectionModel[0].sort}&` : ''}${pagiFilter()}`\n      setNewParams(param)\n    },\n    //eslint-disable-next-line\n    [pagiFilter, model],\n  )\n\n  const handleFilter = (modelFilter: GridFilterModel) => {\n    setModel({\n      ...model, filter: modelFilter\n    })\n    let filter = ''\n    if (!!modelFilter.items[0]?.value) {\n      filter = modelFilter.items\n        .filter((item) => item.value)\n        .map((item: any) => {\n          return `${item.field}=${item?.value}`\n        })\n        .join('&').replace('publish_status', 'published')\n    }\n    const { sort } = dataParams\n    const param = sort[0] || filter || offset ? `${filter}${sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''}&${pagiFilter()}` : ''\n    setNewParams(param.replace('publish_status', 'published'))\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    if(!dataCells) return\n    let filter = ''\n    filter = Object.keys(dataParamsFilter).filter(key => (dataParamsFilter as any)[key])\n      .map((item: any) => `${item}=${(dataParamsFilter as any)[item]}`)\n      .join('&').replace('publish_status', 'published')\n    const { sort } = dataParams\n    const param = `${filter}${sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${Number(event.target.value)}&offset=0`\n    setNewParams(param)\n  }\n\n  const getColumns = useMemo(() => {\n    return (dataCells.header?.graph_titles || []).map(\n      (graphTitle, index) => ({\n      field: `graph_urls.${index}`,\n      headerName: graphTitle,\n      filterable: false,\n      sortable: false,\n      renderCell: (params: { row: DatabaseType }) => {\n        const {row} = params\n        const {graph_urls} = row\n        const graph_url = graph_urls[index]\n        if(!graph_url) return null\n        return (\n          <Box\n            sx={{ display: 'flex', cursor: \"pointer\" }}\n            onClick={() => handleOpenDialog(graph_url, params.row.experiment_id, graphTitle)}\n          >\n            <img\n              src={graph_url.thumb_url}\n              alt={''}\n              width={'100%'}\n              height={'100%'}\n            />\n          </Box>\n        )\n      },\n      width: 160,\n    }),\n    )\n  }, [dataCells.header?.graph_titles])\n\n  const columnsTable = [...columns(!!user, loading), ...getColumns, ...statistics()].filter(\n    Boolean,\n  ) as any\n\n  return (\n    <DatabaseExperimentsWrapper>\n      <DataGrid\n        columns={[...columnsTable] as any}\n        rows={dataCells?.items || []}\n        rowHeight={128}\n        hideFooter={true}\n        filterMode={'server'}\n        sortingMode={'server'}\n        onSortModelChange={handleSort}\n        filterModel={model.filter}\n        sortModel={model.sort as GridSortItem[]}\n        onFilterModelChange={handleFilter as any}\n      />\n      {\n        dataCells?.items.length > 0 ?\n        <PaginationCustom\n          data={dataCells}\n          handlePage={handlePage}\n          handleLimit={handleLimit}\n          limit={Number(limit)}\n        /> : null\n      }\n      <DialogImage\n        open={dataDialog.type === 'image'}\n        data={dataDialog.data}\n        nameCol={dataDialog.nameCol}\n        expId={dataDialog.expId}\n        handleCloseDialog={handleCloseDialog}\n      />\n      {loading ? <Loading /> : null}\n    </DatabaseExperimentsWrapper>\n  )\n}\n\nconst DatabaseExperimentsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  height: 'calc(100vh - 250px)',\n}))\n\nexport default DatabaseCells\n","import DatabaseCells from 'components/Database/DatabaseCells'\nimport PublicDatabaseWrapper from 'components/PublicDatabase/PublicDatabaseWrapper'\n\nconst PublicCells = () => {\n  return (\n    <PublicDatabaseWrapper>\n      <DatabaseCells />\n    </PublicDatabaseWrapper>\n  )\n}\n\nexport default PublicCells\n","import DatabaseCells from 'components/Database/DatabaseCells'\nimport DatabaseWrapper from 'components/Database/DatabaseWrapper'\nimport { useSelector } from 'react-redux'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\n\nconst Cells = () => {\n  const user = useSelector(selectCurrentUser)\n\n  return (\n    <DatabaseWrapper>\n      <DatabaseCells user={user}/>\n    </DatabaseWrapper>\n  )\n}\n\nexport default Cells\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError =\n    ({\n      errorMessage,\n      onChange,\n      value,\n      type,\n      onBlur,\n      name,\n    }: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: string[]\n}\n\nconst SelectError: FC<SelectErrorProps> =\n   ({\n     value,\n     onChange,\n     onBlur,\n     errorMessage,\n     options,\n     name,\n   }) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: string) => {\n          return (\n            <MenuItem key={item} value={item}>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {ChangeEvent, useCallback, useEffect, useMemo, useState, MouseEvent} from \"react\";\nimport {Box, Button, Dialog, DialogActions, DialogTitle, Input, styled} from \"@mui/material\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {isAdmin, selectCurrentUser, selectListUser, selectLoading} from \"../../store/slice/User/UserSelector\";\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport {deleteUser, createUser, getListUser, updateUser} from \"../../store/slice/User/UserActions\";\nimport Loading from \"../../components/common/Loading\";\nimport {AddUserDTO, UserDTO} from \"../../api/users/UsersApiDTO\";\nimport {ROLE, WAITING_TIME} from \"../../@types\";\nimport {DataGrid, GridFilterModel, GridSortDirection, GridSortItem, GridSortModel} from \"@mui/x-data-grid\";\nimport {regexEmail, regexIgnoreS, regexPassword} from \"../../const/Auth\";\nimport InputError from \"../../components/common/InputError\";\nimport {SelectChangeEvent} from \"@mui/material/Select\";\nimport SelectError from \"../../components/common/SelectError\";\nimport PaginationCustom from \"../../components/common/PaginationCustom\";\nimport {useSnackbar, VariantType} from \"notistack\";\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel: () => void\n  name?: string\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role_id: '',\n  name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent =\n  ({\n    onSubmitEdit,\n    setOpenModal,\n    dataEdit,\n  }: ModalComponentProps) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n      dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n      value: string,\n      isConfirm: boolean = false,\n      values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)){\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('name', 100, formData.name)\n    const errorEmail = validateEmail(formData.email)\n    const errorRole = validateField('role_id', 50, formData.role_id)\n    const errorPassword = dataEdit?.id ? '' : validatePassword(formData.password)\n    const errorConfirmPassword = dataEdit?.id ? '' : validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      name: errorName,\n      role_id: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.id, formData)\n      setOpenModal(false)\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setOpenModal(false)\n  }\n\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.id ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"name\"\n            value={formData?.name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role_id || ''}\n            options={Object.keys(ROLE).filter(key => !Number(key))}\n            name=\"role_id\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role_id}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.id ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\n\nconst PopupDelete = ({open, handleClose, handleOkDel, name}: PopupType) => {\n  if(!open) return null\n  return (\n      <Box>\n        <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n          <DialogTitle>Do you want delete User \"{name}\"?</DialogTitle>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={handleOkDel}>Ok</Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n  )\n}\n\nconst AccountManager = () => {\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  const listUser = useSelector(selectListUser)\n  const loading = useSelector(selectLoading)\n  const user = useSelector(selectCurrentUser)\n  const admin = useSelector(isAdmin)\n\n  const [searchParams, setParams] = useSearchParams()\n\n  const [openModal, setOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [newParams, setNewParams] = useState(window.location.search.replace(\"?\", \"\"))\n\n  const limit = searchParams.get('limit') || 50\n  const offset = searchParams.get('offset') || 0\n  const name = searchParams.get('name') || undefined\n  const email = searchParams.get('email') || undefined\n  const sort = searchParams.getAll('sort') || []\n  const [openDel, setOpenDel] = useState<{id?: number, name?: string, open: boolean}>()\n\n  const filterParams = useMemo(() => {\n    return {\n      name: name,\n      email: email\n    }\n  }, [name, email])\n\n  const sortParams = useMemo(() => {\n    return {\n      sort: sort\n    }\n    //eslint-disable-next-line\n  }, [JSON.stringify(sort)])\n\n  const params = useMemo(() => {\n    return {\n      limit: Number(limit),\n      offset: Number(offset)\n    }\n  }, [limit, offset])\n\n  const [model, setModel] = useState<{filter: GridFilterModel, sort: any}>({\n    filter : {\n      items: [\n        {\n          field: Object.keys(filterParams).find(key => (filterParams as any)[key]) || '',\n          operator: 'contains',\n          value: Object.values(filterParams).find(value => value) || null,\n        },\n      ],\n    },\n    sort: [{\n      field: sortParams.sort[0]?.replace('role', 'role_id') || '',\n      sort: sortParams.sort[1] as GridSortDirection\n    }]\n  })\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n\n  useEffect(() => {\n    if(!admin) navigate('/console')\n    //eslint-disable-next-line\n  }, [JSON.stringify(admin)])\n\n  useEffect(() => {\n    if(Object.keys(filterParams).every(key => !(filterParams as any)[key])) return\n    setModel({\n      filter: {\n        items: [\n          {\n            field: Object.keys(filterParams).find(key => (filterParams as any)[key]) || '' ,\n            operator: 'contains',\n            value: Object.values(filterParams).find(value => value) || null,\n          },\n        ],\n      },\n      sort: [{\n        field: sortParams.sort[0]?.replace('role', 'role_id') || '',\n        sort: sortParams.sort[1] as GridSortDirection\n      }]\n    })\n    //eslint-disable-next-line\n  }, [sortParams, filterParams])\n\n  useEffect(() => {\n    if(newParams && newParams !== window.location.search.replace(\"?\", \"\")){\n      setNewParams(window.location.search.replace(\"?\", \"\"))\n    }\n    //eslint-disable-next-line\n  }, [searchParams])\n\n  useEffect(() => {\n    if(newParams === window.location.search.replace(\"?\", \"\")) return;\n    setParams(newParams)\n    //eslint-disable-next-line\n  }, [newParams])\n\n  useEffect(() => {\n    dispatch(getListUser({...filterParams, ...sortParams, ...params}))\n    //eslint-disable-next-line\n  }, [limit, offset, email, name, JSON.stringify(sort)])\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((key) => `${key}=${(filterParams as any)[key]}`)\n      .join('&')\n    return dataFilter\n  }\n\n  const paramsManager = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${\n        page ? page - 1 : offset\n      }`\n    },\n    [limit, offset],\n  )\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      setModel({\n        ...model, sort: rowSelectionModel\n      })\n      let param\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        param = filter || sortParams.sort[0] || offset ? `${filter ? `${filter}&` : ''}${paramsManager()}` : ''\n      } else {\n        param = `${filter}${rowSelectionModel[0] ? `${filter ? `&` : ''}sort=${rowSelectionModel[0].field.replace('_id', '')}&sort=${rowSelectionModel[0].sort}` : ''}&${paramsManager()}`\n      }\n      setNewParams(param)\n      //eslint-disable-next-line\n    }, [paramsManager, getParamsData, model])\n\n  const handleFilter = (modelFilter: GridFilterModel) => {\n    setModel({\n      ...model, filter: modelFilter\n    })\n    let filter = ''\n    if (!!modelFilter.items[0]?.value) {\n      filter = modelFilter.items\n        .filter((item) => item.value)\n        .map((item: any) => `${item.field}=${item?.value}`)\n        .join('&')\n    }\n    const { sort } = sortParams\n    const param = sort[0] || filter || offset ? `${filter}${sort[0] ? `${filter ? \"&\": \"\"}sort=${sort[0]}&sort=${sort[1]}` : ''}&${paramsManager()}` : ''\n    setNewParams(param)\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n\n  const handleEdit = (dataEdit: UserDTO) => {\n    setOpenModal(true)\n    setDataEdit(dataEdit)\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    const {confirmPassword, role_id, ...newData} = data\n    let newRole\n    switch (role_id) {\n      case \"ADMIN\":\n        newRole = ROLE.ADMIN;\n        break;\n      case \"DATA_MANAGER\":\n        newRole = ROLE.DATA_MANAGER;\n        break;\n      case \"OPERATOR\":\n        newRole = ROLE.OPERATOR;\n        break;\n      case \"GUEST_OPERATOR\":\n        newRole = ROLE.GUEST_OPERATOR;\n        break;\n    }\n    if (id !== undefined) {\n      const data = await dispatch(updateUser(\n        {\n          id: id as number,\n          data: {name: newData.name, email: newData.email, role_id: newRole},\n          params: {...filterParams, ...sortParams, ...params}\n        }))\n        if((data as any).error) {\n          if (!navigator.onLine) {\n            handleClickVariant('error', 'Account update failed!')\n            return\n          }\n          handleClickVariant('error', 'This email already exists!')\n        }\n        else {\n          handleClickVariant('success', 'Your account has been edited successfully!')\n        }\n    } else {\n      const data = await dispatch(createUser({\n        data: {...newData, role_id: newRole} as AddUserDTO,\n        params: {...filterParams, ...sortParams, ...params}\n      }))\n      if(!(data as any).error) {\n        handleClickVariant('success', 'Your account has been created successfully!')\n      }\n        else {\n        if (!navigator.onLine) {\n          handleClickVariant('error', 'Account creation failed!')\n          return\n        }\n        handleClickVariant('error', 'This email already exists!')\n      }\n    }\n    return undefined\n  }\n\n  const handleOpenPopupDel = (id?: number, name?: string) => {\n    if(!id) return\n    setOpenDel({id: id, name: name, open: true})\n  }\n\n  const handleClosePopupDel = () => {\n    setOpenDel({...openDel, open: false})\n  }\n\n  const handleOkDel = async () => {\n    if(!openDel?.id || !openDel) return\n    const data = await dispatch(deleteUser({\n      id: openDel.id,\n      params: {...filterParams, ...sortParams, ...params}\n    }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Delete user failed!')\n    }\n    else {\n      handleClickVariant('success', 'Account deleted successfully!')\n    }\n    setOpenDel({...openDel, open: false})\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(filterParams).filter(key => (filterParams as any)[key])\n      .map((item: any) => `${item}=${(filterParams as any)[item]}`)\n      .join('&')\n    const { sort } = sortParams\n    const param = `${filter}${sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${Number(event.target.value)}&offset=0`\n    setNewParams(param)\n  }\n\n  const handlePage = (event: ChangeEvent<unknown>, page: number) => {\n    if(!listUser) return\n    let filter = ''\n    filter = Object.keys(filterParams).filter(key => (filterParams as any)[key])\n      .map((item: any) => `${item}=${(filterParams as any)[item]}`)\n      .join('&')\n    const { sort } = sortParams\n    const param = `${filter}${sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${listUser.limit}&offset=${(page - 1) * Number(limit)}`\n    setNewParams(param)\n  }\n\n  const columns = [\n    {\n      headerName: 'ID',\n      field: 'id',\n      filterable: false,\n      minWidth: 100,\n      flex: 1\n    },\n    {\n      headerName: 'Name',\n      field: 'name',\n      minWidth: 100,\n      flex: 2,\n      filterOperators: [\n        {\n          label: 'Contains',\n          value: 'contains',\n          InputComponent: ({applyValue, item}: any) => {\n            return (\n              <Input\n                autoFocus={!loading}\n                sx={{paddingTop: \"16px\"}}\n                defaultValue={item.value || ''}\n                onChange={(e) => {\n                  if(timeout) clearTimeout(timeout)\n                  timeout = setTimeout(() => {\n                    applyValue({...item, value: e.target.value})\n                  }, WAITING_TIME)\n                }}\n              />\n            )\n          }\n        },\n      ],\n      type: \"string\",\n    },\n    {\n      headerName: 'Role',\n      field: 'role_id',\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n      renderCell: (params: {value: number}) => {\n        let role\n        switch (params.value) {\n          case ROLE.ADMIN:\n            role = \"Admin\";\n            break;\n          case ROLE.DATA_MANAGER:\n            role = \"Data Manager\";\n            break;\n          case ROLE.OPERATOR:\n            role = \"Operator\";\n            break;\n          case ROLE.GUEST_OPERATOR:\n            role = \"Guest Operator\";\n            break;\n        }\n        return (\n          <span>{role}</span>\n        )\n      }\n    },\n    {\n      headerName: 'Mail',\n      field: 'email',\n      minWidth: 100,\n      flex: 2,\n      filterOperators: [\n        {\n          label: 'Contains', value: 'contains',\n          InputComponent: ({applyValue, item}: any) => {\n            return (\n              <Input\n                autoFocus={!loading}\n                sx={{paddingTop: \"16px\"}}\n                defaultValue={item.value || ''}\n                onChange={(e) => {\n                  if(timeout) clearTimeout(timeout)\n                  timeout = setTimeout(() => {\n                    applyValue({...item, value: e.target.value})\n                  }, WAITING_TIME)\n                }}\n              />\n            )\n          }\n        },\n      ],\n      type: \"string\",\n    },\n    {\n      headerName: '',\n      field: 'action',\n      sortable: false,\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n      renderCell: (params: {row: UserDTO}) => {\n        const { id, role_id, name, email} = params.row\n        if(!id || !role_id || !name || !email) return null\n        let role: any\n        switch (role_id) {\n          case ROLE.ADMIN:\n            role = \"ADMIN\";\n            break;\n          case ROLE.DATA_MANAGER:\n            role = \"DATA_MANAGER\";\n            break;\n          case ROLE.OPERATOR:\n            role = \"OPERATOR\";\n            break;\n          case ROLE.GUEST_OPERATOR:\n            role = \"GUEST_OPERATOR\";\n            break;\n        }\n\n        return (\n          <>\n            <ALink\n              sx={{ color: 'red' }}\n              onClick={() => handleEdit({id, role_id: role, name, email} as UserDTO)}\n            >\n              <EditIcon sx={{ color: 'black' }} />\n            </ALink>\n            {\n              !(params.row?.id === user?.id) ?\n              <ALink\n                sx={{ ml: 1.25 }}\n                onClick={() => handleOpenPopupDel(params.row?.id, params.row?.name)}\n              >\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink> : null\n            }\n          </>\n        )\n      },\n    },\n  ];\n\n  return (\n    <AccountManagerWrapper>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button \n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenModal}\n        >\n          Add\n        </Button>\n      </Box>\n      <DataGrid\n        sx={{ minHeight: 400, height: 'calc(100vh - 300px)'}}\n        columns={columns as any}\n        rows={listUser?.items || []}\n        filterMode={'server'}\n        sortingMode={'server'}\n        hideFooter\n        onSortModelChange={handleSort}\n        filterModel={model.filter}\n        sortModel={model.sort as GridSortItem[]}\n        onFilterModelChange={handleFilter as any}\n      />\n      {\n        listUser && listUser.items.length > 0 ?\n          <PaginationCustom\n            data={listUser}\n            handlePage={handlePage}\n            handleLimit={handleLimit}\n            limit={Number(limit)}\n          /> : null\n      }\n      <PopupDelete\n        open={openDel?.open || false}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        name={openDel?.name}\n      />\n      {\n        openModal ?\n          <ModalComponent\n            onSubmitEdit={onSubmitEdit}\n            setOpenModal={(flag) => {\n              setOpenModal(flag)\n              if (!flag) {\n                setDataEdit({})\n              }\n            }}\n            dataEdit={dataEdit}\n          /> : null\n      }\n      {\n        loading ? <Loading /> : null\n      }\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '80%',\n  margin: theme.spacing(5, 'auto')\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom'\nimport Dashboard from 'pages/Dashboard'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Login from 'pages/Login'\nimport ResetPassword from 'pages/ResetPassword'\nimport Workspaces from 'pages/Workspace'\nimport Workspace from 'pages/Workspace/Workspace'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Layout from 'components/Layout'\nimport Experiments from 'pages/Database/Experiments'\nimport PublicExperiments from 'pages/PublicDatabase/PublicExperiments'\nimport PublicCells from 'pages/PublicDatabase/PublicCells'\nimport Cells from 'pages/Database/Cells'\nimport AccountManager from \"./pages/AccountManager\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          {IS_STANDALONE ? (\n            <Routes>\n              <Route path=\"/\" element={<Workspace />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<Navigate replace to=\"/experiments\" />}\n              />\n              <Route path=\"/experiments\" element={<PublicExperiments />} />\n              <Route path=\"/cells\" element={<PublicCells />} />\n              <Route path=\"/account-deleted\" element={<AccountDelete />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/reset-password\" element={<ResetPassword />} />\n              <Route path=\"/console\" element={<Dashboard />} />\n              <Route path=\"/console/account\" element={<Account />} />\n              <Route path=\"/console/account-manager\" element={<AccountManager />} />\n              <Route path=\"/console/experiments\" element={<Experiments />} />\n              <Route path=\"/console/cells\" element={<Cells />} />\n              <Route path=\"/console/workspaces\">\n                <Route path=\"\" element={<Workspaces />} />\n                <Route path=\":workspaceId\" element={<Workspace />} />\n              </Route>\n              <Route path=\"/console/*\" element={<Navigate replace to=\"/console\" />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          )}\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n  getHistogramData,\n  getLineData,\n  getPieData,\n  getPolarData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n  histogram: {},\n  line: {},\n  pie: {},\n  polar: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHistogramData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHistogramData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHistogramData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getLineData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getLineData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getLineData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getPieData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: [],\n          columns: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getPieData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: [],\n          columns: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getPieData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getPolarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getPolarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getPolarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  } else if (dataType === DATA_TYPE_SET.HISTOGRAM) {\n    delete state.histogram[filePath]\n  } else if (dataType === DATA_TYPE_SET.LINE) {\n    delete state.line[filePath]\n  } else if (dataType === DATA_TYPE_SET.PIE) {\n    delete state.pie[filePath]\n  } else if (dataType === DATA_TYPE_SET.POLAR) {\n    delete state.polar[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchExperiment.pending, (state, action) => initialState)\n      .addCase(getFilesTree.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType].tree = convertToTreeNodeType(action.payload)\n        state[fileType].isLatest = true\n        state[fileType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.MATLAB) {\n          if (state[FILE_TREE_TYPE_SET.MATLAB] != null) {\n            state[FILE_TREE_TYPE_SET.MATLAB].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.MATLAB] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.EXPDB) {\n          if (state[FILE_TREE_TYPE_SET.EXPDB] != null) {\n            state[FILE_TREE_TYPE_SET.EXPDB].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.EXPDB] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.MATLAB) {\n          state[FILE_TREE_TYPE_SET.MATLAB].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.EXPDB) {\n          state[FILE_TREE_TYPE_SET.EXPDB].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n    ExpDbData: MuiColors.blue[300],\n    StatData: MuiColors.blue[800],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  getExperimentsDatabase,\n  getCellsDatabase,\n  getExperimentsPublicDatabase,\n  getCellsPublicDatabase,\n  getListUserShare,\n  postListUserShare, postPublish,\n} from './DatabaseActions'\nimport { DATABASE_SLICE_NAME, DatabaseDTO, ListShare } from './DatabaseType'\n\nconst initData = {\n  offset: 0,\n  total: 0,\n  limit: 50,\n  header: {\n    graph_titles: [],\n  },\n  items: [],\n}\n\nexport type TypeData = {\n  public: DatabaseDTO\n  private: DatabaseDTO\n}\n\nexport const initialState: {\n  data: TypeData\n  loading: boolean\n  type: 'experiment' | 'cell'\n  listShare?: {\n    share_type: number\n    users: ListShare[]\n  }\n} = {\n  data: {\n    public: initData,\n    private: initData,\n  },\n  loading: false,\n  type: 'experiment',\n  listShare: undefined\n}\n\nexport const databaseSlice = createSlice({\n  name: DATABASE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperimentsDatabase.pending, (state, action) => {\n        if (state.type === 'cell') {\n          state.data.private = initData\n          state.type = 'experiment'\n        }\n        state.loading = true\n      })\n      .addCase(getCellsDatabase.pending, (state, action) => {\n        if (state.type === 'experiment') {\n          state.data.private = initData\n          state.type = 'cell'\n        }\n        state.loading = true\n      })\n      .addCase(getExperimentsPublicDatabase.pending, (state, action) => {\n        if (state.type === 'cell') {\n          state.data.public = initData\n          state.type = 'experiment'\n        }\n        state.loading = true\n      })\n      .addCase(getCellsPublicDatabase.pending, (state, action) => {\n        if (state.type === 'experiment') {\n          state.data.public = initData\n          state.type = 'cell'\n        }\n        state.loading = true\n      })\n      .addCase(getListUserShare.pending, (state, action) => {\n        state.listShare = undefined\n        state.loading = true\n      })\n      .addMatcher(\n        isAnyOf(\n          postListUserShare.pending,\n            postPublish.pending\n        ),\n        (state, action) => {\n          state.loading = true\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          postPublish.fulfilled,\n          postPublish.rejected\n        ),\n        (state, _action) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getCellsDatabase.fulfilled,\n          getExperimentsDatabase.fulfilled,\n        ),\n        (state, action) => {\n          state.data.private = action.payload\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getCellsPublicDatabase.fulfilled,\n          getExperimentsPublicDatabase.fulfilled,\n        ),\n        (state, action) => {\n          state.data.public = action.payload\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getListUserShare.fulfilled,\n        ),\n        (state, action) => {\n          state.listShare = action.payload\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getExperimentsDatabase.rejected,\n          getCellsDatabase.rejected,\n          getExperimentsPublicDatabase.rejected,\n          getCellsPublicDatabase.rejected,\n          getListUserShare.rejected,\n          postListUserShare.rejected,\n          postListUserShare.fulfilled\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n  },\n})\n\nexport default databaseSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  workspaceReducer,\n  userReducer,\n  databaseReducer,\n} from './slice'\nimport { DATABASE_SLICE_NAME } from './slice/Database/DatabaseType'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  workspace: workspaceReducer,\n  user: userReducer,\n  [DATABASE_SLICE_NAME]: databaseReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}